(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function n(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=n(r);fetch(r.href,s)}})();/**
* @vue/shared v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function vf(e){const t=Object.create(null);for(const n of e.split(","))t[n]=1;return n=>n in t}const Ye={},us=[],Hn=()=>{},o_=()=>!1,bl=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),xf=e=>e.startsWith("onUpdate:"),It=Object.assign,_f=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},a_=Object.prototype.hasOwnProperty,Ve=(e,t)=>a_.call(e,t),Ae=Array.isArray,hs=e=>wl(e)==="[object Map]",hg=e=>wl(e)==="[object Set]",Re=e=>typeof e=="function",mt=e=>typeof e=="string",$i=e=>typeof e=="symbol",ot=e=>e!==null&&typeof e=="object",fg=e=>(ot(e)||Re(e))&&Re(e.then)&&Re(e.catch),dg=Object.prototype.toString,wl=e=>dg.call(e),c_=e=>wl(e).slice(8,-1),pg=e=>wl(e)==="[object Object]",bf=e=>mt(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,co=vf(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Ml=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},l_=/-(\w)/g,ln=Ml(e=>e.replace(l_,(t,n)=>n?n.toUpperCase():"")),u_=/\B([A-Z])/g,Ir=Ml(e=>e.replace(u_,"-$1").toLowerCase()),Sl=Ml(e=>e.charAt(0).toUpperCase()+e.slice(1)),Kl=Ml(e=>e?`on${Sl(e)}`:""),Ni=(e,t)=>!Object.is(e,t),Ac=(e,...t)=>{for(let n=0;n<e.length;n++)e[n](...t)},rh=(e,t,n,i=!1)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,writable:i,value:n})},sh=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let Xd;const Tl=()=>Xd||(Xd=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function wf(e){if(Ae(e)){const t={};for(let n=0;n<e.length;n++){const i=e[n],r=mt(i)?p_(i):wf(i);if(r)for(const s in r)t[s]=r[s]}return t}else if(mt(e)||ot(e))return e}const h_=/;(?![^(]*\))/g,f_=/:([^]+)/,d_=/\/\*[^]*?\*\//g;function p_(e){const t={};return e.replace(d_,"").split(h_).forEach(n=>{if(n){const i=n.split(f_);i.length>1&&(t[i[0].trim()]=i[1].trim())}}),t}function Mf(e){let t="";if(mt(e))t=e;else if(Ae(e))for(let n=0;n<e.length;n++){const i=Mf(e[n]);i&&(t+=i+" ")}else if(ot(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const m_="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",g_=vf(m_);function mg(e){return!!e||e===""}const gg=e=>!!(e&&e.__v_isRef===!0),xr=e=>mt(e)?e:e==null?"":Ae(e)||ot(e)&&(e.toString===dg||!Re(e.toString))?gg(e)?xr(e.value):JSON.stringify(e,yg,2):String(e),yg=(e,t)=>gg(t)?yg(e,t.value):hs(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[i,r],s)=>(n[Ql(i,s)+" =>"]=r,n),{})}:hg(t)?{[`Set(${t.size})`]:[...t.values()].map(n=>Ql(n))}:$i(t)?Ql(t):ot(t)&&!Ae(t)&&!pg(t)?String(t):t,Ql=(e,t="")=>{var n;return $i(e)?`Symbol(${(n=e.description)!=null?n:t})`:e};/**
* @vue/reactivity v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let St;class vg{constructor(t=!1){this.detached=t,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=St,!t&&St&&(this.index=(St.scopes||(St.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let t,n;if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].pause();for(t=0,n=this.effects.length;t<n;t++)this.effects[t].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let t,n;if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].resume();for(t=0,n=this.effects.length;t<n;t++)this.effects[t].resume()}}run(t){if(this._active){const n=St;try{return St=this,t()}finally{St=n}}}on(){++this._on===1&&(this.prevScope=St,St=this)}off(){this._on>0&&--this._on===0&&(St=this.prevScope,this.prevScope=void 0)}stop(t){if(this._active){this._active=!1;let n,i;for(n=0,i=this.effects.length;n<i;n++)this.effects[n].stop();for(this.effects.length=0,n=0,i=this.cleanups.length;n<i;n++)this.cleanups[n]();if(this.cleanups.length=0,this.scopes){for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!t){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function y_(e){return new vg(e)}function xg(){return St}function v_(e,t=!1){St&&St.cleanups.push(e)}let Ke;const eu=new WeakSet;class _g{constructor(t){this.fn=t,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,St&&St.active&&St.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,eu.has(this)&&(eu.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||wg(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Yd(this),Mg(this);const t=Ke,n=wn;Ke=this,wn=!0;try{return this.fn()}finally{Sg(this),Ke=t,wn=n,this.flags&=-3}}stop(){if(this.flags&1){for(let t=this.deps;t;t=t.nextDep)Ef(t);this.deps=this.depsTail=void 0,Yd(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?eu.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){oh(this)&&this.run()}get dirty(){return oh(this)}}let bg=0,lo,uo;function wg(e,t=!1){if(e.flags|=8,t){e.next=uo,uo=e;return}e.next=lo,lo=e}function Sf(){bg++}function Tf(){if(--bg>0)return;if(uo){let t=uo;for(uo=void 0;t;){const n=t.next;t.next=void 0,t.flags&=-9,t=n}}let e;for(;lo;){let t=lo;for(lo=void 0;t;){const n=t.next;if(t.next=void 0,t.flags&=-9,t.flags&1)try{t.trigger()}catch(i){e||(e=i)}t=n}}if(e)throw e}function Mg(e){for(let t=e.deps;t;t=t.nextDep)t.version=-1,t.prevActiveLink=t.dep.activeLink,t.dep.activeLink=t}function Sg(e){let t,n=e.depsTail,i=n;for(;i;){const r=i.prevDep;i.version===-1?(i===n&&(n=r),Ef(i),x_(i)):t=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=r}e.deps=t,e.depsTail=n}function oh(e){for(let t=e.deps;t;t=t.nextDep)if(t.dep.version!==t.version||t.dep.computed&&(Tg(t.dep.computed)||t.dep.version!==t.version))return!0;return!!e._dirty}function Tg(e){if(e.flags&4&&!(e.flags&16)||(e.flags&=-17,e.globalVersion===Po)||(e.globalVersion=Po,!e.isSSR&&e.flags&128&&(!e.deps&&!e._dirty||!oh(e))))return;e.flags|=2;const t=e.dep,n=Ke,i=wn;Ke=e,wn=!0;try{Mg(e);const r=e.fn(e._value);(t.version===0||Ni(r,e._value))&&(e.flags|=128,e._value=r,t.version++)}catch(r){throw t.version++,r}finally{Ke=n,wn=i,Sg(e),e.flags&=-3}}function Ef(e,t=!1){const{dep:n,prevSub:i,nextSub:r}=e;if(i&&(i.nextSub=r,e.prevSub=void 0),r&&(r.prevSub=i,e.nextSub=void 0),n.subs===e&&(n.subs=i,!i&&n.computed)){n.computed.flags&=-5;for(let s=n.computed.deps;s;s=s.nextDep)Ef(s,!0)}!t&&!--n.sc&&n.map&&n.map.delete(n.key)}function x_(e){const{prevDep:t,nextDep:n}=e;t&&(t.nextDep=n,e.prevDep=void 0),n&&(n.prevDep=t,e.nextDep=void 0)}let wn=!0;const Eg=[];function pi(){Eg.push(wn),wn=!1}function mi(){const e=Eg.pop();wn=e===void 0?!0:e}function Yd(e){const{cleanup:t}=e;if(e.cleanup=void 0,t){const n=Ke;Ke=void 0;try{t()}finally{Ke=n}}}let Po=0;class __{constructor(t,n){this.sub=t,this.dep=n,this.version=n.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Af{constructor(t){this.computed=t,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(t){if(!Ke||!wn||Ke===this.computed)return;let n=this.activeLink;if(n===void 0||n.sub!==Ke)n=this.activeLink=new __(Ke,this),Ke.deps?(n.prevDep=Ke.depsTail,Ke.depsTail.nextDep=n,Ke.depsTail=n):Ke.deps=Ke.depsTail=n,Ag(n);else if(n.version===-1&&(n.version=this.version,n.nextDep)){const i=n.nextDep;i.prevDep=n.prevDep,n.prevDep&&(n.prevDep.nextDep=i),n.prevDep=Ke.depsTail,n.nextDep=void 0,Ke.depsTail.nextDep=n,Ke.depsTail=n,Ke.deps===n&&(Ke.deps=i)}return n}trigger(t){this.version++,Po++,this.notify(t)}notify(t){Sf();try{for(let n=this.subs;n;n=n.prevSub)n.sub.notify()&&n.sub.dep.notify()}finally{Tf()}}}function Ag(e){if(e.dep.sc++,e.sub.flags&4){const t=e.dep.computed;if(t&&!e.dep.subs){t.flags|=20;for(let i=t.deps;i;i=i.nextDep)Ag(i)}const n=e.dep.subs;n!==e&&(e.prevSub=n,n&&(n.nextSub=e)),e.dep.subs=e}}const ah=new WeakMap,gr=Symbol(""),ch=Symbol(""),Io=Symbol("");function Tt(e,t,n){if(wn&&Ke){let i=ah.get(e);i||ah.set(e,i=new Map);let r=i.get(n);r||(i.set(n,r=new Af),r.map=i,r.key=n),r.track()}}function si(e,t,n,i,r,s){const o=ah.get(e);if(!o){Po++;return}const a=c=>{c&&c.trigger()};if(Sf(),t==="clear")o.forEach(a);else{const c=Ae(e),l=c&&bf(n);if(c&&n==="length"){const h=Number(i);o.forEach((u,f)=>{(f==="length"||f===Io||!$i(f)&&f>=h)&&a(u)})}else switch((n!==void 0||o.has(void 0))&&a(o.get(n)),l&&a(o.get(Io)),t){case"add":c?l&&a(o.get("length")):(a(o.get(gr)),hs(e)&&a(o.get(ch)));break;case"delete":c||(a(o.get(gr)),hs(e)&&a(o.get(ch)));break;case"set":hs(e)&&a(o.get(gr));break}}Tf()}function Br(e){const t=ze(e);return t===e?t:(Tt(t,"iterate",Io),Mn(e)?t:t.map(Ft))}function Rf(e){return Tt(e=ze(e),"iterate",Io),e}const b_={__proto__:null,[Symbol.iterator](){return tu(this,Symbol.iterator,Ft)},concat(...e){return Br(this).concat(...e.map(t=>Ae(t)?Br(t):t))},entries(){return tu(this,"entries",e=>(e[1]=Ft(e[1]),e))},every(e,t){return Jn(this,"every",e,t,void 0,arguments)},filter(e,t){return Jn(this,"filter",e,t,n=>n.map(Ft),arguments)},find(e,t){return Jn(this,"find",e,t,Ft,arguments)},findIndex(e,t){return Jn(this,"findIndex",e,t,void 0,arguments)},findLast(e,t){return Jn(this,"findLast",e,t,Ft,arguments)},findLastIndex(e,t){return Jn(this,"findLastIndex",e,t,void 0,arguments)},forEach(e,t){return Jn(this,"forEach",e,t,void 0,arguments)},includes(...e){return nu(this,"includes",e)},indexOf(...e){return nu(this,"indexOf",e)},join(e){return Br(this).join(e)},lastIndexOf(...e){return nu(this,"lastIndexOf",e)},map(e,t){return Jn(this,"map",e,t,void 0,arguments)},pop(){return js(this,"pop")},push(...e){return js(this,"push",e)},reduce(e,...t){return $d(this,"reduce",e,t)},reduceRight(e,...t){return $d(this,"reduceRight",e,t)},shift(){return js(this,"shift")},some(e,t){return Jn(this,"some",e,t,void 0,arguments)},splice(...e){return js(this,"splice",e)},toReversed(){return Br(this).toReversed()},toSorted(e){return Br(this).toSorted(e)},toSpliced(...e){return Br(this).toSpliced(...e)},unshift(...e){return js(this,"unshift",e)},values(){return tu(this,"values",Ft)}};function tu(e,t,n){const i=Rf(e),r=i[t]();return i!==e&&!Mn(e)&&(r._next=r.next,r.next=()=>{const s=r._next();return s.value&&(s.value=n(s.value)),s}),r}const w_=Array.prototype;function Jn(e,t,n,i,r,s){const o=Rf(e),a=o!==e&&!Mn(e),c=o[t];if(c!==w_[t]){const u=c.apply(e,s);return a?Ft(u):u}let l=n;o!==e&&(a?l=function(u,f){return n.call(this,Ft(u),f,e)}:n.length>2&&(l=function(u,f){return n.call(this,u,f,e)}));const h=c.call(o,l,i);return a&&r?r(h):h}function $d(e,t,n,i){const r=Rf(e);let s=n;return r!==e&&(Mn(e)?n.length>3&&(s=function(o,a,c){return n.call(this,o,a,c,e)}):s=function(o,a,c){return n.call(this,o,Ft(a),c,e)}),r[t](s,...i)}function nu(e,t,n){const i=ze(e);Tt(i,"iterate",Io);const r=i[t](...n);return(r===-1||r===!1)&&Pf(n[0])?(n[0]=ze(n[0]),i[t](...n)):r}function js(e,t,n=[]){pi(),Sf();const i=ze(e)[t].apply(e,n);return Tf(),mi(),i}const M_=vf("__proto__,__v_isRef,__isVue"),Rg=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter($i));function S_(e){$i(e)||(e=String(e));const t=ze(this);return Tt(t,"has",e),t.hasOwnProperty(e)}class Cg{constructor(t=!1,n=!1){this._isReadonly=t,this._isShallow=n}get(t,n,i){if(n==="__v_skip")return t.__v_skip;const r=this._isReadonly,s=this._isShallow;if(n==="__v_isReactive")return!r;if(n==="__v_isReadonly")return r;if(n==="__v_isShallow")return s;if(n==="__v_raw")return i===(r?s?D_:Og:s?Ig:Pg).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(i)?t:void 0;const o=Ae(t);if(!r){let c;if(o&&(c=b_[n]))return c;if(n==="hasOwnProperty")return S_}const a=Reflect.get(t,n,At(t)?t:i);return($i(n)?Rg.has(n):M_(n))||(r||Tt(t,"get",n),s)?a:At(a)?o&&bf(n)?a:a.value:ot(a)?r?Ng(a):Zi(a):a}}class Lg extends Cg{constructor(t=!1){super(!1,t)}set(t,n,i,r){let s=t[n];if(!this._isShallow){const c=_r(s);if(!Mn(i)&&!_r(i)&&(s=ze(s),i=ze(i)),!Ae(t)&&At(s)&&!At(i))return c?!1:(s.value=i,!0)}const o=Ae(t)&&bf(n)?Number(n)<t.length:Ve(t,n),a=Reflect.set(t,n,i,At(t)?t:r);return t===ze(r)&&(o?Ni(i,s)&&si(t,"set",n,i):si(t,"add",n,i)),a}deleteProperty(t,n){const i=Ve(t,n);t[n];const r=Reflect.deleteProperty(t,n);return r&&i&&si(t,"delete",n,void 0),r}has(t,n){const i=Reflect.has(t,n);return(!$i(n)||!Rg.has(n))&&Tt(t,"has",n),i}ownKeys(t){return Tt(t,"iterate",Ae(t)?"length":gr),Reflect.ownKeys(t)}}class T_ extends Cg{constructor(t=!1){super(!0,t)}set(t,n){return!0}deleteProperty(t,n){return!0}}const E_=new Lg,A_=new T_,R_=new Lg(!0);const lh=e=>e,Pa=e=>Reflect.getPrototypeOf(e);function C_(e,t,n){return function(...i){const r=this.__v_raw,s=ze(r),o=hs(s),a=e==="entries"||e===Symbol.iterator&&o,c=e==="keys"&&o,l=r[e](...i),h=n?lh:t?uh:Ft;return!t&&Tt(s,"iterate",c?ch:gr),{next(){const{value:u,done:f}=l.next();return f?{value:u,done:f}:{value:a?[h(u[0]),h(u[1])]:h(u),done:f}},[Symbol.iterator](){return this}}}}function Ia(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function L_(e,t){const n={get(r){const s=this.__v_raw,o=ze(s),a=ze(r);e||(Ni(r,a)&&Tt(o,"get",r),Tt(o,"get",a));const{has:c}=Pa(o),l=t?lh:e?uh:Ft;if(c.call(o,r))return l(s.get(r));if(c.call(o,a))return l(s.get(a));s!==o&&s.get(r)},get size(){const r=this.__v_raw;return!e&&Tt(ze(r),"iterate",gr),Reflect.get(r,"size",r)},has(r){const s=this.__v_raw,o=ze(s),a=ze(r);return e||(Ni(r,a)&&Tt(o,"has",r),Tt(o,"has",a)),r===a?s.has(r):s.has(r)||s.has(a)},forEach(r,s){const o=this,a=o.__v_raw,c=ze(a),l=t?lh:e?uh:Ft;return!e&&Tt(c,"iterate",gr),a.forEach((h,u)=>r.call(s,l(h),l(u),o))}};return It(n,e?{add:Ia("add"),set:Ia("set"),delete:Ia("delete"),clear:Ia("clear")}:{add(r){!t&&!Mn(r)&&!_r(r)&&(r=ze(r));const s=ze(this);return Pa(s).has.call(s,r)||(s.add(r),si(s,"add",r,r)),this},set(r,s){!t&&!Mn(s)&&!_r(s)&&(s=ze(s));const o=ze(this),{has:a,get:c}=Pa(o);let l=a.call(o,r);l||(r=ze(r),l=a.call(o,r));const h=c.call(o,r);return o.set(r,s),l?Ni(s,h)&&si(o,"set",r,s):si(o,"add",r,s),this},delete(r){const s=ze(this),{has:o,get:a}=Pa(s);let c=o.call(s,r);c||(r=ze(r),c=o.call(s,r)),a&&a.call(s,r);const l=s.delete(r);return c&&si(s,"delete",r,void 0),l},clear(){const r=ze(this),s=r.size!==0,o=r.clear();return s&&si(r,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(r=>{n[r]=C_(r,e,t)}),n}function Cf(e,t){const n=L_(e,t);return(i,r,s)=>r==="__v_isReactive"?!e:r==="__v_isReadonly"?e:r==="__v_raw"?i:Reflect.get(Ve(n,r)&&r in i?n:i,r,s)}const P_={get:Cf(!1,!1)},I_={get:Cf(!1,!0)},O_={get:Cf(!0,!1)};const Pg=new WeakMap,Ig=new WeakMap,Og=new WeakMap,D_=new WeakMap;function N_(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function F_(e){return e.__v_skip||!Object.isExtensible(e)?0:N_(c_(e))}function Zi(e){return _r(e)?e:Lf(e,!1,E_,P_,Pg)}function Dg(e){return Lf(e,!1,R_,I_,Ig)}function Ng(e){return Lf(e,!0,A_,O_,Og)}function Lf(e,t,n,i,r){if(!ot(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const s=F_(e);if(s===0)return e;const o=r.get(e);if(o)return o;const a=new Proxy(e,s===2?i:n);return r.set(e,a),a}function ho(e){return _r(e)?ho(e.__v_raw):!!(e&&e.__v_isReactive)}function _r(e){return!!(e&&e.__v_isReadonly)}function Mn(e){return!!(e&&e.__v_isShallow)}function Pf(e){return e?!!e.__v_raw:!1}function ze(e){const t=e&&e.__v_raw;return t?ze(t):e}function Fg(e){return!Ve(e,"__v_skip")&&Object.isExtensible(e)&&rh(e,"__v_skip",!0),e}const Ft=e=>ot(e)?Zi(e):e,uh=e=>ot(e)?Ng(e):e;function At(e){return e?e.__v_isRef===!0:!1}function Rt(e){return Bg(e,!1)}function If(e){return Bg(e,!0)}function Bg(e,t){return At(e)?e:new B_(e,t)}class B_{constructor(t,n){this.dep=new Af,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=n?t:ze(t),this._value=n?t:Ft(t),this.__v_isShallow=n}get value(){return this.dep.track(),this._value}set value(t){const n=this._rawValue,i=this.__v_isShallow||Mn(t)||_r(t);t=i?t:ze(t),Ni(t,n)&&(this._rawValue=t,this._value=i?t:Ft(t),this.dep.trigger())}}function Gt(e){return At(e)?e.value:e}function fo(e){return Re(e)?e():Gt(e)}const U_={get:(e,t,n)=>t==="__v_raw"?e:Gt(Reflect.get(e,t,n)),set:(e,t,n,i)=>{const r=e[t];return At(r)&&!At(n)?(r.value=n,!0):Reflect.set(e,t,n,i)}};function Ug(e){return ho(e)?e:new Proxy(e,U_)}class z_{constructor(t,n,i){this.fn=t,this.setter=n,this._value=void 0,this.dep=new Af(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Po-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!n,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&Ke!==this)return wg(this,!0),!0}get value(){const t=this.dep.track();return Tg(this),t&&(t.version=this.dep.version),this._value}set value(t){this.setter&&this.setter(t)}}function H_(e,t,n=!1){let i,r;return Re(e)?i=e:(i=e.get,r=e.set),new z_(i,r,n)}const Oa={},Fc=new WeakMap;let ur;function G_(e,t=!1,n=ur){if(n){let i=Fc.get(n);i||Fc.set(n,i=[]),i.push(e)}}function V_(e,t,n=Ye){const{immediate:i,deep:r,once:s,scheduler:o,augmentJob:a,call:c}=n,l=_=>r?_:Mn(_)||r===!1||r===0?oi(_,1):oi(_);let h,u,f,d,p=!1,y=!1;if(At(e)?(u=()=>e.value,p=Mn(e)):ho(e)?(u=()=>l(e),p=!0):Ae(e)?(y=!0,p=e.some(_=>ho(_)||Mn(_)),u=()=>e.map(_=>{if(At(_))return _.value;if(ho(_))return l(_);if(Re(_))return c?c(_,2):_()})):Re(e)?t?u=c?()=>c(e,2):e:u=()=>{if(f){pi();try{f()}finally{mi()}}const _=ur;ur=h;try{return c?c(e,3,[d]):e(d)}finally{ur=_}}:u=Hn,t&&r){const _=u,T=r===!0?1/0:r;u=()=>oi(_(),T)}const v=xg(),g=()=>{h.stop(),v&&v.active&&_f(v.effects,h)};if(s&&t){const _=t;t=(...T)=>{_(...T),g()}}let m=y?new Array(e.length).fill(Oa):Oa;const x=_=>{if(!(!(h.flags&1)||!h.dirty&&!_))if(t){const T=h.run();if(r||p||(y?T.some((b,L)=>Ni(b,m[L])):Ni(T,m))){f&&f();const b=ur;ur=h;try{const L=[T,m===Oa?void 0:y&&m[0]===Oa?[]:m,d];m=T,c?c(t,3,L):t(...L)}finally{ur=b}}}else h.run()};return a&&a(x),h=new _g(u),h.scheduler=o?()=>o(x,!1):x,d=_=>G_(_,!1,h),f=h.onStop=()=>{const _=Fc.get(h);if(_){if(c)c(_,4);else for(const T of _)T();Fc.delete(h)}},t?i?x(!0):m=h.run():o?o(x.bind(null,!0),!0):h.run(),g.pause=h.pause.bind(h),g.resume=h.resume.bind(h),g.stop=g,g}function oi(e,t=1/0,n){if(t<=0||!ot(e)||e.__v_skip||(n=n||new Set,n.has(e)))return e;if(n.add(e),t--,At(e))oi(e.value,t,n);else if(Ae(e))for(let i=0;i<e.length;i++)oi(e[i],t,n);else if(hg(e)||hs(e))e.forEach(i=>{oi(i,t,n)});else if(pg(e)){for(const i in e)oi(e[i],t,n);for(const i of Object.getOwnPropertySymbols(e))Object.prototype.propertyIsEnumerable.call(e,i)&&oi(e[i],t,n)}return e}/**
* @vue/runtime-core v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function ha(e,t,n,i){try{return i?e(...i):e()}catch(r){El(r,t,n)}}function Gn(e,t,n,i){if(Re(e)){const r=ha(e,t,n,i);return r&&fg(r)&&r.catch(s=>{El(s,t,n)}),r}if(Ae(e)){const r=[];for(let s=0;s<e.length;s++)r.push(Gn(e[s],t,n,i));return r}}function El(e,t,n,i=!0){const r=t?t.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:o}=t&&t.appContext.config||Ye;if(t){let a=t.parent;const c=t.proxy,l=`https://vuejs.org/error-reference/#runtime-${n}`;for(;a;){const h=a.ec;if(h){for(let u=0;u<h.length;u++)if(h[u](e,c,l)===!1)return}a=a.parent}if(s){pi(),ha(s,null,10,[e,c,l]),mi();return}}k_(e,n,r,i,o)}function k_(e,t,n,i=!0,r=!1){if(r)throw e;console.error(e)}const Bt=[];let Nn=-1;const fs=[];let Li=null,ns=0;const zg=Promise.resolve();let Bc=null;function Hg(e){const t=Bc||zg;return e?t.then(this?e.bind(this):e):t}function W_(e){let t=Nn+1,n=Bt.length;for(;t<n;){const i=t+n>>>1,r=Bt[i],s=Oo(r);s<e||s===e&&r.flags&2?t=i+1:n=i}return t}function Of(e){if(!(e.flags&1)){const t=Oo(e),n=Bt[Bt.length-1];!n||!(e.flags&2)&&t>=Oo(n)?Bt.push(e):Bt.splice(W_(t),0,e),e.flags|=1,Gg()}}function Gg(){Bc||(Bc=zg.then(kg))}function j_(e){Ae(e)?fs.push(...e):Li&&e.id===-1?Li.splice(ns+1,0,e):e.flags&1||(fs.push(e),e.flags|=1),Gg()}function Zd(e,t,n=Nn+1){for(;n<Bt.length;n++){const i=Bt[n];if(i&&i.flags&2){if(e&&i.id!==e.uid)continue;Bt.splice(n,1),n--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function Vg(e){if(fs.length){const t=[...new Set(fs)].sort((n,i)=>Oo(n)-Oo(i));if(fs.length=0,Li){Li.push(...t);return}for(Li=t,ns=0;ns<Li.length;ns++){const n=Li[ns];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}Li=null,ns=0}}const Oo=e=>e.id==null?e.flags&2?-1:1/0:e.id;function kg(e){try{for(Nn=0;Nn<Bt.length;Nn++){const t=Bt[Nn];t&&!(t.flags&8)&&(t.flags&4&&(t.flags&=-2),ha(t,t.i,t.i?15:14),t.flags&4||(t.flags&=-2))}}finally{for(;Nn<Bt.length;Nn++){const t=Bt[Nn];t&&(t.flags&=-2)}Nn=-1,Bt.length=0,Vg(),Bc=null,(Bt.length||fs.length)&&kg()}}let Jt=null,Wg=null;function Uc(e){const t=Jt;return Jt=e,Wg=e&&e.type.__scopeId||null,t}function q_(e,t=Jt,n){if(!t||e._n)return e;const i=(...r)=>{i._d&&ap(-1);const s=Uc(t);let o;try{o=e(...r)}finally{Uc(s),i._d&&ap(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function hh(e,t){if(Jt===null)return e;const n=Il(Jt),i=e.dirs||(e.dirs=[]);for(let r=0;r<t.length;r++){let[s,o,a,c=Ye]=t[r];s&&(Re(s)&&(s={mounted:s,updated:s}),s.deep&&oi(o),i.push({dir:s,instance:n,value:o,oldValue:void 0,arg:a,modifiers:c}))}return e}function Ki(e,t,n,i){const r=e.dirs,s=t&&t.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let c=a.dir[i];c&&(pi(),Gn(c,n,8,[e.el,a,e,t]),mi())}}const X_=Symbol("_vte"),Y_=e=>e.__isTeleport;function Df(e,t){e.shapeFlag&6&&e.component?(e.transition=t,Df(e.component.subTree,t)):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}/*! #__NO_SIDE_EFFECTS__ */function Al(e,t){return Re(e)?It({name:e.name},t,{setup:e}):e}function jg(e){e.ids=[e.ids[0]+e.ids[2]+++"-",0,0]}function po(e,t,n,i,r=!1){if(Ae(e)){e.forEach((p,y)=>po(p,t&&(Ae(t)?t[y]:t),n,i,r));return}if(mo(i)&&!r){i.shapeFlag&512&&i.type.__asyncResolved&&i.component.subTree.component&&po(e,t,n,i.component.subTree);return}const s=i.shapeFlag&4?Il(i.component):i.el,o=r?null:s,{i:a,r:c}=e,l=t&&t.r,h=a.refs===Ye?a.refs={}:a.refs,u=a.setupState,f=ze(u),d=u===Ye?()=>!1:p=>Ve(f,p);if(l!=null&&l!==c&&(mt(l)?(h[l]=null,d(l)&&(u[l]=null)):At(l)&&(l.value=null)),Re(c))ha(c,a,12,[o,h]);else{const p=mt(c),y=At(c);if(p||y){const v=()=>{if(e.f){const g=p?d(c)?u[c]:h[c]:c.value;r?Ae(g)&&_f(g,s):Ae(g)?g.includes(s)||g.push(s):p?(h[c]=[s],d(c)&&(u[c]=h[c])):(c.value=[s],e.k&&(h[e.k]=c.value))}else p?(h[c]=o,d(c)&&(u[c]=o)):y&&(c.value=o,e.k&&(h[e.k]=o))};o?(v.id=-1,Zt(v,n)):v()}}}Tl().requestIdleCallback;Tl().cancelIdleCallback;const mo=e=>!!e.type.__asyncLoader,qg=e=>e.type.__isKeepAlive;function $_(e,t){Xg(e,"a",t)}function Z_(e,t){Xg(e,"da",t)}function Xg(e,t,n=Et){const i=e.__wdc||(e.__wdc=()=>{let r=n;for(;r;){if(r.isDeactivated)return;r=r.parent}return e()});if(Rl(t,i,n),n){let r=n.parent;for(;r&&r.parent;)qg(r.parent.vnode)&&J_(i,t,n,r),r=r.parent}}function J_(e,t,n,i){const r=Rl(t,e,i,!0);Nf(()=>{_f(i[t],r)},n)}function Rl(e,t,n=Et,i=!1){if(n){const r=n[e]||(n[e]=[]),s=t.__weh||(t.__weh=(...o)=>{pi();const a=fa(n),c=Gn(t,n,e,o);return a(),mi(),c});return i?r.unshift(s):r.push(s),s}}const vi=e=>(t,n=Et)=>{(!No||e==="sp")&&Rl(e,(...i)=>t(...i),n)},K_=vi("bm"),Yg=vi("m"),Q_=vi("bu"),eb=vi("u"),tb=vi("bum"),Nf=vi("um"),nb=vi("sp"),ib=vi("rtg"),rb=vi("rtc");function sb(e,t=Et){Rl("ec",e,t)}const $g="components",ob="directives";function ab(e,t){return Zg($g,e,!0,t)||e}const cb=Symbol.for("v-ndc");function Jd(e){return Zg(ob,e)}function Zg(e,t,n=!0,i=!1){const r=Jt||Et;if(r){const s=r.type;if(e===$g){const a=$b(s,!1);if(a&&(a===t||a===ln(t)||a===Sl(ln(t))))return s}const o=Kd(r[e]||s[e],t)||Kd(r.appContext[e],t);return!o&&i?s:o}}function Kd(e,t){return e&&(e[t]||e[ln(t)]||e[Sl(ln(t))])}const fh=e=>e?gy(e)?Il(e):fh(e.parent):null,go=It(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>fh(e.parent),$root:e=>fh(e.root),$host:e=>e.ce,$emit:e=>e.emit,$options:e=>Qg(e),$forceUpdate:e=>e.f||(e.f=()=>{Of(e.update)}),$nextTick:e=>e.n||(e.n=Hg.bind(e.proxy)),$watch:e=>Lb.bind(e)}),iu=(e,t)=>e!==Ye&&!e.__isScriptSetup&&Ve(e,t),lb={get({_:e},t){if(t==="__v_skip")return!0;const{ctx:n,setupState:i,data:r,props:s,accessCache:o,type:a,appContext:c}=e;let l;if(t[0]!=="$"){const d=o[t];if(d!==void 0)switch(d){case 1:return i[t];case 2:return r[t];case 4:return n[t];case 3:return s[t]}else{if(iu(i,t))return o[t]=1,i[t];if(r!==Ye&&Ve(r,t))return o[t]=2,r[t];if((l=e.propsOptions[0])&&Ve(l,t))return o[t]=3,s[t];if(n!==Ye&&Ve(n,t))return o[t]=4,n[t];dh&&(o[t]=0)}}const h=go[t];let u,f;if(h)return t==="$attrs"&&Tt(e.attrs,"get",""),h(e);if((u=a.__cssModules)&&(u=u[t]))return u;if(n!==Ye&&Ve(n,t))return o[t]=4,n[t];if(f=c.config.globalProperties,Ve(f,t))return f[t]},set({_:e},t,n){const{data:i,setupState:r,ctx:s}=e;return iu(r,t)?(r[t]=n,!0):i!==Ye&&Ve(i,t)?(i[t]=n,!0):Ve(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(s[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:i,appContext:r,propsOptions:s}},o){let a;return!!n[o]||e!==Ye&&Ve(e,o)||iu(t,o)||(a=s[0])&&Ve(a,o)||Ve(i,o)||Ve(go,o)||Ve(r.config.globalProperties,o)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:Ve(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};function Jg(){return ub().slots}function ub(e){const t=Pl();return t.setupContext||(t.setupContext=vy(t))}function Qd(e){return Ae(e)?e.reduce((t,n)=>(t[n]=null,t),{}):e}let dh=!0;function hb(e){const t=Qg(e),n=e.proxy,i=e.ctx;dh=!1,t.beforeCreate&&ep(t.beforeCreate,e,"bc");const{data:r,computed:s,methods:o,watch:a,provide:c,inject:l,created:h,beforeMount:u,mounted:f,beforeUpdate:d,updated:p,activated:y,deactivated:v,beforeDestroy:g,beforeUnmount:m,destroyed:x,unmounted:_,render:T,renderTracked:b,renderTriggered:L,errorCaptured:D,serverPrefetch:I,expose:Y,inheritAttrs:z,components:V,directives:k,filters:O}=t;if(l&&fb(l,i,null),o)for(const J in o){const te=o[J];Re(te)&&(i[J]=te.bind(n))}if(r){const J=r.call(n,n);ot(J)&&(e.data=Zi(J))}if(dh=!0,s)for(const J in s){const te=s[J],ae=Re(te)?te.bind(n,n):Re(te.get)?te.get.bind(n,n):Hn,ge=!Re(te)&&Re(te.set)?te.set.bind(n):Hn,le=ft({get:ae,set:ge});Object.defineProperty(i,J,{enumerable:!0,configurable:!0,get:()=>le.value,set:_e=>le.value=_e})}if(a)for(const J in a)Kg(a[J],i,n,J);if(c){const J=Re(c)?c.call(n):c;Reflect.ownKeys(J).forEach(te=>{Rc(te,J[te])})}h&&ep(h,e,"c");function W(J,te){Ae(te)?te.forEach(ae=>J(ae.bind(n))):te&&J(te.bind(n))}if(W(K_,u),W(Yg,f),W(Q_,d),W(eb,p),W($_,y),W(Z_,v),W(sb,D),W(rb,b),W(ib,L),W(tb,m),W(Nf,_),W(nb,I),Ae(Y))if(Y.length){const J=e.exposed||(e.exposed={});Y.forEach(te=>{Object.defineProperty(J,te,{get:()=>n[te],set:ae=>n[te]=ae,enumerable:!0})})}else e.exposed||(e.exposed={});T&&e.render===Hn&&(e.render=T),z!=null&&(e.inheritAttrs=z),V&&(e.components=V),k&&(e.directives=k),I&&jg(e)}function fb(e,t,n=Hn){Ae(e)&&(e=ph(e));for(const i in e){const r=e[i];let s;ot(r)?"default"in r?s=Sn(r.from||i,r.default,!0):s=Sn(r.from||i):s=Sn(r),At(s)?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):t[i]=s}}function ep(e,t,n){Gn(Ae(e)?e.map(i=>i.bind(t.proxy)):e.bind(t.proxy),t,n)}function Kg(e,t,n,i){let r=i.includes(".")?fy(n,i):()=>n[i];if(mt(e)){const s=t[e];Re(s)&&Ct(r,s)}else if(Re(e))Ct(r,e.bind(n));else if(ot(e))if(Ae(e))e.forEach(s=>Kg(s,t,n,i));else{const s=Re(e.handler)?e.handler.bind(n):t[e.handler];Re(s)&&Ct(r,s,e)}}function Qg(e){const t=e.type,{mixins:n,extends:i}=t,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=e.appContext,a=s.get(t);let c;return a?c=a:!r.length&&!n&&!i?c=t:(c={},r.length&&r.forEach(l=>zc(c,l,o,!0)),zc(c,t,o)),ot(t)&&s.set(t,c),c}function zc(e,t,n,i=!1){const{mixins:r,extends:s}=t;s&&zc(e,s,n,!0),r&&r.forEach(o=>zc(e,o,n,!0));for(const o in t)if(!(i&&o==="expose")){const a=db[o]||n&&n[o];e[o]=a?a(e[o],t[o]):t[o]}return e}const db={data:tp,props:np,emits:np,methods:so,computed:so,beforeCreate:Nt,created:Nt,beforeMount:Nt,mounted:Nt,beforeUpdate:Nt,updated:Nt,beforeDestroy:Nt,beforeUnmount:Nt,destroyed:Nt,unmounted:Nt,activated:Nt,deactivated:Nt,errorCaptured:Nt,serverPrefetch:Nt,components:so,directives:so,watch:mb,provide:tp,inject:pb};function tp(e,t){return t?e?function(){return It(Re(e)?e.call(this,this):e,Re(t)?t.call(this,this):t)}:t:e}function pb(e,t){return so(ph(e),ph(t))}function ph(e){if(Ae(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function Nt(e,t){return e?[...new Set([].concat(e,t))]:t}function so(e,t){return e?It(Object.create(null),e,t):t}function np(e,t){return e?Ae(e)&&Ae(t)?[...new Set([...e,...t])]:It(Object.create(null),Qd(e),Qd(t??{})):t}function mb(e,t){if(!e)return t;if(!t)return e;const n=It(Object.create(null),e);for(const i in t)n[i]=Nt(e[i],t[i]);return n}function ey(){return{app:null,config:{isNativeTag:o_,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let gb=0;function yb(e,t){return function(i,r=null){Re(i)||(i=It({},i)),r!=null&&!ot(r)&&(r=null);const s=ey(),o=new WeakSet,a=[];let c=!1;const l=s.app={_uid:gb++,_component:i,_props:r,_container:null,_context:s,_instance:null,version:Jb,get config(){return s.config},set config(h){},use(h,...u){return o.has(h)||(h&&Re(h.install)?(o.add(h),h.install(l,...u)):Re(h)&&(o.add(h),h(l,...u))),l},mixin(h){return s.mixins.includes(h)||s.mixins.push(h),l},component(h,u){return u?(s.components[h]=u,l):s.components[h]},directive(h,u){return u?(s.directives[h]=u,l):s.directives[h]},mount(h,u,f){if(!c){const d=l._ceVNode||zt(i,r);return d.appContext=s,f===!0?f="svg":f===!1&&(f=void 0),e(d,h,f),c=!0,l._container=h,h.__vue_app__=l,Il(d.component)}},onUnmount(h){a.push(h)},unmount(){c&&(Gn(a,l._instance,16),e(null,l._container),delete l._container.__vue_app__)},provide(h,u){return s.provides[h]=u,l},runWithContext(h){const u=ds;ds=l;try{return h()}finally{ds=u}}};return l}}let ds=null;function Rc(e,t){if(Et){let n=Et.provides;const i=Et.parent&&Et.parent.provides;i===n&&(n=Et.provides=Object.create(i)),n[e]=t}}function Sn(e,t,n=!1){const i=Pl();if(i||ds){let r=ds?ds._context.provides:i?i.parent==null||i.ce?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(r&&e in r)return r[e];if(arguments.length>1)return n&&Re(t)?t.call(i&&i.proxy):t}}const ty={},ny=()=>Object.create(ty),iy=e=>Object.getPrototypeOf(e)===ty;function vb(e,t,n,i=!1){const r={},s=ny();e.propsDefaults=Object.create(null),ry(e,t,r,s);for(const o in e.propsOptions[0])o in r||(r[o]=void 0);n?e.props=i?r:Dg(r):e.type.props?e.props=r:e.props=s,e.attrs=s}function xb(e,t,n,i){const{props:r,attrs:s,vnode:{patchFlag:o}}=e,a=ze(r),[c]=e.propsOptions;let l=!1;if((i||o>0)&&!(o&16)){if(o&8){const h=e.vnode.dynamicProps;for(let u=0;u<h.length;u++){let f=h[u];if(Cl(e.emitsOptions,f))continue;const d=t[f];if(c)if(Ve(s,f))d!==s[f]&&(s[f]=d,l=!0);else{const p=ln(f);r[p]=mh(c,a,p,d,e,!1)}else d!==s[f]&&(s[f]=d,l=!0)}}}else{ry(e,t,r,s)&&(l=!0);let h;for(const u in a)(!t||!Ve(t,u)&&((h=Ir(u))===u||!Ve(t,h)))&&(c?n&&(n[u]!==void 0||n[h]!==void 0)&&(r[u]=mh(c,a,u,void 0,e,!0)):delete r[u]);if(s!==a)for(const u in s)(!t||!Ve(t,u))&&(delete s[u],l=!0)}l&&si(e.attrs,"set","")}function ry(e,t,n,i){const[r,s]=e.propsOptions;let o=!1,a;if(t)for(let c in t){if(co(c))continue;const l=t[c];let h;r&&Ve(r,h=ln(c))?!s||!s.includes(h)?n[h]=l:(a||(a={}))[h]=l:Cl(e.emitsOptions,c)||(!(c in i)||l!==i[c])&&(i[c]=l,o=!0)}if(s){const c=ze(n),l=a||Ye;for(let h=0;h<s.length;h++){const u=s[h];n[u]=mh(r,c,u,l[u],e,!Ve(l,u))}}return o}function mh(e,t,n,i,r,s){const o=e[n];if(o!=null){const a=Ve(o,"default");if(a&&i===void 0){const c=o.default;if(o.type!==Function&&!o.skipFactory&&Re(c)){const{propsDefaults:l}=r;if(n in l)i=l[n];else{const h=fa(r);i=l[n]=c.call(null,t),h()}}else i=c;r.ce&&r.ce._setProp(n,i)}o[0]&&(s&&!a?i=!1:o[1]&&(i===""||i===Ir(n))&&(i=!0))}return i}const _b=new WeakMap;function sy(e,t,n=!1){const i=n?_b:t.propsCache,r=i.get(e);if(r)return r;const s=e.props,o={},a=[];let c=!1;if(!Re(e)){const h=u=>{c=!0;const[f,d]=sy(u,t,!0);It(o,f),d&&a.push(...d)};!n&&t.mixins.length&&t.mixins.forEach(h),e.extends&&h(e.extends),e.mixins&&e.mixins.forEach(h)}if(!s&&!c)return ot(e)&&i.set(e,us),us;if(Ae(s))for(let h=0;h<s.length;h++){const u=ln(s[h]);ip(u)&&(o[u]=Ye)}else if(s)for(const h in s){const u=ln(h);if(ip(u)){const f=s[h],d=o[u]=Ae(f)||Re(f)?{type:f}:It({},f),p=d.type;let y=!1,v=!0;if(Ae(p))for(let g=0;g<p.length;++g){const m=p[g],x=Re(m)&&m.name;if(x==="Boolean"){y=!0;break}else x==="String"&&(v=!1)}else y=Re(p)&&p.name==="Boolean";d[0]=y,d[1]=v,(y||Ve(d,"default"))&&a.push(u)}}const l=[o,a];return ot(e)&&i.set(e,l),l}function ip(e){return e[0]!=="$"&&!co(e)}const Ff=e=>e==="_"||e==="__"||e==="_ctx"||e==="$stable",Bf=e=>Ae(e)?e.map(Bn):[Bn(e)],bb=(e,t,n)=>{if(t._n)return t;const i=q_((...r)=>Bf(t(...r)),n);return i._c=!1,i},oy=(e,t,n)=>{const i=e._ctx;for(const r in e){if(Ff(r))continue;const s=e[r];if(Re(s))t[r]=bb(r,s,i);else if(s!=null){const o=Bf(s);t[r]=()=>o}}},ay=(e,t)=>{const n=Bf(t);e.slots.default=()=>n},cy=(e,t,n)=>{for(const i in t)(n||!Ff(i))&&(e[i]=t[i])},wb=(e,t,n)=>{const i=e.slots=ny();if(e.vnode.shapeFlag&32){const r=t.__;r&&rh(i,"__",r,!0);const s=t._;s?(cy(i,t,n),n&&rh(i,"_",s,!0)):oy(t,i)}else t&&ay(e,t)},Mb=(e,t,n)=>{const{vnode:i,slots:r}=e;let s=!0,o=Ye;if(i.shapeFlag&32){const a=t._;a?n&&a===1?s=!1:cy(r,t,n):(s=!t.$stable,oy(t,r)),o=t}else t&&(ay(e,t),o={default:1});if(s)for(const a in r)!Ff(a)&&o[a]==null&&delete r[a]},Zt=Bb;function Sb(e){return Tb(e)}function Tb(e,t){const n=Tl();n.__VUE__=!0;const{insert:i,remove:r,patchProp:s,createElement:o,createText:a,createComment:c,setText:l,setElementText:h,parentNode:u,nextSibling:f,setScopeId:d=Hn,insertStaticContent:p}=e,y=(S,E,P,H=null,B=null,w=null,M=void 0,U=null,F=!!E.dynamicChildren)=>{if(S===E)return;S&&!qs(S,E)&&(H=G(S),_e(S,B,w,!0),S=null),E.patchFlag===-2&&(F=!1,E.dynamicChildren=null);const{type:R,ref:q,shapeFlag:j}=E;switch(R){case Ll:v(S,E,P,H);break;case vs:g(S,E,P,H);break;case su:S==null&&m(E,P,H,M);break;case xn:V(S,E,P,H,B,w,M,U,F);break;default:j&1?T(S,E,P,H,B,w,M,U,F):j&6?k(S,E,P,H,B,w,M,U,F):(j&64||j&128)&&R.process(S,E,P,H,B,w,M,U,F,oe)}q!=null&&B?po(q,S&&S.ref,w,E||S,!E):q==null&&S&&S.ref!=null&&po(S.ref,null,w,S,!0)},v=(S,E,P,H)=>{if(S==null)i(E.el=a(E.children),P,H);else{const B=E.el=S.el;E.children!==S.children&&l(B,E.children)}},g=(S,E,P,H)=>{S==null?i(E.el=c(E.children||""),P,H):E.el=S.el},m=(S,E,P,H)=>{[S.el,S.anchor]=p(S.children,E,P,H,S.el,S.anchor)},x=({el:S,anchor:E},P,H)=>{let B;for(;S&&S!==E;)B=f(S),i(S,P,H),S=B;i(E,P,H)},_=({el:S,anchor:E})=>{let P;for(;S&&S!==E;)P=f(S),r(S),S=P;r(E)},T=(S,E,P,H,B,w,M,U,F)=>{E.type==="svg"?M="svg":E.type==="math"&&(M="mathml"),S==null?b(E,P,H,B,w,M,U,F):I(S,E,B,w,M,U,F)},b=(S,E,P,H,B,w,M,U)=>{let F,R;const{props:q,shapeFlag:j,transition:Q,dirs:Z}=S;if(F=S.el=o(S.type,w,q&&q.is,q),j&8?h(F,S.children):j&16&&D(S.children,F,null,H,B,ru(S,w),M,U),Z&&Ki(S,null,H,"created"),L(F,S,S.scopeId,M,H),q){for(const ce in q)ce!=="value"&&!co(ce)&&s(F,ce,null,q[ce],w,H);"value"in q&&s(F,"value",null,q.value,w),(R=q.onVnodeBeforeMount)&&Pn(R,H,S)}Z&&Ki(S,null,H,"beforeMount");const se=Eb(B,Q);se&&Q.beforeEnter(F),i(F,E,P),((R=q&&q.onVnodeMounted)||se||Z)&&Zt(()=>{R&&Pn(R,H,S),se&&Q.enter(F),Z&&Ki(S,null,H,"mounted")},B)},L=(S,E,P,H,B)=>{if(P&&d(S,P),H)for(let w=0;w<H.length;w++)d(S,H[w]);if(B){let w=B.subTree;if(E===w||py(w.type)&&(w.ssContent===E||w.ssFallback===E)){const M=B.vnode;L(S,M,M.scopeId,M.slotScopeIds,B.parent)}}},D=(S,E,P,H,B,w,M,U,F=0)=>{for(let R=F;R<S.length;R++){const q=S[R]=U?Pi(S[R]):Bn(S[R]);y(null,q,E,P,H,B,w,M,U)}},I=(S,E,P,H,B,w,M)=>{const U=E.el=S.el;let{patchFlag:F,dynamicChildren:R,dirs:q}=E;F|=S.patchFlag&16;const j=S.props||Ye,Q=E.props||Ye;let Z;if(P&&Qi(P,!1),(Z=Q.onVnodeBeforeUpdate)&&Pn(Z,P,E,S),q&&Ki(E,S,P,"beforeUpdate"),P&&Qi(P,!0),(j.innerHTML&&Q.innerHTML==null||j.textContent&&Q.textContent==null)&&h(U,""),R?Y(S.dynamicChildren,R,U,P,H,ru(E,B),w):M||te(S,E,U,null,P,H,ru(E,B),w,!1),F>0){if(F&16)z(U,j,Q,P,B);else if(F&2&&j.class!==Q.class&&s(U,"class",null,Q.class,B),F&4&&s(U,"style",j.style,Q.style,B),F&8){const se=E.dynamicProps;for(let ce=0;ce<se.length;ce++){const pe=se[ce],ue=j[pe],ve=Q[pe];(ve!==ue||pe==="value")&&s(U,pe,ue,ve,B,P)}}F&1&&S.children!==E.children&&h(U,E.children)}else!M&&R==null&&z(U,j,Q,P,B);((Z=Q.onVnodeUpdated)||q)&&Zt(()=>{Z&&Pn(Z,P,E,S),q&&Ki(E,S,P,"updated")},H)},Y=(S,E,P,H,B,w,M)=>{for(let U=0;U<E.length;U++){const F=S[U],R=E[U],q=F.el&&(F.type===xn||!qs(F,R)||F.shapeFlag&198)?u(F.el):P;y(F,R,q,null,H,B,w,M,!0)}},z=(S,E,P,H,B)=>{if(E!==P){if(E!==Ye)for(const w in E)!co(w)&&!(w in P)&&s(S,w,E[w],null,B,H);for(const w in P){if(co(w))continue;const M=P[w],U=E[w];M!==U&&w!=="value"&&s(S,w,U,M,B,H)}"value"in P&&s(S,"value",E.value,P.value,B)}},V=(S,E,P,H,B,w,M,U,F)=>{const R=E.el=S?S.el:a(""),q=E.anchor=S?S.anchor:a("");let{patchFlag:j,dynamicChildren:Q,slotScopeIds:Z}=E;Z&&(U=U?U.concat(Z):Z),S==null?(i(R,P,H),i(q,P,H),D(E.children||[],P,q,B,w,M,U,F)):j>0&&j&64&&Q&&S.dynamicChildren?(Y(S.dynamicChildren,Q,P,B,w,M,U),(E.key!=null||B&&E===B.subTree)&&ly(S,E,!0)):te(S,E,P,q,B,w,M,U,F)},k=(S,E,P,H,B,w,M,U,F)=>{E.slotScopeIds=U,S==null?E.shapeFlag&512?B.ctx.activate(E,P,H,M,F):O(E,P,H,B,w,M,F):N(S,E,F)},O=(S,E,P,H,B,w,M)=>{const U=S.component=jb(S,H,B);if(qg(S)&&(U.ctx.renderer=oe),qb(U,!1,M),U.asyncDep){if(B&&B.registerDep(U,W,M),!S.el){const F=U.subTree=zt(vs);g(null,F,E,P),S.placeholder=F.el}}else W(U,S,E,P,B,w,M)},N=(S,E,P)=>{const H=E.component=S.component;if(Nb(S,E,P))if(H.asyncDep&&!H.asyncResolved){J(H,E,P);return}else H.next=E,H.update();else E.el=S.el,H.vnode=E},W=(S,E,P,H,B,w,M)=>{const U=()=>{if(S.isMounted){let{next:j,bu:Q,u:Z,parent:se,vnode:ce}=S;{const et=uy(S);if(et){j&&(j.el=ce.el,J(S,j,M)),et.asyncDep.then(()=>{S.isUnmounted||U()});return}}let pe=j,ue;Qi(S,!1),j?(j.el=ce.el,J(S,j,M)):j=ce,Q&&Ac(Q),(ue=j.props&&j.props.onVnodeBeforeUpdate)&&Pn(ue,se,j,ce),Qi(S,!0);const ve=sp(S),Ue=S.subTree;S.subTree=ve,y(Ue,ve,u(Ue.el),G(Ue),S,B,w),j.el=ve.el,pe===null&&Fb(S,ve.el),Z&&Zt(Z,B),(ue=j.props&&j.props.onVnodeUpdated)&&Zt(()=>Pn(ue,se,j,ce),B)}else{let j;const{el:Q,props:Z}=E,{bm:se,m:ce,parent:pe,root:ue,type:ve}=S,Ue=mo(E);Qi(S,!1),se&&Ac(se),!Ue&&(j=Z&&Z.onVnodeBeforeMount)&&Pn(j,pe,E),Qi(S,!0);{ue.ce&&ue.ce._def.shadowRoot!==!1&&ue.ce._injectChildStyle(ve);const et=S.subTree=sp(S);y(null,et,P,H,S,B,w),E.el=et.el}if(ce&&Zt(ce,B),!Ue&&(j=Z&&Z.onVnodeMounted)){const et=E;Zt(()=>Pn(j,pe,et),B)}(E.shapeFlag&256||pe&&mo(pe.vnode)&&pe.vnode.shapeFlag&256)&&S.a&&Zt(S.a,B),S.isMounted=!0,E=P=H=null}};S.scope.on();const F=S.effect=new _g(U);S.scope.off();const R=S.update=F.run.bind(F),q=S.job=F.runIfDirty.bind(F);q.i=S,q.id=S.uid,F.scheduler=()=>Of(q),Qi(S,!0),R()},J=(S,E,P)=>{E.component=S;const H=S.vnode.props;S.vnode=E,S.next=null,xb(S,E.props,H,P),Mb(S,E.children,P),pi(),Zd(S),mi()},te=(S,E,P,H,B,w,M,U,F=!1)=>{const R=S&&S.children,q=S?S.shapeFlag:0,j=E.children,{patchFlag:Q,shapeFlag:Z}=E;if(Q>0){if(Q&128){ge(R,j,P,H,B,w,M,U,F);return}else if(Q&256){ae(R,j,P,H,B,w,M,U,F);return}}Z&8?(q&16&&ke(R,B,w),j!==R&&h(P,j)):q&16?Z&16?ge(R,j,P,H,B,w,M,U,F):ke(R,B,w,!0):(q&8&&h(P,""),Z&16&&D(j,P,H,B,w,M,U,F))},ae=(S,E,P,H,B,w,M,U,F)=>{S=S||us,E=E||us;const R=S.length,q=E.length,j=Math.min(R,q);let Q;for(Q=0;Q<j;Q++){const Z=E[Q]=F?Pi(E[Q]):Bn(E[Q]);y(S[Q],Z,P,null,B,w,M,U,F)}R>q?ke(S,B,w,!0,!1,j):D(E,P,H,B,w,M,U,F,j)},ge=(S,E,P,H,B,w,M,U,F)=>{let R=0;const q=E.length;let j=S.length-1,Q=q-1;for(;R<=j&&R<=Q;){const Z=S[R],se=E[R]=F?Pi(E[R]):Bn(E[R]);if(qs(Z,se))y(Z,se,P,null,B,w,M,U,F);else break;R++}for(;R<=j&&R<=Q;){const Z=S[j],se=E[Q]=F?Pi(E[Q]):Bn(E[Q]);if(qs(Z,se))y(Z,se,P,null,B,w,M,U,F);else break;j--,Q--}if(R>j){if(R<=Q){const Z=Q+1,se=Z<q?E[Z].el:H;for(;R<=Q;)y(null,E[R]=F?Pi(E[R]):Bn(E[R]),P,se,B,w,M,U,F),R++}}else if(R>Q)for(;R<=j;)_e(S[R],B,w,!0),R++;else{const Z=R,se=R,ce=new Map;for(R=se;R<=Q;R++){const wt=E[R]=F?Pi(E[R]):Bn(E[R]);wt.key!=null&&ce.set(wt.key,R)}let pe,ue=0;const ve=Q-se+1;let Ue=!1,et=0;const _i=new Array(ve);for(R=0;R<ve;R++)_i[R]=0;for(R=Z;R<=j;R++){const wt=S[R];if(ue>=ve){_e(wt,B,w,!0);continue}let on;if(wt.key!=null)on=ce.get(wt.key);else for(pe=se;pe<=Q;pe++)if(_i[pe-se]===0&&qs(wt,E[pe])){on=pe;break}on===void 0?_e(wt,B,w,!0):(_i[on-se]=R+1,on>=et?et=on:Ue=!0,y(wt,E[on],P,null,B,w,M,U,F),ue++)}const Ca=Ue?Ab(_i):us;for(pe=Ca.length-1,R=ve-1;R>=0;R--){const wt=se+R,on=E[wt],Nr=E[wt+1],La=wt+1<q?Nr.el||Nr.placeholder:H;_i[R]===0?y(null,on,P,La,B,w,M,U,F):Ue&&(pe<0||R!==Ca[pe]?le(on,P,La,2):pe--)}}},le=(S,E,P,H,B=null)=>{const{el:w,type:M,transition:U,children:F,shapeFlag:R}=S;if(R&6){le(S.component.subTree,E,P,H);return}if(R&128){S.suspense.move(E,P,H);return}if(R&64){M.move(S,E,P,oe);return}if(M===xn){i(w,E,P);for(let j=0;j<F.length;j++)le(F[j],E,P,H);i(S.anchor,E,P);return}if(M===su){x(S,E,P);return}if(H!==2&&R&1&&U)if(H===0)U.beforeEnter(w),i(w,E,P),Zt(()=>U.enter(w),B);else{const{leave:j,delayLeave:Q,afterLeave:Z}=U,se=()=>{S.ctx.isUnmounted?r(w):i(w,E,P)},ce=()=>{j(w,()=>{se(),Z&&Z()})};Q?Q(w,se,ce):ce()}else i(w,E,P)},_e=(S,E,P,H=!1,B=!1)=>{const{type:w,props:M,ref:U,children:F,dynamicChildren:R,shapeFlag:q,patchFlag:j,dirs:Q,cacheIndex:Z}=S;if(j===-2&&(B=!1),U!=null&&(pi(),po(U,null,P,S,!0),mi()),Z!=null&&(E.renderCache[Z]=void 0),q&256){E.ctx.deactivate(S);return}const se=q&1&&Q,ce=!mo(S);let pe;if(ce&&(pe=M&&M.onVnodeBeforeUnmount)&&Pn(pe,E,S),q&6)ne(S.component,P,H);else{if(q&128){S.suspense.unmount(P,H);return}se&&Ki(S,null,E,"beforeUnmount"),q&64?S.type.remove(S,E,P,oe,H):R&&!R.hasOnce&&(w!==xn||j>0&&j&64)?ke(R,E,P,!1,!0):(w===xn&&j&384||!B&&q&16)&&ke(F,E,P),H&&Te(S)}(ce&&(pe=M&&M.onVnodeUnmounted)||se)&&Zt(()=>{pe&&Pn(pe,E,S),se&&Ki(S,null,E,"unmounted")},P)},Te=S=>{const{type:E,el:P,anchor:H,transition:B}=S;if(E===xn){He(P,H);return}if(E===su){_(S);return}const w=()=>{r(P),B&&!B.persisted&&B.afterLeave&&B.afterLeave()};if(S.shapeFlag&1&&B&&!B.persisted){const{leave:M,delayLeave:U}=B,F=()=>M(P,w);U?U(S.el,w,F):F()}else w()},He=(S,E)=>{let P;for(;S!==E;)P=f(S),r(S),S=P;r(E)},ne=(S,E,P)=>{const{bum:H,scope:B,job:w,subTree:M,um:U,m:F,a:R,parent:q,slots:{__:j}}=S;rp(F),rp(R),H&&Ac(H),q&&Ae(j)&&j.forEach(Q=>{q.renderCache[Q]=void 0}),B.stop(),w&&(w.flags|=8,_e(M,S,E,P)),U&&Zt(U,E),Zt(()=>{S.isUnmounted=!0},E),E&&E.pendingBranch&&!E.isUnmounted&&S.asyncDep&&!S.asyncResolved&&S.suspenseId===E.pendingId&&(E.deps--,E.deps===0&&E.resolve())},ke=(S,E,P,H=!1,B=!1,w=0)=>{for(let M=w;M<S.length;M++)_e(S[M],E,P,H,B)},G=S=>{if(S.shapeFlag&6)return G(S.component.subTree);if(S.shapeFlag&128)return S.suspense.next();const E=f(S.anchor||S.el),P=E&&E[X_];return P?f(P):E};let re=!1;const K=(S,E,P)=>{S==null?E._vnode&&_e(E._vnode,null,null,!0):y(E._vnode||null,S,E,null,null,null,P),E._vnode=S,re||(re=!0,Zd(),Vg(),re=!1)},oe={p:y,um:_e,m:le,r:Te,mt:O,mc:D,pc:te,pbc:Y,n:G,o:e};return{render:K,hydrate:void 0,createApp:yb(K)}}function ru({type:e,props:t},n){return n==="svg"&&e==="foreignObject"||n==="mathml"&&e==="annotation-xml"&&t&&t.encoding&&t.encoding.includes("html")?void 0:n}function Qi({effect:e,job:t},n){n?(e.flags|=32,t.flags|=4):(e.flags&=-33,t.flags&=-5)}function Eb(e,t){return(!e||e&&!e.pendingBranch)&&t&&!t.persisted}function ly(e,t,n=!1){const i=e.children,r=t.children;if(Ae(i)&&Ae(r))for(let s=0;s<i.length;s++){const o=i[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=Pi(r[s]),a.el=o.el),!n&&a.patchFlag!==-2&&ly(o,a)),a.type===Ll&&(a.el=o.el),a.type===vs&&!a.el&&(a.el=o.el)}}function Ab(e){const t=e.slice(),n=[0];let i,r,s,o,a;const c=e.length;for(i=0;i<c;i++){const l=e[i];if(l!==0){if(r=n[n.length-1],e[r]<l){t[i]=r,n.push(i);continue}for(s=0,o=n.length-1;s<o;)a=s+o>>1,e[n[a]]<l?s=a+1:o=a;l<e[n[s]]&&(s>0&&(t[i]=n[s-1]),n[s]=i)}}for(s=n.length,o=n[s-1];s-- >0;)n[s]=o,o=t[o];return n}function uy(e){const t=e.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:uy(t)}function rp(e){if(e)for(let t=0;t<e.length;t++)e[t].flags|=8}const Rb=Symbol.for("v-scx"),Cb=()=>Sn(Rb);function Ct(e,t,n){return hy(e,t,n)}function hy(e,t,n=Ye){const{immediate:i,deep:r,flush:s,once:o}=n,a=It({},n),c=t&&i||!t&&s!=="post";let l;if(No){if(s==="sync"){const d=Cb();l=d.__watcherHandles||(d.__watcherHandles=[])}else if(!c){const d=()=>{};return d.stop=Hn,d.resume=Hn,d.pause=Hn,d}}const h=Et;a.call=(d,p,y)=>Gn(d,h,p,y);let u=!1;s==="post"?a.scheduler=d=>{Zt(d,h&&h.suspense)}:s!=="sync"&&(u=!0,a.scheduler=(d,p)=>{p?d():Of(d)}),a.augmentJob=d=>{t&&(d.flags|=4),u&&(d.flags|=2,h&&(d.id=h.uid,d.i=h))};const f=V_(e,t,a);return No&&(l?l.push(f):c&&f()),f}function Lb(e,t,n){const i=this.proxy,r=mt(e)?e.includes(".")?fy(i,e):()=>i[e]:e.bind(i,i);let s;Re(t)?s=t:(s=t.handler,n=t);const o=fa(this),a=hy(r,s.bind(i),n);return o(),a}function fy(e,t){const n=t.split(".");return()=>{let i=e;for(let r=0;r<n.length&&i;r++)i=i[n[r]];return i}}const Pb=(e,t)=>t==="modelValue"||t==="model-value"?e.modelModifiers:e[`${t}Modifiers`]||e[`${ln(t)}Modifiers`]||e[`${Ir(t)}Modifiers`];function Ib(e,t,...n){if(e.isUnmounted)return;const i=e.vnode.props||Ye;let r=n;const s=t.startsWith("update:"),o=s&&Pb(i,t.slice(7));o&&(o.trim&&(r=n.map(h=>mt(h)?h.trim():h)),o.number&&(r=n.map(sh)));let a,c=i[a=Kl(t)]||i[a=Kl(ln(t))];!c&&s&&(c=i[a=Kl(Ir(t))]),c&&Gn(c,e,6,r);const l=i[a+"Once"];if(l){if(!e.emitted)e.emitted={};else if(e.emitted[a])return;e.emitted[a]=!0,Gn(l,e,6,r)}}function dy(e,t,n=!1){const i=t.emitsCache,r=i.get(e);if(r!==void 0)return r;const s=e.emits;let o={},a=!1;if(!Re(e)){const c=l=>{const h=dy(l,t,!0);h&&(a=!0,It(o,h))};!n&&t.mixins.length&&t.mixins.forEach(c),e.extends&&c(e.extends),e.mixins&&e.mixins.forEach(c)}return!s&&!a?(ot(e)&&i.set(e,null),null):(Ae(s)?s.forEach(c=>o[c]=null):It(o,s),ot(e)&&i.set(e,o),o)}function Cl(e,t){return!e||!bl(t)?!1:(t=t.slice(2).replace(/Once$/,""),Ve(e,t[0].toLowerCase()+t.slice(1))||Ve(e,Ir(t))||Ve(e,t))}function sp(e){const{type:t,vnode:n,proxy:i,withProxy:r,propsOptions:[s],slots:o,attrs:a,emit:c,render:l,renderCache:h,props:u,data:f,setupState:d,ctx:p,inheritAttrs:y}=e,v=Uc(e);let g,m;try{if(n.shapeFlag&4){const _=r||i,T=_;g=Bn(l.call(T,_,h,u,d,f,p)),m=a}else{const _=t;g=Bn(_.length>1?_(u,{attrs:a,slots:o,emit:c}):_(u,null)),m=t.props?a:Ob(a)}}catch(_){yo.length=0,El(_,e,1),g=zt(vs)}let x=g;if(m&&y!==!1){const _=Object.keys(m),{shapeFlag:T}=x;_.length&&T&7&&(s&&_.some(xf)&&(m=Db(m,s)),x=xs(x,m,!1,!0))}return n.dirs&&(x=xs(x,null,!1,!0),x.dirs=x.dirs?x.dirs.concat(n.dirs):n.dirs),n.transition&&Df(x,n.transition),g=x,Uc(v),g}const Ob=e=>{let t;for(const n in e)(n==="class"||n==="style"||bl(n))&&((t||(t={}))[n]=e[n]);return t},Db=(e,t)=>{const n={};for(const i in e)(!xf(i)||!(i.slice(9)in t))&&(n[i]=e[i]);return n};function Nb(e,t,n){const{props:i,children:r,component:s}=e,{props:o,children:a,patchFlag:c}=t,l=s.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&c>=0){if(c&1024)return!0;if(c&16)return i?op(i,o,l):!!o;if(c&8){const h=t.dynamicProps;for(let u=0;u<h.length;u++){const f=h[u];if(o[f]!==i[f]&&!Cl(l,f))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?op(i,o,l):!0:!!o;return!1}function op(e,t,n){const i=Object.keys(t);if(i.length!==Object.keys(e).length)return!0;for(let r=0;r<i.length;r++){const s=i[r];if(t[s]!==e[s]&&!Cl(n,s))return!0}return!1}function Fb({vnode:e,parent:t},n){for(;t;){const i=t.subTree;if(i.suspense&&i.suspense.activeBranch===e&&(i.el=e.el),i===e)(e=t.vnode).el=n,t=t.parent;else break}}const py=e=>e.__isSuspense;function Bb(e,t){t&&t.pendingBranch?Ae(e)?t.effects.push(...e):t.effects.push(e):j_(e)}const xn=Symbol.for("v-fgt"),Ll=Symbol.for("v-txt"),vs=Symbol.for("v-cmt"),su=Symbol.for("v-stc"),yo=[];let Kt=null;function ui(e=!1){yo.push(Kt=e?null:[])}function Ub(){yo.pop(),Kt=yo[yo.length-1]||null}let Do=1;function ap(e,t=!1){Do+=e,e<0&&Kt&&t&&(Kt.hasOnce=!0)}function zb(e){return e.dynamicChildren=Do>0?Kt||us:null,Ub(),Do>0&&Kt&&Kt.push(e),e}function hi(e,t,n,i,r,s){return zb(it(e,t,n,i,r,s,!0))}function Hc(e){return e?e.__v_isVNode===!0:!1}function qs(e,t){return e.type===t.type&&e.key===t.key}const my=({key:e})=>e??null,Cc=({ref:e,ref_key:t,ref_for:n})=>(typeof e=="number"&&(e=""+e),e!=null?mt(e)||At(e)||Re(e)?{i:Jt,r:e,k:t,f:!!n}:e:null);function it(e,t=null,n=null,i=0,r=null,s=e===xn?0:1,o=!1,a=!1){const c={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&my(t),ref:t&&Cc(t),scopeId:Wg,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Jt};return a?(Uf(c,n),s&128&&e.normalize(c)):n&&(c.shapeFlag|=mt(n)?8:16),Do>0&&!o&&Kt&&(c.patchFlag>0||s&6)&&c.patchFlag!==32&&Kt.push(c),c}const zt=Hb;function Hb(e,t=null,n=null,i=0,r=null,s=!1){if((!e||e===cb)&&(e=vs),Hc(e)){const a=xs(e,t,!0);return n&&Uf(a,n),Do>0&&!s&&Kt&&(a.shapeFlag&6?Kt[Kt.indexOf(e)]=a:Kt.push(a)),a.patchFlag=-2,a}if(Zb(e)&&(e=e.__vccOpts),t){t=Gb(t);let{class:a,style:c}=t;a&&!mt(a)&&(t.class=Mf(a)),ot(c)&&(Pf(c)&&!Ae(c)&&(c=It({},c)),t.style=wf(c))}const o=mt(e)?1:py(e)?128:Y_(e)?64:ot(e)?4:Re(e)?2:0;return it(e,t,n,i,r,o,s,!0)}function Gb(e){return e?Pf(e)||iy(e)?It({},e):e:null}function xs(e,t,n=!1,i=!1){const{props:r,ref:s,patchFlag:o,children:a,transition:c}=e,l=t?Vb(r||{},t):r,h={__v_isVNode:!0,__v_skip:!0,type:e.type,props:l,key:l&&my(l),ref:t&&t.ref?n&&s?Ae(s)?s.concat(Cc(t)):[s,Cc(t)]:Cc(t):s,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:a,target:e.target,targetStart:e.targetStart,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==xn?o===-1?16:o|16:o,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:c,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&xs(e.ssContent),ssFallback:e.ssFallback&&xs(e.ssFallback),placeholder:e.placeholder,el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce};return c&&i&&Df(h,c.clone(h)),h}function oo(e=" ",t=0){return zt(Ll,null,e,t)}function Bn(e){return e==null||typeof e=="boolean"?zt(vs):Ae(e)?zt(xn,null,e.slice()):Hc(e)?Pi(e):zt(Ll,null,String(e))}function Pi(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:xs(e)}function Uf(e,t){let n=0;const{shapeFlag:i}=e;if(t==null)t=null;else if(Ae(t))n=16;else if(typeof t=="object")if(i&65){const r=t.default;r&&(r._c&&(r._d=!1),Uf(e,r()),r._c&&(r._d=!0));return}else{n=32;const r=t._;!r&&!iy(t)?t._ctx=Jt:r===3&&Jt&&(Jt.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else Re(t)?(t={default:t,_ctx:Jt},n=32):(t=String(t),i&64?(n=16,t=[oo(t)]):n=8);e.children=t,e.shapeFlag|=n}function Vb(...e){const t={};for(let n=0;n<e.length;n++){const i=e[n];for(const r in i)if(r==="class")t.class!==i.class&&(t.class=Mf([t.class,i.class]));else if(r==="style")t.style=wf([t.style,i.style]);else if(bl(r)){const s=t[r],o=i[r];o&&s!==o&&!(Ae(s)&&s.includes(o))&&(t[r]=s?[].concat(s,o):o)}else r!==""&&(t[r]=i[r])}return t}function Pn(e,t,n,i=null){Gn(e,t,7,[n,i])}const kb=ey();let Wb=0;function jb(e,t,n){const i=e.type,r=(t?t.appContext:e.appContext)||kb,s={uid:Wb++,vnode:e,type:i,parent:t,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new vg(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(r.provides),ids:t?t.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:sy(i,r),emitsOptions:dy(i,r),emit:null,emitted:null,propsDefaults:Ye,inheritAttrs:i.inheritAttrs,ctx:Ye,data:Ye,props:Ye,attrs:Ye,slots:Ye,refs:Ye,setupState:Ye,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=t?t.root:s,s.emit=Ib.bind(null,s),e.ce&&e.ce(s),s}let Et=null;const Pl=()=>Et||Jt;let Gc,gh;{const e=Tl(),t=(n,i)=>{let r;return(r=e[n])||(r=e[n]=[]),r.push(i),s=>{r.length>1?r.forEach(o=>o(s)):r[0](s)}};Gc=t("__VUE_INSTANCE_SETTERS__",n=>Et=n),gh=t("__VUE_SSR_SETTERS__",n=>No=n)}const fa=e=>{const t=Et;return Gc(e),e.scope.on(),()=>{e.scope.off(),Gc(t)}},cp=()=>{Et&&Et.scope.off(),Gc(null)};function gy(e){return e.vnode.shapeFlag&4}let No=!1;function qb(e,t=!1,n=!1){t&&gh(t);const{props:i,children:r}=e.vnode,s=gy(e);vb(e,i,s,t),wb(e,r,n||t);const o=s?Xb(e,t):void 0;return t&&gh(!1),o}function Xb(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=new Proxy(e.ctx,lb);const{setup:i}=n;if(i){pi();const r=e.setupContext=i.length>1?vy(e):null,s=fa(e),o=ha(i,e,0,[e.props,r]),a=fg(o);if(mi(),s(),(a||e.sp)&&!mo(e)&&jg(e),a){if(o.then(cp,cp),t)return o.then(c=>{lp(e,c)}).catch(c=>{El(c,e,0)});e.asyncDep=o}else lp(e,o)}else yy(e)}function lp(e,t,n){Re(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:ot(t)&&(e.setupState=Ug(t)),yy(e)}function yy(e,t,n){const i=e.type;e.render||(e.render=i.render||Hn);{const r=fa(e);pi();try{hb(e)}finally{mi(),r()}}}const Yb={get(e,t){return Tt(e,"get",""),e[t]}};function vy(e){const t=n=>{e.exposed=n||{}};return{attrs:new Proxy(e.attrs,Yb),slots:e.slots,emit:e.emit,expose:t}}function Il(e){return e.exposed?e.exposeProxy||(e.exposeProxy=new Proxy(Ug(Fg(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in go)return go[n](e)},has(t,n){return n in t||n in go}})):e.proxy}function $b(e,t=!0){return Re(e)?e.displayName||e.name:e.name||t&&e.__name}function Zb(e){return Re(e)&&"__vccOpts"in e}const ft=(e,t)=>H_(e,t,No);function Ol(e,t,n){const i=arguments.length;return i===2?ot(t)&&!Ae(t)?Hc(t)?zt(e,null,[t]):zt(e,t):zt(e,null,t):(i>3?n=Array.prototype.slice.call(arguments,2):i===3&&Hc(n)&&(n=[n]),zt(e,t,n))}const Jb="3.5.18";/**
* @vue/runtime-dom v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let yh;const up=typeof window<"u"&&window.trustedTypes;if(up)try{yh=up.createPolicy("vue",{createHTML:e=>e})}catch{}const xy=yh?e=>yh.createHTML(e):e=>e,Kb="http://www.w3.org/2000/svg",Qb="http://www.w3.org/1998/Math/MathML",ri=typeof document<"u"?document:null,hp=ri&&ri.createElement("template"),ew={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,i)=>{const r=t==="svg"?ri.createElementNS(Kb,e):t==="mathml"?ri.createElementNS(Qb,e):n?ri.createElement(e,{is:n}):ri.createElement(e);return e==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:e=>ri.createTextNode(e),createComment:e=>ri.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>ri.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,i,r,s){const o=n?n.previousSibling:t.lastChild;if(r&&(r===s||r.nextSibling))for(;t.insertBefore(r.cloneNode(!0),n),!(r===s||!(r=r.nextSibling)););else{hp.innerHTML=xy(i==="svg"?`<svg>${e}</svg>`:i==="mathml"?`<math>${e}</math>`:e);const a=hp.content;if(i==="svg"||i==="mathml"){const c=a.firstChild;for(;c.firstChild;)a.appendChild(c.firstChild);a.removeChild(c)}t.insertBefore(a,n)}return[o?o.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}},tw=Symbol("_vtc");function nw(e,t,n){const i=e[tw];i&&(t=(t?[t,...i]:[...i]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}const fp=Symbol("_vod"),iw=Symbol("_vsh"),rw=Symbol(""),sw=/(^|;)\s*display\s*:/;function ow(e,t,n){const i=e.style,r=mt(n);let s=!1;if(n&&!r){if(t)if(mt(t))for(const o of t.split(";")){const a=o.slice(0,o.indexOf(":")).trim();n[a]==null&&Lc(i,a,"")}else for(const o in t)n[o]==null&&Lc(i,o,"");for(const o in n)o==="display"&&(s=!0),Lc(i,o,n[o])}else if(r){if(t!==n){const o=i[rw];o&&(n+=";"+o),i.cssText=n,s=sw.test(n)}}else t&&e.removeAttribute("style");fp in e&&(e[fp]=s?i.display:"",e[iw]&&(i.display="none"))}const dp=/\s*!important$/;function Lc(e,t,n){if(Ae(n))n.forEach(i=>Lc(e,t,i));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const i=aw(e,t);dp.test(n)?e.setProperty(Ir(i),n.replace(dp,""),"important"):e[i]=n}}const pp=["Webkit","Moz","ms"],ou={};function aw(e,t){const n=ou[t];if(n)return n;let i=ln(t);if(i!=="filter"&&i in e)return ou[t]=i;i=Sl(i);for(let r=0;r<pp.length;r++){const s=pp[r]+i;if(s in e)return ou[t]=s}return t}const mp="http://www.w3.org/1999/xlink";function gp(e,t,n,i,r,s=g_(t)){i&&t.startsWith("xlink:")?n==null?e.removeAttributeNS(mp,t.slice(6,t.length)):e.setAttributeNS(mp,t,n):n==null||s&&!mg(n)?e.removeAttribute(t):e.setAttribute(t,s?"":$i(n)?String(n):n)}function yp(e,t,n,i,r){if(t==="innerHTML"||t==="textContent"){n!=null&&(e[t]=t==="innerHTML"?xy(n):n);return}const s=e.tagName;if(t==="value"&&s!=="PROGRESS"&&!s.includes("-")){const a=s==="OPTION"?e.getAttribute("value")||"":e.value,c=n==null?e.type==="checkbox"?"on":"":String(n);(a!==c||!("_value"in e))&&(e.value=c),n==null&&e.removeAttribute(t),e._value=n;return}let o=!1;if(n===""||n==null){const a=typeof e[t];a==="boolean"?n=mg(n):n==null&&a==="string"?(n="",o=!0):a==="number"&&(n=0,o=!0)}try{e[t]=n}catch{}o&&e.removeAttribute(r||t)}function is(e,t,n,i){e.addEventListener(t,n,i)}function cw(e,t,n,i){e.removeEventListener(t,n,i)}const vp=Symbol("_vei");function lw(e,t,n,i,r=null){const s=e[vp]||(e[vp]={}),o=s[t];if(i&&o)o.value=i;else{const[a,c]=uw(t);if(i){const l=s[t]=dw(i,r);is(e,a,l,c)}else o&&(cw(e,a,o,c),s[t]=void 0)}}const xp=/(?:Once|Passive|Capture)$/;function uw(e){let t;if(xp.test(e)){t={};let i;for(;i=e.match(xp);)e=e.slice(0,e.length-i[0].length),t[i[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):Ir(e.slice(2)),t]}let au=0;const hw=Promise.resolve(),fw=()=>au||(hw.then(()=>au=0),au=Date.now());function dw(e,t){const n=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=n.attached)return;Gn(pw(i,n.value),t,5,[i])};return n.value=e,n.attached=fw(),n}function pw(e,t){if(Ae(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(i=>r=>!r._stopped&&i&&i(r))}else return t}const _p=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,mw=(e,t,n,i,r,s)=>{const o=r==="svg";t==="class"?nw(e,i,o):t==="style"?ow(e,n,i):bl(t)?xf(t)||lw(e,t,n,i,s):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):gw(e,t,i,o))?(yp(e,t,i),!e.tagName.includes("-")&&(t==="value"||t==="checked"||t==="selected")&&gp(e,t,i,o,s,t!=="value")):e._isVueCE&&(/[A-Z]/.test(t)||!mt(i))?yp(e,ln(t),i,s,t):(t==="true-value"?e._trueValue=i:t==="false-value"&&(e._falseValue=i),gp(e,t,i,o))};function gw(e,t,n,i){if(i)return!!(t==="innerHTML"||t==="textContent"||t in e&&_p(t)&&Re(n));if(t==="spellcheck"||t==="draggable"||t==="translate"||t==="autocorrect"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA")return!1;if(t==="width"||t==="height"){const r=e.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return _p(t)&&mt(n)?!1:t in e}const bp=e=>{const t=e.props["onUpdate:modelValue"]||!1;return Ae(t)?n=>Ac(t,n):t};function yw(e){e.target.composing=!0}function wp(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const cu=Symbol("_assign"),vw={created(e,{modifiers:{lazy:t,trim:n,number:i}},r){e[cu]=bp(r);const s=i||r.props&&r.props.type==="number";is(e,t?"change":"input",o=>{if(o.target.composing)return;let a=e.value;n&&(a=a.trim()),s&&(a=sh(a)),e[cu](a)}),n&&is(e,"change",()=>{e.value=e.value.trim()}),t||(is(e,"compositionstart",yw),is(e,"compositionend",wp),is(e,"change",wp))},mounted(e,{value:t}){e.value=t??""},beforeUpdate(e,{value:t,oldValue:n,modifiers:{lazy:i,trim:r,number:s}},o){if(e[cu]=bp(o),e.composing)return;const a=(s||e.type==="number")&&!/^0\d/.test(e.value)?sh(e.value):e.value,c=t??"";a!==c&&(document.activeElement===e&&e.type!=="range"&&(i&&t===n||r&&e.value.trim()===c)||(e.value=c))}},xw=It({patchProp:mw},ew);let Mp;function _w(){return Mp||(Mp=Sb(xw))}const bw=(...e)=>{const t=_w().createApp(...e),{mount:n}=t;return t.mount=i=>{const r=Mw(i);if(!r)return;const s=t._component;!Re(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const o=n(r,!1,ww(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},t};function ww(e){if(e instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&e instanceof MathMLElement)return"mathml"}function Mw(e){return mt(e)?document.querySelector(e):e}const _y=(e,t)=>{const n=e.__vccOpts||e;for(const[i,r]of t)n[i]=r;return n};function lu(e){if(e===null||typeof e!="object")return!1;const t=Object.getPrototypeOf(e);return t!==null&&t!==Object.prototype&&Object.getPrototypeOf(t)!==null||Symbol.iterator in e?!1:Symbol.toStringTag in e?Object.prototype.toString.call(e)==="[object Module]":!0}function vh(e,t,n=".",i){if(!lu(t))return vh(e,{},n,i);const r=Object.assign({},t);for(const s in e){if(s==="__proto__"||s==="constructor")continue;const o=e[s];o!=null&&(i&&i(r,s,o,n)||(Array.isArray(o)&&Array.isArray(r[s])?r[s]=[...o,...r[s]]:lu(o)&&lu(r[s])?r[s]=vh(o,r[s],(n?`${n}.`:"")+s.toString(),i):r[s]=o))}return r}function Sw(e){return(...t)=>t.reduce((n,i)=>vh(n,i,"",e),{})}const by=Sw();function wy(e){return xg()?(v_(e),!0):!1}const Tw=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const Ew=e=>e!=null,Aw=Object.prototype.toString,Vc=e=>Aw.call(e)==="[object Object]",uu=()=>{};function Pc(e){return Array.isArray(e)?e:[e]}function Rw(e){return Pl()}function Cw(e,t){Rw()&&Nf(e,t)}function Lw(e,t,n){return Ct(e,t,{...n,immediate:!0})}const My=Tw?window:void 0;function vo(e){var t;const n=fo(e);return(t=n?.$el)!=null?t:n}function In(...e){const t=[],n=()=>{t.forEach(a=>a()),t.length=0},i=(a,c,l,h)=>(a.addEventListener(c,l,h),()=>a.removeEventListener(c,l,h)),r=ft(()=>{const a=Pc(fo(e[0])).filter(c=>c!=null);return a.every(c=>typeof c!="string")?a:void 0}),s=Lw(()=>{var a,c;return[(c=(a=r.value)==null?void 0:a.map(l=>vo(l)))!=null?c:[My].filter(l=>l!=null),Pc(fo(r.value?e[1]:e[0])),Pc(Gt(r.value?e[2]:e[1])),fo(r.value?e[3]:e[2])]},([a,c,l,h])=>{if(n(),!a?.length||!c?.length||!l?.length)return;const u=Vc(h)?{...h}:h;t.push(...a.flatMap(f=>c.flatMap(d=>l.map(p=>i(f,d,p,u)))))},{flush:"post"}),o=()=>{s(),n()};return wy(n),o}function Pw(){const e=If(!1),t=Pl();return t&&Yg(()=>{e.value=!0},t),e}function Iw(e){const t=Pw();return ft(()=>(t.value,!!e()))}function Ow(e,t,n={}){const{root:i,rootMargin:r="0px",threshold:s=0,window:o=My,immediate:a=!0}=n,c=Iw(()=>o&&"IntersectionObserver"in o),l=ft(()=>{const p=fo(e);return Pc(p).map(vo).filter(Ew)});let h=uu;const u=If(a),f=c.value?Ct(()=>[l.value,vo(i),u.value],([p,y])=>{if(h(),!u.value||!p.length)return;const v=new IntersectionObserver(t,{root:vo(y),rootMargin:r,threshold:s});p.forEach(g=>g&&v.observe(g)),h=()=>{v.disconnect(),h=uu}},{immediate:a,flush:"post"}):uu,d=()=>{h(),f(),u.value=!1};return wy(d),{isSupported:c,isActive:u,pause(){h(),u.value=!1},resume(){u.value=!0},stop:d}}const Sy=1/60*1e3,Dw=typeof performance<"u"?()=>performance.now():()=>Date.now(),Ty=typeof window<"u"?e=>window.requestAnimationFrame(e):e=>setTimeout(()=>e(Dw()),Sy);function Nw(e){let t=[],n=[],i=0,r=!1,s=!1;const o=new WeakSet,a={schedule:(c,l=!1,h=!1)=>{const u=h&&r,f=u?t:n;return l&&o.add(c),f.indexOf(c)===-1&&(f.push(c),u&&r&&(i=t.length)),c},cancel:c=>{const l=n.indexOf(c);l!==-1&&n.splice(l,1),o.delete(c)},process:c=>{if(r){s=!0;return}if(r=!0,[t,n]=[n,t],n.length=0,i=t.length,i)for(let l=0;l<i;l++){const h=t[l];h(c),o.has(h)&&(a.schedule(h),e())}r=!1,s&&(s=!1,a.process(c))}};return a}const Fw=40;let xh=!0,Fo=!1,_h=!1;const ps={delta:0,timestamp:0},da=["read","update","preRender","render","postRender"],Dl=da.reduce((e,t)=>(e[t]=Nw(()=>Fo=!0),e),{}),bh=da.reduce((e,t)=>{const n=Dl[t];return e[t]=(i,r=!1,s=!1)=>(Fo||zw(),n.schedule(i,r,s)),e},{}),Bw=da.reduce((e,t)=>(e[t]=Dl[t].cancel,e),{});da.reduce((e,t)=>(e[t]=()=>Dl[t].process(ps),e),{});const Uw=e=>Dl[e].process(ps),Ey=e=>{Fo=!1,ps.delta=xh?Sy:Math.max(Math.min(e-ps.timestamp,Fw),1),ps.timestamp=e,_h=!0,da.forEach(Uw),_h=!1,Fo&&(xh=!1,Ty(Ey))},zw=()=>{Fo=!0,xh=!0,_h||Ty(Ey)},Ay=()=>ps;function Ry(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,i=Object.getOwnPropertySymbols(e);r<i.length;r++)t.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(e,i[r])&&(n[i[r]]=e[i[r]]);return n}var Sp=function(){};const wh=(e,t,n)=>Math.min(Math.max(n,e),t),hu=.001,Hw=.01,Gw=10,Vw=.05,kw=1;function Ww({duration:e=800,bounce:t=.25,velocity:n=0,mass:i=1}){let r,s,o=1-t;o=wh(Vw,kw,o),e=wh(Hw,Gw,e/1e3),o<1?(r=l=>{const h=l*o,u=h*e,f=h-n,d=Mh(l,o),p=Math.exp(-u);return hu-f/d*p},s=l=>{const u=l*o*e,f=u*n+n,d=Math.pow(o,2)*Math.pow(l,2)*e,p=Math.exp(-u),y=Mh(Math.pow(l,2),o);return(-r(l)+hu>0?-1:1)*((f-d)*p)/y}):(r=l=>{const h=Math.exp(-l*e),u=(l-n)*e+1;return-hu+h*u},s=l=>{const h=Math.exp(-l*e),u=(n-l)*(e*e);return h*u});const a=5/e,c=qw(r,s,a);if(e=e*1e3,isNaN(c))return{stiffness:100,damping:10,duration:e};{const l=Math.pow(c,2)*i;return{stiffness:l,damping:o*2*Math.sqrt(i*l),duration:e}}}const jw=12;function qw(e,t,n){let i=n;for(let r=1;r<jw;r++)i=i-e(i)/t(i);return i}function Mh(e,t){return e*Math.sqrt(1-t*t)}const Xw=["duration","bounce"],Yw=["stiffness","damping","mass"];function Tp(e,t){return t.some(n=>e[n]!==void 0)}function $w(e){let t=Object.assign({velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1},e);if(!Tp(e,Yw)&&Tp(e,Xw)){const n=Ww(e);t=Object.assign(Object.assign(Object.assign({},t),n),{velocity:0,mass:1}),t.isResolvedFromDuration=!0}return t}function zf(e){var{from:t=0,to:n=1,restSpeed:i=2,restDelta:r}=e,s=Ry(e,["from","to","restSpeed","restDelta"]);const o={done:!1,value:t};let{stiffness:a,damping:c,mass:l,velocity:h,duration:u,isResolvedFromDuration:f}=$w(s),d=Ep,p=Ep;function y(){const v=h?-(h/1e3):0,g=n-t,m=c/(2*Math.sqrt(a*l)),x=Math.sqrt(a/l)/1e3;if(r===void 0&&(r=Math.min(Math.abs(n-t)/100,.4)),m<1){const _=Mh(x,m);d=T=>{const b=Math.exp(-m*x*T);return n-b*((v+m*x*g)/_*Math.sin(_*T)+g*Math.cos(_*T))},p=T=>{const b=Math.exp(-m*x*T);return m*x*b*(Math.sin(_*T)*(v+m*x*g)/_+g*Math.cos(_*T))-b*(Math.cos(_*T)*(v+m*x*g)-_*g*Math.sin(_*T))}}else if(m===1)d=_=>n-Math.exp(-x*_)*(g+(v+x*g)*_);else{const _=x*Math.sqrt(m*m-1);d=T=>{const b=Math.exp(-m*x*T),L=Math.min(_*T,300);return n-b*((v+m*x*g)*Math.sinh(L)+_*g*Math.cosh(L))/_}}}return y(),{next:v=>{const g=d(v);if(f)o.done=v>=u;else{const m=p(v)*1e3,x=Math.abs(m)<=i,_=Math.abs(n-g)<=r;o.done=x&&_}return o.value=o.done?n:g,o},flipTarget:()=>{h=-h,[t,n]=[n,t],y()}}}zf.needsInterpolation=(e,t)=>typeof e=="string"||typeof t=="string";const Ep=e=>0,Cy=(e,t,n)=>{const i=t-e;return i===0?1:(n-e)/i},Hf=(e,t,n)=>-n*e+n*t+e,Ly=(e,t)=>n=>Math.max(Math.min(n,t),e),xo=e=>e%1?Number(e.toFixed(5)):e,Bo=/(-)?([\d]*\.?[\d])+/g,Sh=/(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,Zw=/^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;function pa(e){return typeof e=="string"}const ma={test:e=>typeof e=="number",parse:parseFloat,transform:e=>e},_o=Object.assign(Object.assign({},ma),{transform:Ly(0,1)}),Da=Object.assign(Object.assign({},ma),{default:1}),Gf=e=>({test:t=>pa(t)&&t.endsWith(e)&&t.split(" ").length===1,parse:parseFloat,transform:t=>`${t}${e}`}),er=Gf("deg"),bo=Gf("%"),Pe=Gf("px"),Ap=Object.assign(Object.assign({},bo),{parse:e=>bo.parse(e)/100,transform:e=>bo.transform(e*100)}),Vf=(e,t)=>n=>!!(pa(n)&&Zw.test(n)&&n.startsWith(e)||t&&Object.prototype.hasOwnProperty.call(n,t)),Py=(e,t,n)=>i=>{if(!pa(i))return i;const[r,s,o,a]=i.match(Bo);return{[e]:parseFloat(r),[t]:parseFloat(s),[n]:parseFloat(o),alpha:a!==void 0?parseFloat(a):1}},dr={test:Vf("hsl","hue"),parse:Py("hue","saturation","lightness"),transform:({hue:e,saturation:t,lightness:n,alpha:i=1})=>"hsla("+Math.round(e)+", "+bo.transform(xo(t))+", "+bo.transform(xo(n))+", "+xo(_o.transform(i))+")"},Jw=Ly(0,255),fu=Object.assign(Object.assign({},ma),{transform:e=>Math.round(Jw(e))}),Oi={test:Vf("rgb","red"),parse:Py("red","green","blue"),transform:({red:e,green:t,blue:n,alpha:i=1})=>"rgba("+fu.transform(e)+", "+fu.transform(t)+", "+fu.transform(n)+", "+xo(_o.transform(i))+")"};function Kw(e){let t="",n="",i="",r="";return e.length>5?(t=e.substr(1,2),n=e.substr(3,2),i=e.substr(5,2),r=e.substr(7,2)):(t=e.substr(1,1),n=e.substr(2,1),i=e.substr(3,1),r=e.substr(4,1),t+=t,n+=n,i+=i,r+=r),{red:parseInt(t,16),green:parseInt(n,16),blue:parseInt(i,16),alpha:r?parseInt(r,16)/255:1}}const Th={test:Vf("#"),parse:Kw,transform:Oi.transform},qt={test:e=>Oi.test(e)||Th.test(e)||dr.test(e),parse:e=>Oi.test(e)?Oi.parse(e):dr.test(e)?dr.parse(e):Th.parse(e),transform:e=>pa(e)?e:e.hasOwnProperty("red")?Oi.transform(e):dr.transform(e)},Iy="${c}",Oy="${n}";function Qw(e){var t,n,i,r;return isNaN(e)&&pa(e)&&((n=(t=e.match(Bo))===null||t===void 0?void 0:t.length)!==null&&n!==void 0?n:0)+((r=(i=e.match(Sh))===null||i===void 0?void 0:i.length)!==null&&r!==void 0?r:0)>0}function Dy(e){typeof e=="number"&&(e=`${e}`);const t=[];let n=0;const i=e.match(Sh);i&&(n=i.length,e=e.replace(Sh,Iy),t.push(...i.map(qt.parse)));const r=e.match(Bo);return r&&(e=e.replace(Bo,Oy),t.push(...r.map(ma.parse))),{values:t,numColors:n,tokenised:e}}function Ny(e){return Dy(e).values}function Fy(e){const{values:t,numColors:n,tokenised:i}=Dy(e),r=t.length;return s=>{let o=i;for(let a=0;a<r;a++)o=o.replace(a<n?Iy:Oy,a<n?qt.transform(s[a]):xo(s[a]));return o}}const eM=e=>typeof e=="number"?0:e;function tM(e){const t=Ny(e);return Fy(e)(t.map(eM))}const ga={test:Qw,parse:Ny,createTransformer:Fy,getAnimatableNone:tM},nM=new Set(["brightness","contrast","saturate","opacity"]);function iM(e){let[t,n]=e.slice(0,-1).split("(");if(t==="drop-shadow")return e;const[i]=n.match(Bo)||[];if(!i)return e;const r=n.replace(i,"");let s=nM.has(t)?1:0;return i!==n&&(s*=100),t+"("+s+r+")"}const rM=/([a-z-]*)\(.*?\)/g,Eh=Object.assign(Object.assign({},ga),{getAnimatableNone:e=>{const t=e.match(rM);return t?t.map(iM).join(" "):e}});function du(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e}function Rp({hue:e,saturation:t,lightness:n,alpha:i}){e/=360,t/=100,n/=100;let r=0,s=0,o=0;if(!t)r=s=o=n;else{const a=n<.5?n*(1+t):n+t-n*t,c=2*n-a;r=du(c,a,e+1/3),s=du(c,a,e),o=du(c,a,e-1/3)}return{red:Math.round(r*255),green:Math.round(s*255),blue:Math.round(o*255),alpha:i}}const sM=(e,t,n)=>{const i=e*e,r=t*t;return Math.sqrt(Math.max(0,n*(r-i)+i))},oM=[Th,Oi,dr],Cp=e=>oM.find(t=>t.test(e)),By=(e,t)=>{let n=Cp(e),i=Cp(t),r=n.parse(e),s=i.parse(t);n===dr&&(r=Rp(r),n=Oi),i===dr&&(s=Rp(s),i=Oi);const o=Object.assign({},r);return a=>{for(const c in o)c!=="alpha"&&(o[c]=sM(r[c],s[c],a));return o.alpha=Hf(r.alpha,s.alpha,a),n.transform(o)}},aM=e=>typeof e=="number",cM=(e,t)=>n=>t(e(n)),Uy=(...e)=>e.reduce(cM);function zy(e,t){return aM(e)?n=>Hf(e,t,n):qt.test(e)?By(e,t):Gy(e,t)}const Hy=(e,t)=>{const n=[...e],i=n.length,r=e.map((s,o)=>zy(s,t[o]));return s=>{for(let o=0;o<i;o++)n[o]=r[o](s);return n}},lM=(e,t)=>{const n=Object.assign(Object.assign({},e),t),i={};for(const r in n)e[r]!==void 0&&t[r]!==void 0&&(i[r]=zy(e[r],t[r]));return r=>{for(const s in i)n[s]=i[s](r);return n}};function Lp(e){const t=ga.parse(e),n=t.length;let i=0,r=0,s=0;for(let o=0;o<n;o++)i||typeof t[o]=="number"?i++:t[o].hue!==void 0?s++:r++;return{parsed:t,numNumbers:i,numRGB:r,numHSL:s}}const Gy=(e,t)=>{const n=ga.createTransformer(t),i=Lp(e),r=Lp(t);return i.numHSL===r.numHSL&&i.numRGB===r.numRGB&&i.numNumbers>=r.numNumbers?Uy(Hy(i.parsed,r.parsed),n):o=>`${o>0?t:e}`},uM=(e,t)=>n=>Hf(e,t,n);function hM(e){if(typeof e=="number")return uM;if(typeof e=="string")return qt.test(e)?By:Gy;if(Array.isArray(e))return Hy;if(typeof e=="object")return lM}function fM(e,t,n){const i=[],r=n||hM(e[0]),s=e.length-1;for(let o=0;o<s;o++){let a=r(e[o],e[o+1]);if(t){const c=Array.isArray(t)?t[o]:t;a=Uy(c,a)}i.push(a)}return i}function dM([e,t],[n]){return i=>n(Cy(e,t,i))}function pM(e,t){const n=e.length,i=n-1;return r=>{let s=0,o=!1;if(r<=e[0]?o=!0:r>=e[i]&&(s=i-1,o=!0),!o){let c=1;for(;c<n&&!(e[c]>r||c===i);c++);s=c-1}const a=Cy(e[s],e[s+1],r);return t[s](a)}}function Vy(e,t,{clamp:n=!0,ease:i,mixer:r}={}){const s=e.length;Sp(s===t.length),Sp(!i||!Array.isArray(i)||i.length===s-1),e[0]>e[s-1]&&(e=[].concat(e),t=[].concat(t),e.reverse(),t.reverse());const o=fM(t,i,r),a=s===2?dM(e,o):pM(e,o);return n?c=>a(wh(e[0],e[s-1],c)):a}const Nl=e=>t=>1-e(1-t),kf=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,mM=e=>t=>Math.pow(t,e),ky=e=>t=>t*t*((e+1)*t-e),gM=e=>{const t=ky(e);return n=>(n*=2)<1?.5*t(n):.5*(2-Math.pow(2,-10*(n-1)))},Wy=1.525,yM=4/11,vM=8/11,xM=9/10,jy=e=>e,Wf=mM(2),_M=Nl(Wf),qy=kf(Wf),Xy=e=>1-Math.sin(Math.acos(e)),Yy=Nl(Xy),bM=kf(Yy),jf=ky(Wy),wM=Nl(jf),MM=kf(jf),SM=gM(Wy),TM=4356/361,EM=35442/1805,AM=16061/1805,kc=e=>{if(e===1||e===0)return e;const t=e*e;return e<yM?7.5625*t:e<vM?9.075*t-9.9*e+3.4:e<xM?TM*t-EM*e+AM:10.8*e*e-20.52*e+10.72},RM=Nl(kc),CM=e=>e<.5?.5*(1-kc(1-e*2)):.5*kc(e*2-1)+.5;function LM(e,t){return e.map(()=>t||qy).splice(0,e.length-1)}function PM(e){const t=e.length;return e.map((n,i)=>i!==0?i/(t-1):0)}function IM(e,t){return e.map(n=>n*t)}function Ic({from:e=0,to:t=1,ease:n,offset:i,duration:r=300}){const s={done:!1,value:e},o=Array.isArray(t)?t:[e,t],a=IM(i&&i.length===o.length?i:PM(o),r);function c(){return Vy(a,o,{ease:Array.isArray(n)?n:LM(o,n)})}let l=c();return{next:h=>(s.value=l(h),s.done=h>=r,s),flipTarget:()=>{o.reverse(),l=c()}}}function OM({velocity:e=0,from:t=0,power:n=.8,timeConstant:i=350,restDelta:r=.5,modifyTarget:s}){const o={done:!1,value:t};let a=n*e;const c=t+a,l=s===void 0?c:s(c);return l!==c&&(a=l-t),{next:h=>{const u=-a*Math.exp(-h/i);return o.done=!(u>r||u<-r),o.value=o.done?l:l+u,o},flipTarget:()=>{}}}const Pp={keyframes:Ic,spring:zf,decay:OM};function DM(e){if(Array.isArray(e.to))return Ic;if(Pp[e.type])return Pp[e.type];const t=new Set(Object.keys(e));return t.has("ease")||t.has("duration")&&!t.has("dampingRatio")?Ic:t.has("dampingRatio")||t.has("stiffness")||t.has("mass")||t.has("damping")||t.has("restSpeed")||t.has("restDelta")?zf:Ic}function $y(e,t,n=0){return e-t-n}function NM(e,t,n=0,i=!0){return i?$y(t+-e,t,n):t-(e-t)+n}function FM(e,t,n,i){return i?e>=t+n:e<=-n}const BM=e=>{const t=({delta:n})=>e(n);return{start:()=>bh.update(t,!0),stop:()=>Bw.update(t)}};function Zy(e){var t,n,{from:i,autoplay:r=!0,driver:s=BM,elapsed:o=0,repeat:a=0,repeatType:c="loop",repeatDelay:l=0,onPlay:h,onStop:u,onComplete:f,onRepeat:d,onUpdate:p}=e,y=Ry(e,["from","autoplay","driver","elapsed","repeat","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate"]);let{to:v}=y,g,m=0,x=y.duration,_,T=!1,b=!0,L;const D=DM(y);!((n=(t=D).needsInterpolation)===null||n===void 0)&&n.call(t,i,v)&&(L=Vy([0,100],[i,v],{clamp:!1}),i=0,v=100);const I=D(Object.assign(Object.assign({},y),{from:i,to:v}));function Y(){m++,c==="reverse"?(b=m%2===0,o=NM(o,x,l,b)):(o=$y(o,x,l),c==="mirror"&&I.flipTarget()),T=!1,d&&d()}function z(){g.stop(),f&&f()}function V(O){if(b||(O=-O),o+=O,!T){const N=I.next(Math.max(0,o));_=N.value,L&&(_=L(_)),T=b?N.done:o<=0}p?.(_),T&&(m===0&&(x??(x=o)),m<a?FM(o,x,l,b)&&Y():z())}function k(){h?.(),g=s(V),g.start()}return r&&k(),{stop:()=>{u?.(),g.stop()}}}function Jy(e,t){return t?e*(1e3/t):0}function UM({from:e=0,velocity:t=0,min:n,max:i,power:r=.8,timeConstant:s=750,bounceStiffness:o=500,bounceDamping:a=10,restDelta:c=1,modifyTarget:l,driver:h,onUpdate:u,onComplete:f,onStop:d}){let p;function y(x){return n!==void 0&&x<n||i!==void 0&&x>i}function v(x){return n===void 0?i:i===void 0||Math.abs(n-x)<Math.abs(i-x)?n:i}function g(x){p?.stop(),p=Zy(Object.assign(Object.assign({},x),{driver:h,onUpdate:_=>{var T;u?.(_),(T=x.onUpdate)===null||T===void 0||T.call(x,_)},onComplete:f,onStop:d}))}function m(x){g(Object.assign({type:"spring",stiffness:o,damping:a,restDelta:c},x))}if(y(e))m({from:e,velocity:t,to:v(e)});else{let x=r*t+e;typeof l<"u"&&(x=l(x));const _=v(x),T=_===n?-1:1;let b,L;const D=I=>{b=L,L=I,t=Jy(I-b,Ay().delta),(T===1&&I>_||T===-1&&I<_)&&m({from:I,to:_,velocity:t})};g({type:"decay",from:e,velocity:t,timeConstant:s,power:r,restDelta:c,modifyTarget:l,onUpdate:y(x)?D:void 0})}return{stop:()=>p?.stop()}}const Ky=(e,t)=>1-3*t+3*e,Qy=(e,t)=>3*t-6*e,ev=e=>3*e,Wc=(e,t,n)=>((Ky(t,n)*e+Qy(t,n))*e+ev(t))*e,tv=(e,t,n)=>3*Ky(t,n)*e*e+2*Qy(t,n)*e+ev(t),zM=1e-7,HM=10;function GM(e,t,n,i,r){let s,o,a=0;do o=t+(n-t)/2,s=Wc(o,i,r)-e,s>0?n=o:t=o;while(Math.abs(s)>zM&&++a<HM);return o}const VM=8,kM=.001;function WM(e,t,n,i){for(let r=0;r<VM;++r){const s=tv(t,n,i);if(s===0)return t;const o=Wc(t,n,i)-e;t-=o/s}return t}const Oc=11,Na=1/(Oc-1);function jM(e,t,n,i){if(e===t&&n===i)return jy;const r=new Float32Array(Oc);for(let o=0;o<Oc;++o)r[o]=Wc(o*Na,e,n);function s(o){let a=0,c=1;const l=Oc-1;for(;c!==l&&r[c]<=o;++c)a+=Na;--c;const h=(o-r[c])/(r[c+1]-r[c]),u=a+h*Na,f=tv(u,e,n);return f>=kM?WM(o,u,e,n):f===0?u:GM(o,a,a+Na,e,n)}return o=>o===0||o===1?o:Wc(s(o),t,i)}const qf={},pu={};class qM{subscriptions=new Set;add(t){return this.subscriptions.add(t),()=>this.subscriptions.delete(t)}notify(t,n,i){if(this.subscriptions.size)for(const r of this.subscriptions)r(t,n,i)}clear(){this.subscriptions.clear()}}function Ip(e){return!Number.isNaN(Number.parseFloat(e))}class XM{current;prev;timeDelta=0;lastUpdated=0;updateSubscribers=new qM;stopAnimation;canTrackVelocity=!1;constructor(t){this.prev=this.current=t,this.canTrackVelocity=Ip(this.current)}onChange(t){return this.updateSubscribers.add(t)}clearListeners(){this.updateSubscribers.clear()}set(t){this.updateAndNotify(t)}updateAndNotify=t=>{this.prev=this.current,this.current=t;const{delta:n,timestamp:i}=Ay();this.lastUpdated!==i&&(this.timeDelta=n,this.lastUpdated=i),bh.postRender(this.scheduleVelocityCheck),this.updateSubscribers.notify(this.current)};get(){return this.current}getPrevious(){return this.prev}getVelocity(){return this.canTrackVelocity?Jy(Number.parseFloat(this.current)-Number.parseFloat(this.prev),this.timeDelta):0}scheduleVelocityCheck=()=>bh.postRender(this.velocityCheck);velocityCheck=({timestamp:t})=>{this.canTrackVelocity||(this.canTrackVelocity=Ip(this.current)),t!==this.lastUpdated&&(this.prev=this.current)};start(t){return this.stop(),new Promise(n=>{const{stop:i}=t(n);this.stopAnimation=i}).then(()=>this.clearAnimation())}stop(){this.stopAnimation&&this.stopAnimation(),this.clearAnimation()}isAnimating(){return!!this.stopAnimation}clearAnimation(){this.stopAnimation=null}destroy(){this.updateSubscribers.clear(),this.stop()}}function YM(e){return new XM(e)}const{isArray:$M}=Array;function ZM(){const e=Rt({}),t=i=>{const r=s=>{e.value[s]&&(e.value[s].stop(),e.value[s].destroy(),delete e.value[s])};i?$M(i)?i.forEach(r):r(i):Object.keys(e.value).forEach(r)},n=(i,r,s)=>{if(e.value[i])return e.value[i];const o=YM(r);return o.onChange(a=>s[i]=a),e.value[i]=o,o};return Cw(t),{motionValues:e,get:n,stop:t}}function JM(e){return Array.isArray(e)}function tr(){return{type:"spring",stiffness:500,damping:25,restDelta:.5,restSpeed:10}}function mu(e){return{type:"spring",stiffness:550,damping:e===0?2*Math.sqrt(550):30,restDelta:.01,restSpeed:10}}function KM(e){return{type:"spring",stiffness:550,damping:e===0?100:30,restDelta:.01,restSpeed:10}}function gu(){return{type:"keyframes",ease:"linear",duration:300}}function QM(e){return{type:"keyframes",duration:800,values:e}}const Op={default:KM,x:tr,y:tr,z:tr,rotate:tr,rotateX:tr,rotateY:tr,rotateZ:tr,scaleX:mu,scaleY:mu,scale:mu,backgroundColor:gu,color:gu,opacity:gu};function nv(e,t){let n;return JM(t)?n=QM:n=Op[e]||Op.default,{to:t,...n(t)}}const Dp={...ma,transform:Math.round},iv={color:qt,backgroundColor:qt,outlineColor:qt,fill:qt,stroke:qt,borderColor:qt,borderTopColor:qt,borderRightColor:qt,borderBottomColor:qt,borderLeftColor:qt,borderWidth:Pe,borderTopWidth:Pe,borderRightWidth:Pe,borderBottomWidth:Pe,borderLeftWidth:Pe,borderRadius:Pe,radius:Pe,borderTopLeftRadius:Pe,borderTopRightRadius:Pe,borderBottomRightRadius:Pe,borderBottomLeftRadius:Pe,width:Pe,maxWidth:Pe,height:Pe,maxHeight:Pe,size:Pe,top:Pe,right:Pe,bottom:Pe,left:Pe,padding:Pe,paddingTop:Pe,paddingRight:Pe,paddingBottom:Pe,paddingLeft:Pe,margin:Pe,marginTop:Pe,marginRight:Pe,marginBottom:Pe,marginLeft:Pe,rotate:er,rotateX:er,rotateY:er,rotateZ:er,scale:Da,scaleX:Da,scaleY:Da,scaleZ:Da,skew:er,skewX:er,skewY:er,distance:Pe,translateX:Pe,translateY:Pe,translateZ:Pe,x:Pe,y:Pe,z:Pe,perspective:Pe,transformPerspective:Pe,opacity:_o,originX:Ap,originY:Ap,originZ:Pe,zIndex:Dp,filter:Eh,WebkitFilter:Eh,fillOpacity:_o,strokeOpacity:_o,numOctaves:Dp},Xf=e=>iv[e];function Ah(e,t){return t&&typeof e=="number"&&t.transform?t.transform(e):e}function e1(e,t){let n=Xf(e);return n!==Eh&&(n=ga),n.getAnimatableNone?n.getAnimatableNone(t):void 0}const t1={linear:jy,easeIn:Wf,easeInOut:qy,easeOut:_M,circIn:Xy,circInOut:bM,circOut:Yy,backIn:jf,backInOut:MM,backOut:wM,anticipate:SM,bounceIn:RM,bounceInOut:CM,bounceOut:kc};function Np(e){if(Array.isArray(e)){const[t,n,i,r]=e;return jM(t,n,i,r)}else if(typeof e=="string")return t1[e];return e}function n1(e){return Array.isArray(e)&&typeof e[0]!="number"}function Fp(e,t){return e==="zIndex"?!1:!!(typeof t=="number"||Array.isArray(t)||typeof t=="string"&&ga.test(t)&&!t.startsWith("url("))}function i1(e){return Array.isArray(e.to)&&e.to[0]===null&&(e.to=[...e.to],e.to[0]=e.from),e}function r1({ease:e,times:t,delay:n,...i}){const r={...i};return t&&(r.offset=t),e&&(r.ease=n1(e)?e.map(Np):Np(e)),n&&(r.elapsed=-n),r}function s1(e,t,n){return Array.isArray(t.to)&&(e.duration||(e.duration=800)),i1(t),o1(e)||(e={...e,...nv(n,t.to)}),{...t,...r1(e)}}function o1({delay:e,repeat:t,repeatType:n,repeatDelay:i,from:r,...s}){return!!Object.keys(s).length}function a1(e,t){return e[t]||e.default||e}function c1(e,t,n,i,r){const s=a1(i,e);let o=s.from===null||s.from===void 0?t.get():s.from;const a=Fp(e,n);o==="none"&&a&&typeof n=="string"&&(o=e1(e,n));const c=Fp(e,o);function l(u){const f={from:o,to:n,velocity:i.velocity?i.velocity:t.getVelocity(),onUpdate:d=>t.set(d)};return s.type==="inertia"||s.type==="decay"?UM({...f,...s}):Zy({...s1(s,f,e),onUpdate:d=>{f.onUpdate(d),s.onUpdate&&s.onUpdate(d)},onComplete:()=>{r&&r(),u&&u()}})}function h(u){return t.set(n),r&&r(),u&&u(),{stop:()=>{}}}return!c||!a||s.type===!1?h:l}function l1(){const{motionValues:e,stop:t,get:n}=ZM();return{motionValues:e,stop:t,push:(r,s,o,a={},c)=>{const l=o[r],h=n(r,l,o);if(a&&a.immediate){h.set(s);return}const u=c1(r,h,s,a,c);h.start(u)}}}function u1(e,t={},{motionValues:n,push:i,stop:r}=l1()){const s=Gt(t),o=Rt(!1);Ct(n,u=>{o.value=Object.values(u).filter(f=>f.isAnimating()).length>0},{immediate:!0,deep:!0});const a=u=>{if(!s||!s[u])throw new Error(`The variant ${u} does not exist.`);return s[u]},c=u=>{typeof u=="string"&&(u=a(u));const f=Object.entries(u).map(([p,y])=>{if(p!=="transition")return new Promise(v=>i(p,y,e,u.transition||nv(p,u[p]),v))}).filter(Boolean);async function d(){await Promise.all(f),u.transition?.onComplete?.()}return Promise.all([d()])};return{isAnimating:o,apply:c,set:u=>{const f=Vc(u)?u:a(u);Object.entries(f).forEach(([d,p])=>{d!=="transition"&&i(d,p,e,{immediate:!0})})},leave:async u=>{let f;if(s&&(s.leave&&(f=s.leave),!s.leave&&s.initial&&(f=s.initial)),!f){u();return}await c(f),u()},stop:r}}const Yf=typeof window<"u",h1=()=>Yf&&(window.onpointerdown===null||qf?.TEST),f1=()=>Yf&&(window.ontouchstart===null||qf?.TEST),d1=()=>Yf&&(window.onmousedown===null||qf?.TEST);function p1({target:e,state:t,variants:n,apply:i}){const r=Gt(n),s=Rt(!1),o=Rt(!1),a=Rt(!1),c=ft(()=>{let h=[...Object.keys(t.value||{})];return r&&(r.hovered&&(h=[...h,...Object.keys(r.hovered)]),r.tapped&&(h=[...h,...Object.keys(r.tapped)]),r.focused&&(h=[...h,...Object.keys(r.focused)])),h}),l=ft(()=>{const h={};Object.assign(h,t.value),s.value&&r.hovered&&Object.assign(h,r.hovered),o.value&&r.tapped&&Object.assign(h,r.tapped),a.value&&r.focused&&Object.assign(h,r.focused);for(const u in h)c.value.includes(u)||delete h[u];return h});r.hovered&&(In(e,"mouseenter",()=>s.value=!0),In(e,"mouseleave",()=>{s.value=!1,o.value=!1})),r.tapped&&(d1()&&(In(e,"mousedown",()=>o.value=!0),In(e,"mouseup",()=>o.value=!1)),h1()&&(In(e,"pointerdown",()=>o.value=!0),In(e,"pointerup",()=>o.value=!1)),f1()&&(In(e,"touchstart",()=>o.value=!0),In(e,"touchend",()=>o.value=!1))),r.focused&&(In(e,"focus",()=>a.value=!0),In(e,"blur",()=>a.value=!1)),Ct([s,o,a],()=>{i(l.value)})}function m1({set:e,target:t,variants:n,variant:i}){const r=Gt(n);Ct(()=>t,()=>{r&&(r.initial&&(e("initial"),i.value="initial"),r.enter&&(i.value="enter"))},{immediate:!0,flush:"pre"})}function g1({state:e,apply:t}){Ct(e,n=>{n&&t(n)},{immediate:!0})}function rv({target:e,variants:t,variant:n}){const i=Gt(t);i&&(i.visible||i.visibleOnce)&&Ow(e,([{isIntersecting:r}])=>{i.visible?r?n.value="visible":n.value="initial":i.visibleOnce&&(r&&n.value!=="visibleOnce"?n.value="visibleOnce":n.value||(n.value="initial"))})}function y1(e,t={syncVariants:!0,lifeCycleHooks:!0,visibilityHooks:!0,eventListeners:!0}){t.lifeCycleHooks&&m1(e),t.syncVariants&&g1(e),t.visibilityHooks&&rv(e),t.eventListeners&&p1(e)}function sv(e={}){const t=Zi({...e}),n=Rt({});return Ct(t,()=>{const i={};for(const[r,s]of Object.entries(t)){const o=Xf(r),a=Ah(s,o);i[r]=a}n.value=i},{immediate:!0,deep:!0}),{state:t,style:n}}function $f(e,t){Ct(()=>vo(e),n=>{n&&t(n)},{immediate:!0})}const v1={x:"translateX",y:"translateY",z:"translateZ"};function ov(e={},t=!0){const n=Zi({...e}),i=Rt("");return Ct(n,r=>{let s="",o=!1;if(t&&(r.x||r.y||r.z)){const a=[r.x||0,r.y||0,r.z||0].map(c=>Ah(c,Pe)).join(",");s+=`translate3d(${a}) `,o=!0}for(const[a,c]of Object.entries(r)){if(t&&(a==="x"||a==="y"||a==="z"))continue;const l=Xf(a),h=Ah(c,l);s+=`${v1[a]||a}(${h}) `}t&&!o&&(s+="translateZ(0px) "),i.value=s.trim()},{immediate:!0,deep:!0}),{state:n,transform:i}}const x1=["","X","Y","Z"],_1=["perspective","translate","scale","rotate","skew"],av=["transformPerspective","x","y","z"];_1.forEach(e=>{x1.forEach(t=>{const n=e+t;av.push(n)})});const b1=new Set(av);function Zf(e){return b1.has(e)}const w1=new Set(["originX","originY","originZ"]);function cv(e){return w1.has(e)}function M1(e){const t={},n={};return Object.entries(e).forEach(([i,r])=>{Zf(i)||cv(i)?t[i]=r:n[i]=r}),{transform:t,style:n}}function Fl(e){const{transform:t,style:n}=M1(e),{transform:i}=ov(t),{style:r}=sv(n);return i.value&&(r.value.transform=i.value),r.value}function S1(e,t){let n,i;const{state:r,style:s}=sv();return $f(e,o=>{i=o;for(const a of Object.keys(iv))o.style[a]===null||o.style[a]===""||Zf(a)||cv(a)||(r[a]=o.style[a]);n&&Object.entries(n).forEach(([a,c])=>o.style[a]=c),t&&t(r)}),Ct(s,o=>{if(!i){n=o;return}for(const a in o)i.style[a]=o[a]},{immediate:!0}),{style:r}}function T1(e){const t=e.trim().split(/\) |\)/);if(t.length===1)return{};const n=i=>i.endsWith("px")||i.endsWith("deg")?Number.parseFloat(i):Number.isNaN(Number(i))?Number(i):i;return t.reduce((i,r)=>{if(!r)return i;const[s,o]=r.split("("),c=o.split(",").map(h=>n(h.endsWith(")")?h.replace(")",""):h.trim())),l=c.length===1?c[0]:c;return{...i,[s]:l}},{})}function E1(e,t){Object.entries(T1(t)).forEach(([n,i])=>{const r=["x","y","z"];if(n==="translate3d"){if(i===0){r.forEach(s=>e[s]=0);return}i.forEach((s,o)=>e[r[o]]=s);return}if(i=Number.parseFloat(`${i}`),n==="translateX"){e.x=i;return}if(n==="translateY"){e.y=i;return}if(n==="translateZ"){e.z=i;return}e[n]=i})}function A1(e,t){let n,i;const{state:r,transform:s}=ov();return $f(e,o=>{i=o,o.style.transform&&E1(r,o.style.transform),n&&(o.style.transform=n),t&&t(r)}),Ct(s,o=>{if(!i){n=o;return}i.style.transform=o},{immediate:!0}),{transform:r}}function R1(e){return Object.entries(e)}function C1(e,t){const n=Zi({}),i=o=>Object.entries(o).forEach(([a,c])=>n[a]=c),{style:r}=S1(e,i),{transform:s}=A1(e,i);return Ct(n,o=>{R1(o).forEach(([a,c])=>{const l=Zf(a)?s:r;l[a]&&l[a]===c||(l[a]=c)})},{immediate:!0,deep:!0}),$f(e,()=>t),{motionProperties:n,style:r,transform:s}}function L1(e={}){const t=Gt(e),n=Rt();return{state:ft(()=>{if(n.value)return t[n.value]}),variant:n}}function Jf(e,t={},n){const{motionProperties:i}=C1(e),{variant:r,state:s}=L1(t),o=u1(i,t),a={target:e,variant:r,variants:t,state:s,motionProperties:i,...o};return y1(a,n),a}const lv=["delay","duration"],P1=["initial","enter","leave","visible","visible-once","visibleOnce","hovered","tapped","focused",...lv];function I1(e){return lv.includes(e)}function O1(e,t){const n=e.props?e.props:e.data&&e.data.attrs?e.data.attrs:{};if(n){n.variants&&Vc(n.variants)&&(t.value={...t.value,...n.variants});for(let i of P1)if(!(!n||!n[i])){if(I1(i)&&typeof n[i]=="number"){for(const r of["enter","visible","visibleOnce"]){const s=t.value[r];s!=null&&(s.transition??={},s.transition[i]=n[i])}continue}if(Vc(n[i])){const r=n[i];i==="visible-once"&&(i="visibleOnce"),t.value[i]=r}}}}function yu(e,t=!1){return{created:(r,s,o)=>{const a=s.value&&typeof s.value=="string"?s.value:o.key;a&&pu[a]&&pu[a].stop();const c=t?structuredClone(ze(e)||{}):e||{},l=Rt(c);typeof s.value=="object"&&(l.value=s.value),O1(o,l);const u=Jf(r,l,{eventListeners:!0,lifeCycleHooks:!0,syncVariants:!0,visibilityHooks:!1});r.motionInstance=u,a&&(pu[a]=u)},mounted:(r,s,o)=>{r.motionInstance&&rv(r.motionInstance)},getSSRProps(r,s){let{initial:o}=r.value||s&&s?.props||{};o=Gt(o);const a=by({},e?.initial||{},o||{});return!a||Object.keys(a).length===0?void 0:{style:Fl(a)}}}}const D1={initial:{opacity:0},enter:{opacity:1}},N1={initial:{opacity:0},visible:{opacity:1}},F1={initial:{opacity:0},visibleOnce:{opacity:1}},B1={initial:{scale:0,opacity:0},enter:{scale:1,opacity:1}},U1={initial:{scale:0,opacity:0},visible:{scale:1,opacity:1}},z1={initial:{scale:0,opacity:0},visibleOnce:{scale:1,opacity:1}},H1={initial:{x:-100,rotate:90,opacity:0},enter:{x:0,rotate:0,opacity:1}},G1={initial:{x:-100,rotate:90,opacity:0},visible:{x:0,rotate:0,opacity:1}},V1={initial:{x:-100,rotate:90,opacity:0},visibleOnce:{x:0,rotate:0,opacity:1}},k1={initial:{x:100,rotate:-90,opacity:0},enter:{x:0,rotate:0,opacity:1}},W1={initial:{x:100,rotate:-90,opacity:0},visible:{x:0,rotate:0,opacity:1}},j1={initial:{x:100,rotate:-90,opacity:0},visibleOnce:{x:0,rotate:0,opacity:1}},q1={initial:{y:-100,rotate:-90,opacity:0},enter:{y:0,rotate:0,opacity:1}},X1={initial:{y:-100,rotate:-90,opacity:0},visible:{y:0,rotate:0,opacity:1}},Y1={initial:{y:-100,rotate:-90,opacity:0},visibleOnce:{y:0,rotate:0,opacity:1}},$1={initial:{y:100,rotate:90,opacity:0},enter:{y:0,rotate:0,opacity:1}},Z1={initial:{y:100,rotate:90,opacity:0},visible:{y:0,rotate:0,opacity:1}},J1={initial:{y:100,rotate:90,opacity:0},visibleOnce:{y:0,rotate:0,opacity:1}},K1={initial:{x:-100,opacity:0},enter:{x:0,opacity:1}},Q1={initial:{x:-100,opacity:0},visible:{x:0,opacity:1}},eS={initial:{x:-100,opacity:0},visibleOnce:{x:0,opacity:1}},tS={initial:{x:100,opacity:0},enter:{x:0,opacity:1}},nS={initial:{x:100,opacity:0},visible:{x:0,opacity:1}},iS={initial:{x:100,opacity:0},visibleOnce:{x:0,opacity:1}},rS={initial:{y:-100,opacity:0},enter:{y:0,opacity:1}},sS={initial:{y:-100,opacity:0},visible:{y:0,opacity:1}},oS={initial:{y:-100,opacity:0},visibleOnce:{y:0,opacity:1}},aS={initial:{y:100,opacity:0},enter:{y:0,opacity:1}},cS={initial:{y:100,opacity:0},visible:{y:0,opacity:1}},lS={initial:{y:100,opacity:0},visibleOnce:{y:0,opacity:1}},jc={__proto__:null,fade:D1,fadeVisible:N1,fadeVisibleOnce:F1,pop:B1,popVisible:U1,popVisibleOnce:z1,rollBottom:$1,rollLeft:H1,rollRight:k1,rollTop:q1,rollVisibleBottom:Z1,rollVisibleLeft:G1,rollVisibleOnceBottom:J1,rollVisibleOnceLeft:V1,rollVisibleOnceRight:j1,rollVisibleOnceTop:Y1,rollVisibleRight:W1,rollVisibleTop:X1,slideBottom:aS,slideLeft:K1,slideRight:tS,slideTop:rS,slideVisibleBottom:cS,slideVisibleLeft:Q1,slideVisibleOnceBottom:lS,slideVisibleOnceLeft:eS,slideVisibleOnceRight:iS,slideVisibleOnceTop:oS,slideVisibleRight:nS,slideVisibleTop:sS};function uS(e){const t="àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;",n="aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------",i=new RegExp(t.split("").join("|"),"g");return e.toString().replace(/[A-Z]/g,r=>`-${r}`).toLowerCase().replace(/\s+/g,"-").replace(i,r=>n.charAt(t.indexOf(r))).replace(/&/g,"-and-").replace(/[^\w\-]+/g,"").replace(/-{2,}/g,"-").replace(/^-+/,"").replace(/-+$/,"")}const uv=Symbol(""),hv={preset:{type:String,required:!1},instance:{type:Object,required:!1},variants:{type:Object,required:!1},initial:{type:Object,required:!1},enter:{type:Object,required:!1},leave:{type:Object,required:!1},visible:{type:Object,required:!1},visibleOnce:{type:Object,required:!1},hovered:{type:Object,required:!1},tapped:{type:Object,required:!1},focused:{type:Object,required:!1},delay:{type:[Number,String],required:!1},duration:{type:[Number,String],required:!1}};function hS(e){return Object.prototype.toString.call(e)==="[object Object]"}function Rh(e){if(Array.isArray(e))return e.map(Rh);if(hS(e)){const t={};for(const n in e)t[n]=Rh(e[n]);return t}return e}function fv(e){const t=Zi({}),n=Sn(uv,{}),i=ft(()=>e.preset==null?{}:n!=null&&e.preset in n?structuredClone(ze(n)[e.preset]):e.preset in jc?structuredClone(jc[e.preset]):{}),r=ft(()=>({initial:e.initial,enter:e.enter,leave:e.leave,visible:e.visible,visibleOnce:e.visibleOnce,hovered:e.hovered,tapped:e.tapped,focused:e.focused}));function s(c,l){for(const h of["delay","duration"]){if(l[h]==null)continue;const u=Number.parseInt(l[h]);for(const f of["enter","visible","visibleOnce"]){const d=c[f];d!=null&&(d.transition??={},d.transition[h]=u)}}return c}const o=ft(()=>{const c=by({},r.value,i.value,e.variants||{});return s({...c},e)});function a(c,l,h){c.props??={},c.props.style??={},c.props.style={...c.props.style,...h};const u=s(Rh(o.value),c.props);return c.props.onVnodeMounted=({el:f})=>{t[l]=Jf(f,u)},c.props.onVnodeUpdated=({el:f})=>{const d=Fl(t[l].state);for(const[p,y]of Object.entries(d))f.style[p]=y},c}return{motionConfig:o,setNodeInstance:a}}const fS=Al({name:"Motion",props:{...hv,is:{type:[String,Object],default:"div"}},setup(e){const t=Jg(),{motionConfig:n,setNodeInstance:i}=fv(e);return()=>{const r=Fl(n.value.initial||{}),s=Ol(e.is,void 0,t);return i(s,0,r),s}}}),dS=Al({name:"MotionGroup",props:{...hv,is:{type:[String,Object],required:!1}},setup(e){const t=Jg(),{motionConfig:n,setNodeInstance:i}=fv(e);return()=>{const r=Fl(n.value.initial||{}),s=t.default?.()||[];for(let o=0;o<s.length;o++){const a=s[o];a.type===xn&&Array.isArray(a.children)?a.children.forEach(function c(l,h){if(l!=null){if(Array.isArray(l)){c(l,h);return}typeof l=="object"&&i(l,h,r)}}):i(a,o,r)}return e.is?Ol(e.is,void 0,s):s}}}),pS={install(e,t){if(e.directive("motion",yu()),!t||t&&!t.excludePresets)for(const n in jc){const i=jc[n];e.directive(`motion-${uS(n)}`,yu(i,!0))}if(t&&t.directives)for(const n in t.directives){const i=t.directives[n];i.initial,e.directive(`motion-${n}`,yu(i,!0))}e.provide(uv,t?.directives),e.component("Motion",fS),e.component("MotionGroup",dS)}},mS={__name:"son",props:{msg:{type:String,default:""}},setup(e){const t=e;return(n,i)=>(ui(),hi("div",null,[i[0]||(i[0]=it("h3",null,"这是子组件接收的父组件信息",-1)),it("p",null,xr(t.msg),1)]))}};/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */const rs=typeof document<"u";function dv(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function gS(e){return e.__esModule||e[Symbol.toStringTag]==="Module"||e.default&&dv(e.default)}const Ge=Object.assign;function vu(e,t){const n={};for(const i in t){const r=t[i];n[i]=Tn(r)?r.map(e):e(r)}return n}const wo=()=>{},Tn=Array.isArray,pv=/#/g,yS=/&/g,vS=/\//g,xS=/=/g,_S=/\?/g,mv=/\+/g,bS=/%5B/g,wS=/%5D/g,gv=/%5E/g,MS=/%60/g,yv=/%7B/g,SS=/%7C/g,vv=/%7D/g,TS=/%20/g;function Kf(e){return encodeURI(""+e).replace(SS,"|").replace(bS,"[").replace(wS,"]")}function ES(e){return Kf(e).replace(yv,"{").replace(vv,"}").replace(gv,"^")}function Ch(e){return Kf(e).replace(mv,"%2B").replace(TS,"+").replace(pv,"%23").replace(yS,"%26").replace(MS,"`").replace(yv,"{").replace(vv,"}").replace(gv,"^")}function AS(e){return Ch(e).replace(xS,"%3D")}function RS(e){return Kf(e).replace(pv,"%23").replace(_S,"%3F")}function CS(e){return e==null?"":RS(e).replace(vS,"%2F")}function Uo(e){try{return decodeURIComponent(""+e)}catch{}return""+e}const LS=/\/$/,PS=e=>e.replace(LS,"");function xu(e,t,n="/"){let i,r={},s="",o="";const a=t.indexOf("#");let c=t.indexOf("?");return a<c&&a>=0&&(c=-1),c>-1&&(i=t.slice(0,c),s=t.slice(c+1,a>-1?a:t.length),r=e(s)),a>-1&&(i=i||t.slice(0,a),o=t.slice(a,t.length)),i=NS(i??t,n),{fullPath:i+(s&&"?")+s+o,path:i,query:r,hash:Uo(o)}}function IS(e,t){const n=t.query?e(t.query):"";return t.path+(n&&"?")+n+(t.hash||"")}function Bp(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||"/"}function OS(e,t,n){const i=t.matched.length-1,r=n.matched.length-1;return i>-1&&i===r&&_s(t.matched[i],n.matched[r])&&xv(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function _s(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function xv(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!DS(e[n],t[n]))return!1;return!0}function DS(e,t){return Tn(e)?Up(e,t):Tn(t)?Up(t,e):e===t}function Up(e,t){return Tn(t)?e.length===t.length&&e.every((n,i)=>n===t[i]):e.length===1&&e[0]===t}function NS(e,t){if(e.startsWith("/"))return e;if(!e)return t;const n=t.split("/"),i=e.split("/"),r=i[i.length-1];(r===".."||r===".")&&i.push("");let s=n.length-1,o,a;for(o=0;o<i.length;o++)if(a=i[o],a!==".")if(a==="..")s>1&&s--;else break;return n.slice(0,s).join("/")+"/"+i.slice(o).join("/")}const bi={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var zo;(function(e){e.pop="pop",e.push="push"})(zo||(zo={}));var Mo;(function(e){e.back="back",e.forward="forward",e.unknown=""})(Mo||(Mo={}));function FS(e){if(!e)if(rs){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),PS(e)}const BS=/^[^#]+#/;function US(e,t){return e.replace(BS,"#")+t}function zS(e,t){const n=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{behavior:t.behavior,left:i.left-n.left-(t.left||0),top:i.top-n.top-(t.top||0)}}const Bl=()=>({left:window.scrollX,top:window.scrollY});function HS(e){let t;if("el"in e){const n=e.el,i=typeof n=="string"&&n.startsWith("#"),r=typeof n=="string"?i?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!r)return;t=zS(r,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.scrollX,t.top!=null?t.top:window.scrollY)}function zp(e,t){return(history.state?history.state.position-t:-1)+e}const Lh=new Map;function GS(e,t){Lh.set(e,t)}function VS(e){const t=Lh.get(e);return Lh.delete(e),t}let kS=()=>location.protocol+"//"+location.host;function _v(e,t){const{pathname:n,search:i,hash:r}=t,s=e.indexOf("#");if(s>-1){let a=r.includes(e.slice(s))?e.slice(s).length:1,c=r.slice(a);return c[0]!=="/"&&(c="/"+c),Bp(c,"")}return Bp(n,e)+i+r}function WS(e,t,n,i){let r=[],s=[],o=null;const a=({state:f})=>{const d=_v(e,location),p=n.value,y=t.value;let v=0;if(f){if(n.value=d,t.value=f,o&&o===p){o=null;return}v=y?f.position-y.position:0}else i(d);r.forEach(g=>{g(n.value,p,{delta:v,type:zo.pop,direction:v?v>0?Mo.forward:Mo.back:Mo.unknown})})};function c(){o=n.value}function l(f){r.push(f);const d=()=>{const p=r.indexOf(f);p>-1&&r.splice(p,1)};return s.push(d),d}function h(){const{history:f}=window;f.state&&f.replaceState(Ge({},f.state,{scroll:Bl()}),"")}function u(){for(const f of s)f();s=[],window.removeEventListener("popstate",a),window.removeEventListener("beforeunload",h)}return window.addEventListener("popstate",a),window.addEventListener("beforeunload",h,{passive:!0}),{pauseListeners:c,listen:l,destroy:u}}function Hp(e,t,n,i=!1,r=!1){return{back:e,current:t,forward:n,replaced:i,position:window.history.length,scroll:r?Bl():null}}function jS(e){const{history:t,location:n}=window,i={value:_v(e,n)},r={value:t.state};r.value||s(i.value,{back:null,current:i.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function s(c,l,h){const u=e.indexOf("#"),f=u>-1?(n.host&&document.querySelector("base")?e:e.slice(u))+c:kS()+e+c;try{t[h?"replaceState":"pushState"](l,"",f),r.value=l}catch(d){console.error(d),n[h?"replace":"assign"](f)}}function o(c,l){const h=Ge({},t.state,Hp(r.value.back,c,r.value.forward,!0),l,{position:r.value.position});s(c,h,!0),i.value=c}function a(c,l){const h=Ge({},r.value,t.state,{forward:c,scroll:Bl()});s(h.current,h,!0);const u=Ge({},Hp(i.value,c,null),{position:h.position+1},l);s(c,u,!1),i.value=c}return{location:i,state:r,push:a,replace:o}}function qS(e){e=FS(e);const t=jS(e),n=WS(e,t.state,t.location,t.replace);function i(s,o=!0){o||n.pauseListeners(),history.go(s)}const r=Ge({location:"",base:e,go:i,createHref:US.bind(null,e)},t,n);return Object.defineProperty(r,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(r,"state",{enumerable:!0,get:()=>t.state.value}),r}function XS(e){return e=location.host?e||location.pathname+location.search:"",e.includes("#")||(e+="#"),qS(e)}function YS(e){return typeof e=="string"||e&&typeof e=="object"}function bv(e){return typeof e=="string"||typeof e=="symbol"}const wv=Symbol("");var Gp;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(Gp||(Gp={}));function bs(e,t){return Ge(new Error,{type:e,[wv]:!0},t)}function Kn(e,t){return e instanceof Error&&wv in e&&(t==null||!!(e.type&t))}const Vp="[^/]+?",$S={sensitive:!1,strict:!1,start:!0,end:!0},ZS=/[.+*?^${}()[\]/\\]/g;function JS(e,t){const n=Ge({},$S,t),i=[];let r=n.start?"^":"";const s=[];for(const l of e){const h=l.length?[]:[90];n.strict&&!l.length&&(r+="/");for(let u=0;u<l.length;u++){const f=l[u];let d=40+(n.sensitive?.25:0);if(f.type===0)u||(r+="/"),r+=f.value.replace(ZS,"\\$&"),d+=40;else if(f.type===1){const{value:p,repeatable:y,optional:v,regexp:g}=f;s.push({name:p,repeatable:y,optional:v});const m=g||Vp;if(m!==Vp){d+=10;try{new RegExp(`(${m})`)}catch(_){throw new Error(`Invalid custom RegExp for param "${p}" (${m}): `+_.message)}}let x=y?`((?:${m})(?:/(?:${m}))*)`:`(${m})`;u||(x=v&&l.length<2?`(?:/${x})`:"/"+x),v&&(x+="?"),r+=x,d+=20,v&&(d+=-8),y&&(d+=-20),m===".*"&&(d+=-50)}h.push(d)}i.push(h)}if(n.strict&&n.end){const l=i.length-1;i[l][i[l].length-1]+=.7000000000000001}n.strict||(r+="/?"),n.end?r+="$":n.strict&&!r.endsWith("/")&&(r+="(?:/|$)");const o=new RegExp(r,n.sensitive?"":"i");function a(l){const h=l.match(o),u={};if(!h)return null;for(let f=1;f<h.length;f++){const d=h[f]||"",p=s[f-1];u[p.name]=d&&p.repeatable?d.split("/"):d}return u}function c(l){let h="",u=!1;for(const f of e){(!u||!h.endsWith("/"))&&(h+="/"),u=!1;for(const d of f)if(d.type===0)h+=d.value;else if(d.type===1){const{value:p,repeatable:y,optional:v}=d,g=p in l?l[p]:"";if(Tn(g)&&!y)throw new Error(`Provided param "${p}" is an array but it is not repeatable (* or + modifiers)`);const m=Tn(g)?g.join("/"):g;if(!m)if(v)f.length<2&&(h.endsWith("/")?h=h.slice(0,-1):u=!0);else throw new Error(`Missing required param "${p}"`);h+=m}}return h||"/"}return{re:o,score:i,keys:s,parse:a,stringify:c}}function KS(e,t){let n=0;for(;n<e.length&&n<t.length;){const i=t[n]-e[n];if(i)return i;n++}return e.length<t.length?e.length===1&&e[0]===80?-1:1:e.length>t.length?t.length===1&&t[0]===80?1:-1:0}function Mv(e,t){let n=0;const i=e.score,r=t.score;for(;n<i.length&&n<r.length;){const s=KS(i[n],r[n]);if(s)return s;n++}if(Math.abs(r.length-i.length)===1){if(kp(i))return 1;if(kp(r))return-1}return r.length-i.length}function kp(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const QS={type:0,value:""},eT=/[a-zA-Z0-9_]/;function tT(e){if(!e)return[[]];if(e==="/")return[[QS]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(d){throw new Error(`ERR (${n})/"${l}": ${d}`)}let n=0,i=n;const r=[];let s;function o(){s&&r.push(s),s=[]}let a=0,c,l="",h="";function u(){l&&(n===0?s.push({type:0,value:l}):n===1||n===2||n===3?(s.length>1&&(c==="*"||c==="+")&&t(`A repeatable param (${l}) must be alone in its segment. eg: '/:ids+.`),s.push({type:1,value:l,regexp:h,repeatable:c==="*"||c==="+",optional:c==="*"||c==="?"})):t("Invalid state to consume buffer"),l="")}function f(){l+=c}for(;a<e.length;){if(c=e[a++],c==="\\"&&n!==2){i=n,n=4;continue}switch(n){case 0:c==="/"?(l&&u(),o()):c===":"?(u(),n=1):f();break;case 4:f(),n=i;break;case 1:c==="("?n=2:eT.test(c)?f():(u(),n=0,c!=="*"&&c!=="?"&&c!=="+"&&a--);break;case 2:c===")"?h[h.length-1]=="\\"?h=h.slice(0,-1)+c:n=3:h+=c;break;case 3:u(),n=0,c!=="*"&&c!=="?"&&c!=="+"&&a--,h="";break;default:t("Unknown state");break}}return n===2&&t(`Unfinished custom RegExp for param "${l}"`),u(),o(),r}function nT(e,t,n){const i=JS(tT(e.path),n),r=Ge(i,{record:e,parent:t,children:[],alias:[]});return t&&!r.record.aliasOf==!t.record.aliasOf&&t.children.push(r),r}function iT(e,t){const n=[],i=new Map;t=Xp({strict:!1,end:!0,sensitive:!1},t);function r(u){return i.get(u)}function s(u,f,d){const p=!d,y=jp(u);y.aliasOf=d&&d.record;const v=Xp(t,u),g=[y];if("alias"in u){const _=typeof u.alias=="string"?[u.alias]:u.alias;for(const T of _)g.push(jp(Ge({},y,{components:d?d.record.components:y.components,path:T,aliasOf:d?d.record:y})))}let m,x;for(const _ of g){const{path:T}=_;if(f&&T[0]!=="/"){const b=f.record.path,L=b[b.length-1]==="/"?"":"/";_.path=f.record.path+(T&&L+T)}if(m=nT(_,f,v),d?d.alias.push(m):(x=x||m,x!==m&&x.alias.push(m),p&&u.name&&!qp(m)&&o(u.name)),Sv(m)&&c(m),y.children){const b=y.children;for(let L=0;L<b.length;L++)s(b[L],m,d&&d.children[L])}d=d||m}return x?()=>{o(x)}:wo}function o(u){if(bv(u)){const f=i.get(u);f&&(i.delete(u),n.splice(n.indexOf(f),1),f.children.forEach(o),f.alias.forEach(o))}else{const f=n.indexOf(u);f>-1&&(n.splice(f,1),u.record.name&&i.delete(u.record.name),u.children.forEach(o),u.alias.forEach(o))}}function a(){return n}function c(u){const f=oT(u,n);n.splice(f,0,u),u.record.name&&!qp(u)&&i.set(u.record.name,u)}function l(u,f){let d,p={},y,v;if("name"in u&&u.name){if(d=i.get(u.name),!d)throw bs(1,{location:u});v=d.record.name,p=Ge(Wp(f.params,d.keys.filter(x=>!x.optional).concat(d.parent?d.parent.keys.filter(x=>x.optional):[]).map(x=>x.name)),u.params&&Wp(u.params,d.keys.map(x=>x.name))),y=d.stringify(p)}else if(u.path!=null)y=u.path,d=n.find(x=>x.re.test(y)),d&&(p=d.parse(y),v=d.record.name);else{if(d=f.name?i.get(f.name):n.find(x=>x.re.test(f.path)),!d)throw bs(1,{location:u,currentLocation:f});v=d.record.name,p=Ge({},f.params,u.params),y=d.stringify(p)}const g=[];let m=d;for(;m;)g.unshift(m.record),m=m.parent;return{name:v,path:y,params:p,matched:g,meta:sT(g)}}e.forEach(u=>s(u));function h(){n.length=0,i.clear()}return{addRoute:s,resolve:l,removeRoute:o,clearRoutes:h,getRoutes:a,getRecordMatcher:r}}function Wp(e,t){const n={};for(const i of t)i in e&&(n[i]=e[i]);return n}function jp(e){const t={path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:e.aliasOf,beforeEnter:e.beforeEnter,props:rT(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}};return Object.defineProperty(t,"mods",{value:{}}),t}function rT(e){const t={},n=e.props||!1;if("component"in e)t.default=n;else for(const i in e.components)t[i]=typeof n=="object"?n[i]:n;return t}function qp(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function sT(e){return e.reduce((t,n)=>Ge(t,n.meta),{})}function Xp(e,t){const n={};for(const i in e)n[i]=i in t?t[i]:e[i];return n}function oT(e,t){let n=0,i=t.length;for(;n!==i;){const s=n+i>>1;Mv(e,t[s])<0?i=s:n=s+1}const r=aT(e);return r&&(i=t.lastIndexOf(r,i-1)),i}function aT(e){let t=e;for(;t=t.parent;)if(Sv(t)&&Mv(e,t)===0)return t}function Sv({record:e}){return!!(e.name||e.components&&Object.keys(e.components).length||e.redirect)}function cT(e){const t={};if(e===""||e==="?")return t;const i=(e[0]==="?"?e.slice(1):e).split("&");for(let r=0;r<i.length;++r){const s=i[r].replace(mv," "),o=s.indexOf("="),a=Uo(o<0?s:s.slice(0,o)),c=o<0?null:Uo(s.slice(o+1));if(a in t){let l=t[a];Tn(l)||(l=t[a]=[l]),l.push(c)}else t[a]=c}return t}function Yp(e){let t="";for(let n in e){const i=e[n];if(n=AS(n),i==null){i!==void 0&&(t+=(t.length?"&":"")+n);continue}(Tn(i)?i.map(s=>s&&Ch(s)):[i&&Ch(i)]).forEach(s=>{s!==void 0&&(t+=(t.length?"&":"")+n,s!=null&&(t+="="+s))})}return t}function lT(e){const t={};for(const n in e){const i=e[n];i!==void 0&&(t[n]=Tn(i)?i.map(r=>r==null?null:""+r):i==null?i:""+i)}return t}const uT=Symbol(""),$p=Symbol(""),Qf=Symbol(""),ed=Symbol(""),Ph=Symbol("");function Xs(){let e=[];function t(i){return e.push(i),()=>{const r=e.indexOf(i);r>-1&&e.splice(r,1)}}function n(){e=[]}return{add:t,list:()=>e.slice(),reset:n}}function Ii(e,t,n,i,r,s=o=>o()){const o=i&&(i.enterCallbacks[r]=i.enterCallbacks[r]||[]);return()=>new Promise((a,c)=>{const l=f=>{f===!1?c(bs(4,{from:n,to:t})):f instanceof Error?c(f):YS(f)?c(bs(2,{from:t,to:f})):(o&&i.enterCallbacks[r]===o&&typeof f=="function"&&o.push(f),a())},h=s(()=>e.call(i&&i.instances[r],t,n,l));let u=Promise.resolve(h);e.length<3&&(u=u.then(l)),u.catch(f=>c(f))})}function _u(e,t,n,i,r=s=>s()){const s=[];for(const o of e)for(const a in o.components){let c=o.components[a];if(!(t!=="beforeRouteEnter"&&!o.instances[a]))if(dv(c)){const h=(c.__vccOpts||c)[t];h&&s.push(Ii(h,n,i,o,a,r))}else{let l=c();s.push(()=>l.then(h=>{if(!h)throw new Error(`Couldn't resolve component "${a}" at "${o.path}"`);const u=gS(h)?h.default:h;o.mods[a]=h,o.components[a]=u;const d=(u.__vccOpts||u)[t];return d&&Ii(d,n,i,o,a,r)()}))}}return s}function Zp(e){const t=Sn(Qf),n=Sn(ed),i=ft(()=>{const c=Gt(e.to);return t.resolve(c)}),r=ft(()=>{const{matched:c}=i.value,{length:l}=c,h=c[l-1],u=n.matched;if(!h||!u.length)return-1;const f=u.findIndex(_s.bind(null,h));if(f>-1)return f;const d=Jp(c[l-2]);return l>1&&Jp(h)===d&&u[u.length-1].path!==d?u.findIndex(_s.bind(null,c[l-2])):f}),s=ft(()=>r.value>-1&&mT(n.params,i.value.params)),o=ft(()=>r.value>-1&&r.value===n.matched.length-1&&xv(n.params,i.value.params));function a(c={}){if(pT(c)){const l=t[Gt(e.replace)?"replace":"push"](Gt(e.to)).catch(wo);return e.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>l),l}return Promise.resolve()}return{route:i,href:ft(()=>i.value.href),isActive:s,isExactActive:o,navigate:a}}function hT(e){return e.length===1?e[0]:e}const fT=Al({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"},viewTransition:Boolean},useLink:Zp,setup(e,{slots:t}){const n=Zi(Zp(e)),{options:i}=Sn(Qf),r=ft(()=>({[Kp(e.activeClass,i.linkActiveClass,"router-link-active")]:n.isActive,[Kp(e.exactActiveClass,i.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const s=t.default&&hT(t.default(n));return e.custom?s:Ol("a",{"aria-current":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:r.value},s)}}}),dT=fT;function pT(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function mT(e,t){for(const n in t){const i=t[n],r=e[n];if(typeof i=="string"){if(i!==r)return!1}else if(!Tn(r)||r.length!==i.length||i.some((s,o)=>s!==r[o]))return!1}return!0}function Jp(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const Kp=(e,t,n)=>e??t??n,gT=Al({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:n}){const i=Sn(Ph),r=ft(()=>e.route||i.value),s=Sn($p,0),o=ft(()=>{let l=Gt(s);const{matched:h}=r.value;let u;for(;(u=h[l])&&!u.components;)l++;return l}),a=ft(()=>r.value.matched[o.value]);Rc($p,ft(()=>o.value+1)),Rc(uT,a),Rc(Ph,r);const c=Rt();return Ct(()=>[c.value,a.value,e.name],([l,h,u],[f,d,p])=>{h&&(h.instances[u]=l,d&&d!==h&&l&&l===f&&(h.leaveGuards.size||(h.leaveGuards=d.leaveGuards),h.updateGuards.size||(h.updateGuards=d.updateGuards))),l&&h&&(!d||!_s(h,d)||!f)&&(h.enterCallbacks[u]||[]).forEach(y=>y(l))},{flush:"post"}),()=>{const l=r.value,h=e.name,u=a.value,f=u&&u.components[h];if(!f)return Qp(n.default,{Component:f,route:l});const d=u.props[h],p=d?d===!0?l.params:typeof d=="function"?d(l):d:null,v=Ol(f,Ge({},p,t,{onVnodeUnmounted:g=>{g.component.isUnmounted&&(u.instances[h]=null)},ref:c}));return Qp(n.default,{Component:v,route:l})||v}}});function Qp(e,t){if(!e)return null;const n=e(t);return n.length===1?n[0]:n}const yT=gT;function vT(e){const t=iT(e.routes,e),n=e.parseQuery||cT,i=e.stringifyQuery||Yp,r=e.history,s=Xs(),o=Xs(),a=Xs(),c=If(bi);let l=bi;rs&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const h=vu.bind(null,G=>""+G),u=vu.bind(null,CS),f=vu.bind(null,Uo);function d(G,re){let K,oe;return bv(G)?(K=t.getRecordMatcher(G),oe=re):oe=G,t.addRoute(oe,K)}function p(G){const re=t.getRecordMatcher(G);re&&t.removeRoute(re)}function y(){return t.getRoutes().map(G=>G.record)}function v(G){return!!t.getRecordMatcher(G)}function g(G,re){if(re=Ge({},re||c.value),typeof G=="string"){const P=xu(n,G,re.path),H=t.resolve({path:P.path},re),B=r.createHref(P.fullPath);return Ge(P,H,{params:f(H.params),hash:Uo(P.hash),redirectedFrom:void 0,href:B})}let K;if(G.path!=null)K=Ge({},G,{path:xu(n,G.path,re.path).path});else{const P=Ge({},G.params);for(const H in P)P[H]==null&&delete P[H];K=Ge({},G,{params:u(P)}),re.params=u(re.params)}const oe=t.resolve(K,re),ye=G.hash||"";oe.params=h(f(oe.params));const S=IS(i,Ge({},G,{hash:ES(ye),path:oe.path})),E=r.createHref(S);return Ge({fullPath:S,hash:ye,query:i===Yp?lT(G.query):G.query||{}},oe,{redirectedFrom:void 0,href:E})}function m(G){return typeof G=="string"?xu(n,G,c.value.path):Ge({},G)}function x(G,re){if(l!==G)return bs(8,{from:re,to:G})}function _(G){return L(G)}function T(G){return _(Ge(m(G),{replace:!0}))}function b(G){const re=G.matched[G.matched.length-1];if(re&&re.redirect){const{redirect:K}=re;let oe=typeof K=="function"?K(G):K;return typeof oe=="string"&&(oe=oe.includes("?")||oe.includes("#")?oe=m(oe):{path:oe},oe.params={}),Ge({query:G.query,hash:G.hash,params:oe.path!=null?{}:G.params},oe)}}function L(G,re){const K=l=g(G),oe=c.value,ye=G.state,S=G.force,E=G.replace===!0,P=b(K);if(P)return L(Ge(m(P),{state:typeof P=="object"?Ge({},ye,P.state):ye,force:S,replace:E}),re||K);const H=K;H.redirectedFrom=re;let B;return!S&&OS(i,oe,K)&&(B=bs(16,{to:H,from:oe}),le(oe,oe,!0,!1)),(B?Promise.resolve(B):Y(H,oe)).catch(w=>Kn(w)?Kn(w,2)?w:ge(w):te(w,H,oe)).then(w=>{if(w){if(Kn(w,2))return L(Ge({replace:E},m(w.to),{state:typeof w.to=="object"?Ge({},ye,w.to.state):ye,force:S}),re||H)}else w=V(H,oe,!0,E,ye);return z(H,oe,w),w})}function D(G,re){const K=x(G,re);return K?Promise.reject(K):Promise.resolve()}function I(G){const re=He.values().next().value;return re&&typeof re.runWithContext=="function"?re.runWithContext(G):G()}function Y(G,re){let K;const[oe,ye,S]=xT(G,re);K=_u(oe.reverse(),"beforeRouteLeave",G,re);for(const P of oe)P.leaveGuards.forEach(H=>{K.push(Ii(H,G,re))});const E=D.bind(null,G,re);return K.push(E),ke(K).then(()=>{K=[];for(const P of s.list())K.push(Ii(P,G,re));return K.push(E),ke(K)}).then(()=>{K=_u(ye,"beforeRouteUpdate",G,re);for(const P of ye)P.updateGuards.forEach(H=>{K.push(Ii(H,G,re))});return K.push(E),ke(K)}).then(()=>{K=[];for(const P of S)if(P.beforeEnter)if(Tn(P.beforeEnter))for(const H of P.beforeEnter)K.push(Ii(H,G,re));else K.push(Ii(P.beforeEnter,G,re));return K.push(E),ke(K)}).then(()=>(G.matched.forEach(P=>P.enterCallbacks={}),K=_u(S,"beforeRouteEnter",G,re,I),K.push(E),ke(K))).then(()=>{K=[];for(const P of o.list())K.push(Ii(P,G,re));return K.push(E),ke(K)}).catch(P=>Kn(P,8)?P:Promise.reject(P))}function z(G,re,K){a.list().forEach(oe=>I(()=>oe(G,re,K)))}function V(G,re,K,oe,ye){const S=x(G,re);if(S)return S;const E=re===bi,P=rs?history.state:{};K&&(oe||E?r.replace(G.fullPath,Ge({scroll:E&&P&&P.scroll},ye)):r.push(G.fullPath,ye)),c.value=G,le(G,re,K,E),ge()}let k;function O(){k||(k=r.listen((G,re,K)=>{if(!ne.listening)return;const oe=g(G),ye=b(oe);if(ye){L(Ge(ye,{replace:!0,force:!0}),oe).catch(wo);return}l=oe;const S=c.value;rs&&GS(zp(S.fullPath,K.delta),Bl()),Y(oe,S).catch(E=>Kn(E,12)?E:Kn(E,2)?(L(Ge(m(E.to),{force:!0}),oe).then(P=>{Kn(P,20)&&!K.delta&&K.type===zo.pop&&r.go(-1,!1)}).catch(wo),Promise.reject()):(K.delta&&r.go(-K.delta,!1),te(E,oe,S))).then(E=>{E=E||V(oe,S,!1),E&&(K.delta&&!Kn(E,8)?r.go(-K.delta,!1):K.type===zo.pop&&Kn(E,20)&&r.go(-1,!1)),z(oe,S,E)}).catch(wo)}))}let N=Xs(),W=Xs(),J;function te(G,re,K){ge(G);const oe=W.list();return oe.length?oe.forEach(ye=>ye(G,re,K)):console.error(G),Promise.reject(G)}function ae(){return J&&c.value!==bi?Promise.resolve():new Promise((G,re)=>{N.add([G,re])})}function ge(G){return J||(J=!G,O(),N.list().forEach(([re,K])=>G?K(G):re()),N.reset()),G}function le(G,re,K,oe){const{scrollBehavior:ye}=e;if(!rs||!ye)return Promise.resolve();const S=!K&&VS(zp(G.fullPath,0))||(oe||!K)&&history.state&&history.state.scroll||null;return Hg().then(()=>ye(G,re,S)).then(E=>E&&HS(E)).catch(E=>te(E,G,re))}const _e=G=>r.go(G);let Te;const He=new Set,ne={currentRoute:c,listening:!0,addRoute:d,removeRoute:p,clearRoutes:t.clearRoutes,hasRoute:v,getRoutes:y,resolve:g,options:e,push:_,replace:T,go:_e,back:()=>_e(-1),forward:()=>_e(1),beforeEach:s.add,beforeResolve:o.add,afterEach:a.add,onError:W.add,isReady:ae,install(G){const re=this;G.component("RouterLink",dT),G.component("RouterView",yT),G.config.globalProperties.$router=re,Object.defineProperty(G.config.globalProperties,"$route",{enumerable:!0,get:()=>Gt(c)}),rs&&!Te&&c.value===bi&&(Te=!0,_(r.location).catch(ye=>{}));const K={};for(const ye in bi)Object.defineProperty(K,ye,{get:()=>c.value[ye],enumerable:!0});G.provide(Qf,re),G.provide(ed,Dg(K)),G.provide(Ph,c);const oe=G.unmount;He.add(G),G.unmount=function(){He.delete(G),He.size<1&&(l=bi,k&&k(),k=null,c.value=bi,Te=!1,J=!1),oe()}}};function ke(G){return G.reduce((re,K)=>re.then(()=>I(K)),Promise.resolve())}return ne}function xT(e,t){const n=[],i=[],r=[],s=Math.max(t.matched.length,e.matched.length);for(let o=0;o<s;o++){const a=t.matched[o];a&&(e.matched.find(l=>_s(l,a))?i.push(a):n.push(a));const c=e.matched[o];c&&(t.matched.find(l=>_s(l,c))||r.push(c))}return[n,i,r]}function _T(e){return Sn(ed)}const bT={__name:"father",setup(e){const t=_T();let n=Rt("");t.query.msg&&(n.value=t.query.msg);const i=Rt(""),r={},s=()=>{i.value=r.value?.inputVal,r.value?.exposeFun("父组件")};return(o,a)=>(ui(),hi("div",null,[a[1]||(a[1]=it("h2",null,"这是父组件",-1)),it("div",null,[it("button",{onClick:s},"使用子组暴露的属性"),a[0]||(a[0]=it("h4",null,"子组件触发父组件接收的值",-1)),it("p",null,xr(i.value),1)]),a[2]||(a[2]=it("h4",null,"下方是子组件的内容",-1)),zt(mS,{ref:"sonRef"},null,512),a[3]||(a[3]=it("hr",null,null,-1)),it("h3",null,"路由传入的参数"+xr(Gt(t).query.msg),1)]))}},wT={id:"test"},MT={__name:"home",setup(e){const t=Rt(0),{motion:n}=Jf(t,{initial:{opacity:0},enter:{opacity:1,transition:{duration:1e3}}});return(i,r)=>{const s=Jd("motion-slide-left"),o=Jd("motion-fade");return ui(),hi(xn,null,[hh((ui(),hi("div",wT,r[1]||(r[1]=[oo("我会从左边滑进来！",-1)]))),[[s]]),it("div",null,xr(t.value),1),it("button",{onClick:r[0]||(r[0]=a=>t.value++)},xr(t.value),1),hh((ui(),hi("div",null,r[2]||(r[2]=[oo("我会慢慢出现！",-1)]))),[[o]]),r[3]||(r[3]=oo(" input name:",-1)),r[4]||(r[4]=it("input",null,null,-1)),r[5]||(r[5]=oo(" input author:",-1)),r[6]||(r[6]=it("input",null,null,-1)),zt(bT)],64)}}},ST={id:"app"},TT={__name:"App",setup(e){return(t,n)=>{const i=ab("router-view");return ui(),hi("div",ST,[zt(i)])}}},ET=_y(TT,[["__scopeId","data-v-e0d9ee57"]]),Tv="121",AT={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},RT={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Ev=0,Ih=1,Av=2,CT=3,LT=0,td=1,Rv=2,ss=3,Ns=0,dt=1,ya=2,nd=1,PT=2,fi=0,ms=1,Oh=2,Dh=3,Nh=4,Cv=5,fr=100,Lv=101,Pv=102,Fh=103,Bh=104,Iv=200,Ov=201,Dv=202,Nv=203,id=204,rd=205,Fv=206,Bv=207,Uv=208,zv=209,Hv=210,Gv=0,Vv=1,kv=2,qc=3,Wv=4,jv=5,qv=6,Xv=7,va=0,Yv=1,$v=2,yr=0,Zv=1,Jv=2,Kv=3,Qv=4,e0=5,Ul=300,xa=301,_a=302,Xc=303,Yc=304,Fs=306,ba=307,Ho=1e3,Ut=1001,Go=1002,pt=1003,$c=1004,IT=1004,Zc=1005,OT=1005,vt=1006,sd=1007,DT=1007,Bs=1008,NT=1008,Us=1009,t0=1010,n0=1011,Vo=1012,i0=1013,So=1014,ai=1015,ko=1016,r0=1017,s0=1018,o0=1019,gs=1020,a0=1021,Fi=1022,en=1023,c0=1024,l0=1025,u0=en,vr=1026,ws=1027,h0=1028,f0=1029,d0=1030,p0=1031,m0=1032,g0=1033,Uh=33776,zh=33777,Hh=33778,Gh=33779,Vh=35840,kh=35841,Wh=35842,jh=35843,y0=36196,qh=37492,Xh=37496,v0=37808,x0=37809,_0=37810,b0=37811,w0=37812,M0=37813,S0=37814,T0=37815,E0=37816,A0=37817,R0=37818,C0=37819,L0=37820,P0=37821,I0=36492,O0=37840,D0=37841,N0=37842,F0=37843,B0=37844,U0=37845,z0=37846,H0=37847,G0=37848,V0=37849,k0=37850,W0=37851,j0=37852,q0=37853,X0=2200,Y0=2201,$0=2202,Wo=2300,To=2301,Dc=2302,pr=2400,mr=2401,jo=2402,zl=2500,od=2501,Z0=0,FT=1,BT=2,Vt=3e3,wa=3001,Hl=3007,Gl=3002,J0=3003,ad=3004,cd=3005,ld=3006,K0=3200,Q0=3201,Or=0,ex=1,UT=0,Nc=7680,zT=7681,HT=7682,GT=7683,VT=34055,kT=34056,WT=5386,jT=512,qT=513,XT=514,YT=515,$T=516,ZT=517,JT=518,tx=519,Ma=35044,br=35048,KT=35040,QT=35045,eE=35049,tE=35041,nE=35046,iE=35050,rE=35042,sE="100",Yh="300 es";function Xn(){}Object.assign(Xn.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}},dispatchEvent:function(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,e)}}});const xt=[];for(let e=0;e<256;e++)xt[e]=(e<16?"0":"")+e.toString(16);let Fa=1234567;const Ee={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(xt[e&255]+xt[e>>8&255]+xt[e>>16&255]+xt[e>>24&255]+"-"+xt[t&255]+xt[t>>8&255]+"-"+xt[t>>16&15|64]+xt[t>>24&255]+"-"+xt[n&63|128]+xt[n>>8&255]+"-"+xt[n>>16&255]+xt[n>>24&255]+xt[i&255]+xt[i>>8&255]+xt[i>>16&255]+xt[i>>24&255]).toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return e!==void 0&&(Fa=e%2147483647),Fa=Fa*16807%2147483647,(Fa-1)/2147483646},degToRad:function(e){return e*Ee.DEG2RAD},radToDeg:function(e){return e*Ee.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),c=o(n/2),l=s((t+i)/2),h=o((t+i)/2),u=s((t-i)/2),f=o((t-i)/2),d=s((i-t)/2),p=o((i-t)/2);switch(r){case"XYX":e.set(a*h,c*u,c*f,a*l);break;case"YZY":e.set(c*f,a*h,c*u,a*l);break;case"ZXZ":e.set(c*u,c*f,a*h,a*l);break;case"XZX":e.set(a*h,c*p,c*d,a*l);break;case"YXY":e.set(c*d,a*h,c*p,a*l);break;case"ZYZ":e.set(c*p,c*d,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class ie{constructor(t=0,n=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=n}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,n){return this.x=t,this.y=n,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this}sub(t,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const n=this.x,i=this.y,r=t.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y;return n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,n){return n===void 0&&(n=0),this.x=t[n],this.y=t[n+1],this}toArray(t,n){return t===void 0&&(t=[]),n===void 0&&(n=0),t[n]=this.x,t[n+1]=this.y,t}fromBufferAttribute(t,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this}rotateAround(t,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-t.x,o=this.y-t.y;return this.x=s*i-o*r+t.x,this.y=s*r+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Ht{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,n,i,r,s,o,a,c,l){const h=this.elements;return h[0]=t,h[1]=r,h[2]=a,h[3]=n,h[4]=s,h[5]=c,h[6]=i,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(t,n,i){return t.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const n=t.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,s=this.elements,o=i[0],a=i[3],c=i[6],l=i[1],h=i[4],u=i[7],f=i[2],d=i[5],p=i[8],y=r[0],v=r[3],g=r[6],m=r[1],x=r[4],_=r[7],T=r[2],b=r[5],L=r[8];return s[0]=o*y+a*m+c*T,s[3]=o*v+a*x+c*b,s[6]=o*g+a*_+c*L,s[1]=l*y+h*m+u*T,s[4]=l*v+h*x+u*b,s[7]=l*g+h*_+u*L,s[2]=f*y+d*m+p*T,s[5]=f*v+d*x+p*b,s[8]=f*g+d*_+p*L,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=t,n[4]*=t,n[7]*=t,n[2]*=t,n[5]*=t,n[8]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[1],r=t[2],s=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8];return n*o*h-n*a*l-i*s*h+i*a*c+r*s*l-r*o*c}getInverse(t,n){n!==void 0&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const i=t.elements,r=this.elements,s=i[0],o=i[1],a=i[2],c=i[3],l=i[4],h=i[5],u=i[6],f=i[7],d=i[8],p=d*l-h*f,y=h*u-d*c,v=f*c-l*u,g=s*p+o*y+a*v;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/g;return r[0]=p*m,r[1]=(a*f-d*o)*m,r[2]=(h*o-a*l)*m,r[3]=y*m,r[4]=(d*s-a*u)*m,r[5]=(a*c-h*s)*m,r[6]=v*m,r[7]=(o*u-f*s)*m,r[8]=(l*s-o*c)*m,this}transpose(){let t;const n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).getInverse(this).transpose()}transposeIntoArray(t){const n=this.elements;return t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8],this}setUvTransform(t,n,i,r,s,o,a){const c=Math.cos(s),l=Math.sin(s);this.set(i*c,i*l,-i*(c*o+l*a)+o+t,-r*l,r*c,-r*(-l*o+c*a)+a+n,0,0,1)}scale(t,n){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(t){const n=Math.cos(t),i=Math.sin(t),r=this.elements,s=r[0],o=r[3],a=r[6],c=r[1],l=r[4],h=r[7];return r[0]=n*s+i*c,r[3]=n*o+i*l,r[6]=n*a+i*h,r[1]=-i*s+n*c,r[4]=-i*o+n*l,r[7]=-i*a+n*h,this}translate(t,n){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n){n===void 0&&(n=0);for(let i=0;i<9;i++)this.elements[i]=t[i+n];return this}toArray(t,n){t===void 0&&(t=[]),n===void 0&&(n=0);const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t}}let Ur;const Hi={getDataURL:function(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ur===void 0&&(Ur=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Ur.width=e.width,Ur.height=e.height;const n=Ur.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ur}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let oE=0;function Xe(e,t,n,i,r,s,o,a,c,l){Object.defineProperty(this,"id",{value:oE++}),this.uuid=Ee.generateUUID(),this.name="",this.image=e!==void 0?e:Xe.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:Xe.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:Ut,this.wrapT=i!==void 0?i:Ut,this.magFilter=r!==void 0?r:vt,this.minFilter=s!==void 0?s:Bs,this.anisotropy=c!==void 0?c:1,this.format=o!==void 0?o:en,this.internalFormat=null,this.type=a!==void 0?a:Us,this.offset=new ie(0,0),this.repeat=new ie(1,1),this.center=new ie(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ht,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l!==void 0?l:Vt,this.version=0,this.onUpdate=null}Xe.DEFAULT_IMAGE=void 0;Xe.DEFAULT_MAPPING=Ul;Xe.prototype=Object.assign(Object.create(Xn.prototype),{constructor:Xe,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Ee.generateUUID()),!t&&e.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)r.push(Hi.getDataURL(i[s]))}else r=Hi.getDataURL(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==Ul)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ho:e.x=e.x-Math.floor(e.x);break;case Ut:e.x=e.x<0?0:1;break;case Go:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ho:e.y=e.y-Math.floor(e.y);break;case Ut:e.y=e.y<0?0:1;break;case Go:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}});Object.defineProperty(Xe.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});class je{constructor(t=0,n=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,n,i,r){return this.x=t,this.y=n,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this.w=t.w+n.w,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this.w+=t.w*n,this}sub(t,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this.w=t.w-n.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,s=this.w,o=t.elements;return this.x=o[0]*n+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*n+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*n+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*n+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const n=Math.sqrt(1-t.w*t.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/n,this.y=t.y/n,this.z=t.z/n),this}setAxisAngleFromRotationMatrix(t){let n,i,r,s;const c=t.elements,l=c[0],h=c[4],u=c[8],f=c[1],d=c[5],p=c[9],y=c[2],v=c[6],g=c[10];if(Math.abs(h-f)<.01&&Math.abs(u-y)<.01&&Math.abs(p-v)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+y)<.1&&Math.abs(p+v)<.1&&Math.abs(l+d+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const x=(l+1)/2,_=(d+1)/2,T=(g+1)/2,b=(h+f)/4,L=(u+y)/4,D=(p+v)/4;return x>_&&x>T?x<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(x),r=b/i,s=L/i):_>T?_<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(_),i=b/r,s=D/r):T<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(T),i=L/s,r=D/s),this.set(i,r,s,n),this}let m=Math.sqrt((v-p)*(v-p)+(u-y)*(u-y)+(f-h)*(f-h));return Math.abs(m)<.001&&(m=1),this.x=(v-p)/m,this.y=(u-y)/m,this.z=(f-h)/m,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this.w=Math.max(t.w,Math.min(n.w,this.w)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this.w=Math.max(t,Math.min(n,this.w)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this.w+=(t.w-this.w)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this.w=t.w+(n.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,n){return n===void 0&&(n=0),this.x=t[n],this.y=t[n+1],this.z=t[n+2],this.w=t[n+3],this}toArray(t,n){return t===void 0&&(t=[]),n===void 0&&(n=0),t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t[n+3]=this.w,t}fromBufferAttribute(t,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this.w=t.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function tn(e,t,n){this.width=e,this.height=t,this.scissor=new je(0,0,e,t),this.scissorTest=!1,this.viewport=new je(0,0,e,t),n=n||{},this.texture=new Xe(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:vt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}tn.prototype=Object.assign(Object.create(Xn.prototype),{constructor:tn,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function $h(e,t,n){tn.call(this,e,t,n),this.samples=4}$h.prototype=Object.assign(Object.create(tn.prototype),{constructor:$h,isWebGLMultisampleRenderTarget:!0,copy:function(e){return tn.prototype.copy.call(this,e),this.samples=e.samples,this}});class Lt{constructor(t=0,n=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=n,this._z=i,this._w=r}static slerp(t,n,i,r){return i.copy(t).slerp(n,r)}static slerpFlat(t,n,i,r,s,o,a){let c=i[r+0],l=i[r+1],h=i[r+2],u=i[r+3];const f=s[o+0],d=s[o+1],p=s[o+2],y=s[o+3];if(u!==y||c!==f||l!==d||h!==p){let v=1-a;const g=c*f+l*d+h*p+u*y,m=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){const T=Math.sqrt(x),b=Math.atan2(T,g*m);v=Math.sin(v*b)/T,a=Math.sin(a*b)/T}const _=a*m;if(c=c*v+f*_,l=l*v+d*_,h=h*v+p*_,u=u*v+y*_,v===1-a){const T=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=T,l*=T,h*=T,u*=T}}t[n]=c,t[n+1]=l,t[n+2]=h,t[n+3]=u}static multiplyQuaternionsFlat(t,n,i,r,s,o){const a=i[r],c=i[r+1],l=i[r+2],h=i[r+3],u=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return t[n]=a*p+h*u+c*d-l*f,t[n+1]=c*p+h*f+l*u-a*d,t[n+2]=l*p+h*d+a*f-c*u,t[n+3]=h*p-a*u-c*f-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,n,i,r){return this._x=t,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,n){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,r=t._y,s=t._z,o=t._order,a=Math.cos,c=Math.sin,l=a(i/2),h=a(r/2),u=a(s/2),f=c(i/2),d=c(r/2),p=c(s/2);switch(o){case"XYZ":this._x=f*h*u+l*d*p,this._y=l*d*u-f*h*p,this._z=l*h*p+f*d*u,this._w=l*h*u-f*d*p;break;case"YXZ":this._x=f*h*u+l*d*p,this._y=l*d*u-f*h*p,this._z=l*h*p-f*d*u,this._w=l*h*u+f*d*p;break;case"ZXY":this._x=f*h*u-l*d*p,this._y=l*d*u+f*h*p,this._z=l*h*p+f*d*u,this._w=l*h*u-f*d*p;break;case"ZYX":this._x=f*h*u-l*d*p,this._y=l*d*u+f*h*p,this._z=l*h*p-f*d*u,this._w=l*h*u+f*d*p;break;case"YZX":this._x=f*h*u+l*d*p,this._y=l*d*u+f*h*p,this._z=l*h*p-f*d*u,this._w=l*h*u-f*d*p;break;case"XZY":this._x=f*h*u-l*d*p,this._y=l*d*u-f*h*p,this._z=l*h*p+f*d*u,this._w=l*h*u+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,n){const i=n/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const n=t.elements,i=n[0],r=n[4],s=n[8],o=n[1],a=n[5],c=n[9],l=n[2],h=n[6],u=n[10],f=i+a+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-c)*d,this._y=(s-l)*d,this._z=(o-r)*d}else if(i>a&&i>u){const d=2*Math.sqrt(1+i-a-u);this._w=(h-c)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+l)/d}else if(a>u){const d=2*Math.sqrt(1+a-i-u);this._w=(s-l)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(c+h)/d}else{const d=2*Math.sqrt(1+u-i-a);this._w=(o-r)/d,this._x=(s+l)/d,this._y=(c+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,n){let r=t.dot(n)+1;return r<1e-6?(r=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=r):(this._x=0,this._y=-t.z,this._z=t.y,this._w=r)):(this._x=t.y*n.z-t.z*n.y,this._y=t.z*n.x-t.x*n.z,this._z=t.x*n.y-t.y*n.x,this._w=r),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ee.clamp(this.dot(t),-1,1)))}rotateTowards(t,n){const i=this.angleTo(t);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,n)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,n){const i=t._x,r=t._y,s=t._z,o=t._w,a=n._x,c=n._y,l=n._z,h=n._w;return this._x=i*h+o*a+r*l-s*c,this._y=r*h+o*c+s*a-i*l,this._z=s*h+o*l+i*c-r*a,this._w=o*h-i*a-r*c-s*l,this._onChangeCallback(),this}slerp(t,n){if(n===0)return this;if(n===1)return this.copy(t);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*t._w+i*t._x+r*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const c=1-a*a;if(c<=Number.EPSILON){const d=1-n;return this._w=d*o+n*this._w,this._x=d*i+n*this._x,this._y=d*r+n*this._y,this._z=d*s+n*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),h=Math.atan2(l,a),u=Math.sin((1-n)*h)/l,f=Math.sin(n*h)/l;return this._w=o*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=s*u+this._z*f,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,n){return n===void 0&&(n=0),this._x=t[n],this._y=t[n+1],this._z=t[n+2],this._w=t[n+3],this._onChangeCallback(),this}toArray(t,n){return t===void 0&&(t=[]),n===void 0&&(n=0),t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._w,t}fromBufferAttribute(t,n){return this._x=t.getX(n),this._y=t.getY(n),this._z=t.getZ(n),this._w=t.getW(n),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class A{constructor(t=0,n=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=n,this.z=i}set(t,n,i){return i===void 0&&(i=this.z),this.x=t,this.y=n,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,n)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this}sub(t,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,n)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this}multiply(t,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,n)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,n){return this.x=t.x*n.x,this.y=t.y*n.y,this.z=t.z*n.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(em.setFromEuler(t))}applyAxisAngle(t,n){return this.applyQuaternion(em.setFromAxisAngle(t,n))}applyMatrix3(t){const n=this.x,i=this.y,r=this.z,s=t.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,s=t.elements,o=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(t){const n=this.x,i=this.y,r=this.z,s=t.x,o=t.y,a=t.z,c=t.w,l=c*n+o*r-a*i,h=c*i+a*n-s*r,u=c*r+s*i-o*n,f=-s*n-o*i-a*r;return this.x=l*c+f*-s+h*-a-u*-o,this.y=h*c+f*-o+u*-s-l*-a,this.z=u*c+f*-a+l*-o-h*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const n=this.x,i=this.y,r=this.z,s=t.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this}cross(t,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,n)):this.crossVectors(this,t)}crossVectors(t,n){const i=t.x,r=t.y,s=t.z,o=n.x,a=n.y,c=n.z;return this.x=r*c-s*a,this.y=s*o-i*c,this.z=i*a-r*o,this}projectOnVector(t){const n=t.lengthSq();if(n===0)return this.set(0,0,0);const i=t.dot(this)/n;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return bu.copy(this).projectOnVector(t),this.sub(bu)}reflect(t){return this.sub(bu.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const n=Math.sqrt(this.lengthSq()*t.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(t)/n;return Math.acos(Ee.clamp(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return n*n+i*i+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,n,i){const r=Math.sin(n)*t;return this.x=r*Math.sin(i),this.y=Math.cos(n)*t,this.z=r*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,n,i){return this.x=t*Math.sin(n),this.y=i,this.z=t*Math.cos(n),this}setFromMatrixPosition(t){const n=t.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(t){const n=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(t,n){return this.fromArray(t.elements,n*4)}setFromMatrix3Column(t,n){return this.fromArray(t.elements,n*3)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,n){return n===void 0&&(n=0),this.x=t[n],this.y=t[n+1],this.z=t[n+2],this}toArray(t,n){return t===void 0&&(t=[]),n===void 0&&(n=0),t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t}fromBufferAttribute(t,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const bu=new A,em=new Lt;class Yn{constructor(t,n){Object.defineProperty(this,"isBox3",{value:!0}),this.min=t!==void 0?t:new A(1/0,1/0,1/0),this.max=n!==void 0?n:new A(-1/0,-1/0,-1/0)}set(t,n){return this.min.copy(t),this.max.copy(n),this}setFromArray(t){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,l=t.length;c<l;c+=3){const h=t[c],u=t[c+1],f=t[c+2];h<n&&(n=h),u<i&&(i=u),f<r&&(r=f),h>s&&(s=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(t){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,l=t.count;c<l;c++){const h=t.getX(c),u=t.getY(c),f=t.getZ(c);h<n&&(n=h),u<i&&(i=u),f<r&&(r=f),h>s&&(s=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromPoints(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n++)this.expandByPoint(t[n]);return this}setFromCenterAndSize(t,n){const i=Ys.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return t===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new A),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return t===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new A),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const n=t.geometry;n!==void 0&&(n.boundingBox===null&&n.computeBoundingBox(),Mu.copy(n.boundingBox),Mu.applyMatrix4(t.matrixWorld),this.union(Mu));const i=t.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,n){return n===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),n=new A),n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ys),Ys.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let n,i;return t.normal.x>0?(n=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(n=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(n+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(n+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(n+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(n+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),n<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter($s),Ba.subVectors(this.max,$s),zr.subVectors(t.a,$s),Hr.subVectors(t.b,$s),Gr.subVectors(t.c,$s),wi.subVectors(Hr,zr),Mi.subVectors(Gr,Hr),nr.subVectors(zr,Gr);let n=[0,-wi.z,wi.y,0,-Mi.z,Mi.y,0,-nr.z,nr.y,wi.z,0,-wi.x,Mi.z,0,-Mi.x,nr.z,0,-nr.x,-wi.y,wi.x,0,-Mi.y,Mi.x,0,-nr.y,nr.x,0];return!wu(n,zr,Hr,Gr,Ba)||(n=[1,0,0,0,1,0,0,0,1],!wu(n,zr,Hr,Gr,Ba))?!1:(Ua.crossVectors(wi,Mi),n=[Ua.x,Ua.y,Ua.z],wu(n,zr,Hr,Gr,Ba))}clampPoint(t,n){return n===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),n=new A),n.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ys.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return t===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=this.getSize(Ys).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Qn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Qn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Qn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Qn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Qn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Qn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Qn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Qn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Qn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function wu(e,t,n,i,r){for(let s=0,o=e.length-3;s<=o;s+=3){ir.fromArray(e,s);const a=r.x*Math.abs(ir.x)+r.y*Math.abs(ir.y)+r.z*Math.abs(ir.z),c=t.dot(ir),l=n.dot(ir),h=i.dot(ir);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const Qn=[new A,new A,new A,new A,new A,new A,new A,new A],Ys=new A,Mu=new Yn,zr=new A,Hr=new A,Gr=new A,wi=new A,Mi=new A,nr=new A,$s=new A,Ba=new A,Ua=new A,ir=new A,aE=new Yn;class xi{constructor(t,n){this.center=t!==void 0?t:new A,this.radius=n!==void 0?n:-1}set(t,n){return this.center.copy(t),this.radius=n,this}setFromPoints(t,n){const i=this.center;n!==void 0?i.copy(n):aE.setFromPoints(t).getCenter(i);let r=0;for(let s=0,o=t.length;s<o;s++)r=Math.max(r,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const n=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=n*n}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,n){const i=this.center.distanceToSquared(t);return n===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),n=new A),n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(t){return t===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new Yn),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const ei=new A,Su=new A,za=new A,Si=new A,Tu=new A,Ha=new A,Eu=new A;class zs{constructor(t,n){this.origin=t!==void 0?t:new A,this.direction=n!==void 0?n:new A(0,0,-1)}set(t,n){return this.origin.copy(t),this.direction.copy(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,n){return n===void 0&&(console.warn("THREE.Ray: .at() target is now required"),n=new A),n.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ei)),this}closestPointToPoint(t,n){n===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),n=new A),n.subVectors(t,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const n=ei.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(ei.copy(this.direction).multiplyScalar(n).add(this.origin),ei.distanceToSquared(t))}distanceSqToSegment(t,n,i,r){Su.copy(t).add(n).multiplyScalar(.5),za.copy(n).sub(t).normalize(),Si.copy(this.origin).sub(Su);const s=t.distanceTo(n)*.5,o=-this.direction.dot(za),a=Si.dot(this.direction),c=-Si.dot(za),l=Si.lengthSq(),h=Math.abs(1-o*o);let u,f,d,p;if(h>0)if(u=o*c-a,f=o*a-c,p=s*h,u>=0)if(f>=-p)if(f<=p){const y=1/h;u*=y,f*=y,d=u*(u+o*f+2*a)+f*(o*u+f+2*c)+l}else f=s,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*c)+l;else f=-s,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*c)+l;else f<=-p?(u=Math.max(0,-(-o*s+a)),f=u>0?-s:Math.min(Math.max(-s,-c),s),d=-u*u+f*(f+2*c)+l):f<=p?(u=0,f=Math.min(Math.max(-s,-c),s),d=f*(f+2*c)+l):(u=Math.max(0,-(o*s+a)),f=u>0?s:Math.min(Math.max(-s,-c),s),d=-u*u+f*(f+2*c)+l);else f=o>0?-s:s,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*c)+l;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(za).multiplyScalar(f).add(Su),d}intersectSphere(t,n){ei.subVectors(t.center,this.origin);const i=ei.dot(this.direction),r=ei.dot(ei)-i*i,s=t.radius*t.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,c=i+o;return a<0&&c<0?null:a<0?this.at(c,n):this.at(a,n)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const n=t.normal.dot(this.direction);if(n===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/n;return i>=0?i:null}intersectPlane(t,n){const i=this.distanceToPlane(t);return i===null?null:this.at(i,n)}intersectsPlane(t){const n=t.distanceToPoint(this.origin);return n===0||t.normal.dot(this.direction)*n<0}intersectBox(t,n){let i,r,s,o,a,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return l>=0?(i=(t.min.x-f.x)*l,r=(t.max.x-f.x)*l):(i=(t.max.x-f.x)*l,r=(t.min.x-f.x)*l),h>=0?(s=(t.min.y-f.y)*h,o=(t.max.y-f.y)*h):(s=(t.max.y-f.y)*h,o=(t.min.y-f.y)*h),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),u>=0?(a=(t.min.z-f.z)*u,c=(t.max.z-f.z)*u):(a=(t.max.z-f.z)*u,c=(t.min.z-f.z)*u),i>c||a>r)||((a>i||i!==i)&&(i=a),(c<r||r!==r)&&(r=c),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(t){return this.intersectBox(t,ei)!==null}intersectTriangle(t,n,i,r,s){Tu.subVectors(n,t),Ha.subVectors(i,t),Eu.crossVectors(Tu,Ha);let o=this.direction.dot(Eu),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Si.subVectors(this.origin,t);const c=a*this.direction.dot(Ha.crossVectors(Si,Ha));if(c<0)return null;const l=a*this.direction.dot(Tu.cross(Si));if(l<0||c+l>o)return null;const h=-a*Si.dot(Eu);return h<0?null:this.at(h/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}class Ie{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,n,i,r,s,o,a,c,l,h,u,f,d,p,y,v){const g=this.elements;return g[0]=t,g[4]=n,g[8]=i,g[12]=r,g[1]=s,g[5]=o,g[9]=a,g[13]=c,g[2]=l,g[6]=h,g[10]=u,g[14]=f,g[3]=d,g[7]=p,g[11]=y,g[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ie().fromArray(this.elements)}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(t){const n=this.elements,i=t.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}extractBasis(t,n,i){return t.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,n,i){return this.set(t.x,n.x,i.x,0,t.y,n.y,i.y,0,t.z,n.z,i.z,0,0,0,0,1),this}extractRotation(t){const n=this.elements,i=t.elements,r=1/Vr.setFromMatrixColumn(t,0).length(),s=1/Vr.setFromMatrixColumn(t,1).length(),o=1/Vr.setFromMatrixColumn(t,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=t.x,r=t.y,s=t.z,o=Math.cos(i),a=Math.sin(i),c=Math.cos(r),l=Math.sin(r),h=Math.cos(s),u=Math.sin(s);if(t.order==="XYZ"){const f=o*h,d=o*u,p=a*h,y=a*u;n[0]=c*h,n[4]=-c*u,n[8]=l,n[1]=d+p*l,n[5]=f-y*l,n[9]=-a*c,n[2]=y-f*l,n[6]=p+d*l,n[10]=o*c}else if(t.order==="YXZ"){const f=c*h,d=c*u,p=l*h,y=l*u;n[0]=f+y*a,n[4]=p*a-d,n[8]=o*l,n[1]=o*u,n[5]=o*h,n[9]=-a,n[2]=d*a-p,n[6]=y+f*a,n[10]=o*c}else if(t.order==="ZXY"){const f=c*h,d=c*u,p=l*h,y=l*u;n[0]=f-y*a,n[4]=-o*u,n[8]=p+d*a,n[1]=d+p*a,n[5]=o*h,n[9]=y-f*a,n[2]=-o*l,n[6]=a,n[10]=o*c}else if(t.order==="ZYX"){const f=o*h,d=o*u,p=a*h,y=a*u;n[0]=c*h,n[4]=p*l-d,n[8]=f*l+y,n[1]=c*u,n[5]=y*l+f,n[9]=d*l-p,n[2]=-l,n[6]=a*c,n[10]=o*c}else if(t.order==="YZX"){const f=o*c,d=o*l,p=a*c,y=a*l;n[0]=c*h,n[4]=y-f*u,n[8]=p*u+d,n[1]=u,n[5]=o*h,n[9]=-a*h,n[2]=-l*h,n[6]=d*u+p,n[10]=f-y*u}else if(t.order==="XZY"){const f=o*c,d=o*l,p=a*c,y=a*l;n[0]=c*h,n[4]=-u,n[8]=l*h,n[1]=f*u+y,n[5]=o*h,n[9]=d*u-p,n[2]=p*u-d,n[6]=a*h,n[10]=y*u+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(t){return this.compose(cE,t,lE)}lookAt(t,n,i){const r=this.elements;return Yt.subVectors(t,n),Yt.lengthSq()===0&&(Yt.z=1),Yt.normalize(),Ti.crossVectors(i,Yt),Ti.lengthSq()===0&&(Math.abs(i.z)===1?Yt.x+=1e-4:Yt.z+=1e-4,Yt.normalize(),Ti.crossVectors(i,Yt)),Ti.normalize(),Ga.crossVectors(Yt,Ti),r[0]=Ti.x,r[4]=Ga.x,r[8]=Yt.x,r[1]=Ti.y,r[5]=Ga.y,r[9]=Yt.y,r[2]=Ti.z,r[6]=Ga.z,r[10]=Yt.z,this}multiply(t,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,n)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,s=this.elements,o=i[0],a=i[4],c=i[8],l=i[12],h=i[1],u=i[5],f=i[9],d=i[13],p=i[2],y=i[6],v=i[10],g=i[14],m=i[3],x=i[7],_=i[11],T=i[15],b=r[0],L=r[4],D=r[8],I=r[12],Y=r[1],z=r[5],V=r[9],k=r[13],O=r[2],N=r[6],W=r[10],J=r[14],te=r[3],ae=r[7],ge=r[11],le=r[15];return s[0]=o*b+a*Y+c*O+l*te,s[4]=o*L+a*z+c*N+l*ae,s[8]=o*D+a*V+c*W+l*ge,s[12]=o*I+a*k+c*J+l*le,s[1]=h*b+u*Y+f*O+d*te,s[5]=h*L+u*z+f*N+d*ae,s[9]=h*D+u*V+f*W+d*ge,s[13]=h*I+u*k+f*J+d*le,s[2]=p*b+y*Y+v*O+g*te,s[6]=p*L+y*z+v*N+g*ae,s[10]=p*D+y*V+v*W+g*ge,s[14]=p*I+y*k+v*J+g*le,s[3]=m*b+x*Y+_*O+T*te,s[7]=m*L+x*z+_*N+T*ae,s[11]=m*D+x*V+_*W+T*ge,s[15]=m*I+x*k+_*J+T*le,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[4]*=t,n[8]*=t,n[12]*=t,n[1]*=t,n[5]*=t,n[9]*=t,n[13]*=t,n[2]*=t,n[6]*=t,n[10]*=t,n[14]*=t,n[3]*=t,n[7]*=t,n[11]*=t,n[15]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[4],r=t[8],s=t[12],o=t[1],a=t[5],c=t[9],l=t[13],h=t[2],u=t[6],f=t[10],d=t[14],p=t[3],y=t[7],v=t[11],g=t[15];return p*(+s*c*u-r*l*u-s*a*f+i*l*f+r*a*d-i*c*d)+y*(+n*c*d-n*l*f+s*o*f-r*o*d+r*l*h-s*c*h)+v*(+n*l*u-n*a*d-s*o*u+i*o*d+s*a*h-i*l*h)+g*(-r*a*h-n*c*u+n*a*f+r*o*u-i*o*f+i*c*h)}transpose(){const t=this.elements;let n;return n=t[1],t[1]=t[4],t[4]=n,n=t[2],t[2]=t[8],t[8]=n,n=t[6],t[6]=t[9],t[9]=n,n=t[3],t[3]=t[12],t[12]=n,n=t[7],t[7]=t[13],t[13]=n,n=t[11],t[11]=t[14],t[14]=n,this}setPosition(t,n,i){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=n,r[14]=i),this}getInverse(t,n){n!==void 0&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const i=this.elements,r=t.elements,s=r[0],o=r[1],a=r[2],c=r[3],l=r[4],h=r[5],u=r[6],f=r[7],d=r[8],p=r[9],y=r[10],v=r[11],g=r[12],m=r[13],x=r[14],_=r[15],T=p*x*f-m*y*f+m*u*v-h*x*v-p*u*_+h*y*_,b=g*y*f-d*x*f-g*u*v+l*x*v+d*u*_-l*y*_,L=d*m*f-g*p*f+g*h*v-l*m*v-d*h*_+l*p*_,D=g*p*u-d*m*u-g*h*y+l*m*y+d*h*x-l*p*x,I=s*T+o*b+a*L+c*D;if(I===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const Y=1/I;return i[0]=T*Y,i[1]=(m*y*c-p*x*c-m*a*v+o*x*v+p*a*_-o*y*_)*Y,i[2]=(h*x*c-m*u*c+m*a*f-o*x*f-h*a*_+o*u*_)*Y,i[3]=(p*u*c-h*y*c-p*a*f+o*y*f+h*a*v-o*u*v)*Y,i[4]=b*Y,i[5]=(d*x*c-g*y*c+g*a*v-s*x*v-d*a*_+s*y*_)*Y,i[6]=(g*u*c-l*x*c-g*a*f+s*x*f+l*a*_-s*u*_)*Y,i[7]=(l*y*c-d*u*c+d*a*f-s*y*f-l*a*v+s*u*v)*Y,i[8]=L*Y,i[9]=(g*p*c-d*m*c-g*o*v+s*m*v+d*o*_-s*p*_)*Y,i[10]=(l*m*c-g*h*c+g*o*f-s*m*f-l*o*_+s*h*_)*Y,i[11]=(d*h*c-l*p*c-d*o*f+s*p*f+l*o*v-s*h*v)*Y,i[12]=D*Y,i[13]=(d*m*a-g*p*a+g*o*y-s*m*y-d*o*x+s*p*x)*Y,i[14]=(g*h*a-l*m*a-g*o*u+s*m*u+l*o*x-s*h*x)*Y,i[15]=(l*p*a-d*h*a+d*o*u-s*p*u-l*o*y+s*h*y)*Y,this}scale(t){const n=this.elements,i=t.x,r=t.y,s=t.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,n=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(t,n,i){return this.set(1,0,0,t,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(t){const n=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,o=t.x,a=t.y,c=t.z,l=s*o,h=s*a;return this.set(l*o+i,l*a-r*c,l*c+r*a,0,l*a+r*c,h*a+i,h*c-r*o,0,l*c-r*a,h*c+r*o,s*c*c+i,0,0,0,0,1),this}makeScale(t,n,i){return this.set(t,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,n,i){return this.set(1,n,i,0,t,1,i,0,t,n,1,0,0,0,0,1),this}compose(t,n,i){const r=this.elements,s=n._x,o=n._y,a=n._z,c=n._w,l=s+s,h=o+o,u=a+a,f=s*l,d=s*h,p=s*u,y=o*h,v=o*u,g=a*u,m=c*l,x=c*h,_=c*u,T=i.x,b=i.y,L=i.z;return r[0]=(1-(y+g))*T,r[1]=(d+_)*T,r[2]=(p-x)*T,r[3]=0,r[4]=(d-_)*b,r[5]=(1-(f+g))*b,r[6]=(v+m)*b,r[7]=0,r[8]=(p+x)*L,r[9]=(v-m)*L,r[10]=(1-(f+y))*L,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,n,i){const r=this.elements;let s=Vr.set(r[0],r[1],r[2]).length();const o=Vr.set(r[4],r[5],r[6]).length(),a=Vr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),t.x=r[12],t.y=r[13],t.z=r[14],pn.copy(this);const l=1/s,h=1/o,u=1/a;return pn.elements[0]*=l,pn.elements[1]*=l,pn.elements[2]*=l,pn.elements[4]*=h,pn.elements[5]*=h,pn.elements[6]*=h,pn.elements[8]*=u,pn.elements[9]*=u,pn.elements[10]*=u,n.setFromRotationMatrix(pn),i.x=s,i.y=o,i.z=a,this}makePerspective(t,n,i,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(n-t),l=2*s/(i-r),h=(n+t)/(n-t),u=(i+r)/(i-r),f=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=c,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,n,i,r,s,o){const a=this.elements,c=1/(n-t),l=1/(i-r),h=1/(o-s),u=(n+t)*c,f=(i+r)*l,d=(o+s)*h;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n){n===void 0&&(n=0);for(let i=0;i<16;i++)this.elements[i]=t[i+n];return this}toArray(t,n){t===void 0&&(t=[]),n===void 0&&(n=0);const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t[n+9]=i[9],t[n+10]=i[10],t[n+11]=i[11],t[n+12]=i[12],t[n+13]=i[13],t[n+14]=i[14],t[n+15]=i[15],t}}const Vr=new A,pn=new Ie,cE=new A(0,0,0),lE=new A(1,1,1),Ti=new A,Ga=new A,Yt=new A;class Hs{constructor(t=0,n=0,i=0,r=Hs.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,n,i,r){return this._x=t,this._y=n,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,n,i){const r=Ee.clamp,s=t.elements,o=s[0],a=s[4],c=s[8],l=s[1],h=s[5],u=s[9],f=s[2],d=s[6],p=s[10];switch(n=n||this._order,n){case"XYZ":this._y=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(c,p),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-f,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,p),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(l,o));break;case"ZYX":this._y=Math.asin(-r(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,o)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-f,o)):(this._x=0,this._y=Math.atan2(c,p));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(t,n,i){return tm.makeRotationFromQuaternion(t),this.setFromRotationMatrix(tm,n,i)}setFromVector3(t,n){return this.set(t.x,t.y,t.z,n||this._order)}reorder(t){return nm.setFromEuler(this),this.setFromQuaternion(nm,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t,n){return t===void 0&&(t=[]),n===void 0&&(n=0),t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new A(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Hs.DefaultOrder="XYZ";Hs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const tm=new Ie,nm=new Lt;class ud{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}}let uE=0;const im=new A,kr=new Lt,ti=new Ie,Va=new A,Zs=new A,hE=new A,fE=new Lt,rm=new A(1,0,0),sm=new A(0,1,0),om=new A(0,0,1),dE={type:"added"},pE={type:"removed"};function xe(){Object.defineProperty(this,"id",{value:uE++}),this.uuid=Ee.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xe.DefaultUp.clone();const e=new A,t=new Hs,n=new Lt,i=new A(1,1,1);function r(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ie},normalMatrix:{value:new Ht}}),this.matrix=new Ie,this.matrixWorld=new Ie,this.matrixAutoUpdate=xe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ud,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}xe.DefaultUp=new A(0,1,0);xe.DefaultMatrixAutoUpdate=!0;xe.prototype=Object.assign(Object.create(Xn.prototype),{constructor:xe,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return kr.setFromAxisAngle(e,t),this.quaternion.multiply(kr),this},rotateOnWorldAxis:function(e,t){return kr.setFromAxisAngle(e,t),this.quaternion.premultiply(kr),this},rotateX:function(e){return this.rotateOnAxis(rm,e)},rotateY:function(e){return this.rotateOnAxis(sm,e)},rotateZ:function(e){return this.rotateOnAxis(om,e)},translateOnAxis:function(e,t){return im.copy(e).applyQuaternion(this.quaternion),this.position.add(im.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(rm,e)},translateY:function(e){return this.translateOnAxis(sm,e)},translateZ:function(e){return this.translateOnAxis(om,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(ti.getInverse(this.matrixWorld))},lookAt:function(e,t,n){e.isVector3?Va.copy(e):Va.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Zs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ti.lookAt(Zs,Va,this.up):ti.lookAt(Va,Zs,this.up),this.quaternion.setFromRotationMatrix(ti),i&&(ti.extractRotation(i.matrixWorld),kr.setFromRotationMatrix(ti),this.quaternion.premultiply(kr.inverse()))},add:function(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(dE)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(pE)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),ti.getInverse(this.matrixWorld),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ti.multiply(e.parent.matrixWorld)),e.applyMatrix4(ti),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(e,t);if(s!==void 0)return s}},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new A),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Lt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zs,e,hE),e},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new A),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zs,fE,e),e},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new A),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(e)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let c=0,l=a.length;c<l;c++){const h=a[c];r(e.shapes,h)}else r(e.shapes,a)}}if(this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,c=this.material.length;a<c;a++)o.push(r(e.materials,this.material[a]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(t){const o=s(e.geometries),a=s(e.materials),c=s(e.textures),l=s(e.images),h=s(e.shapes);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),c.length>0&&(n.textures=c),l.length>0&&(n.images=l),h.length>0&&(n.shapes=h)}return n.object=i,n;function s(o){const a=[];for(const c in o){const l=o[c];delete l.metadata,a.push(l)}return a}},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}});const Au=new A,mE=new A,gE=new Ht;class Un{constructor(t,n){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=t!==void 0?t:new A(1,0,0),this.constant=n!==void 0?n:0}set(t,n){return this.normal.copy(t),this.constant=n,this}setComponents(t,n,i,r){return this.normal.set(t,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(t,n){return this.normal.copy(t),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(t,n,i){const r=Au.subVectors(i,n).cross(mE.subVectors(t,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}clone(){return new this.constructor().copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,n){return n===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),n=new A),n.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,n){n===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new A);const i=t.delta(Au),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(t.start)===0?n.copy(t.start):void 0;const s=-(t.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return n.copy(i).multiplyScalar(s).add(t.start)}intersectsLine(t){const n=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return n<0&&i>0||i<0&&n>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new A),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,n){const i=n||gE.getNormalMatrix(t),r=this.coplanarPoint(Au).applyMatrix4(t),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const mn=new A,ni=new A,Ru=new A,ii=new A,Wr=new A,jr=new A,am=new A,Cu=new A,Lu=new A,Pu=new A;class _t{constructor(t,n,i){this.a=t!==void 0?t:new A,this.b=n!==void 0?n:new A,this.c=i!==void 0?i:new A}static getNormal(t,n,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new A),r.subVectors(i,n),mn.subVectors(t,n),r.cross(mn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(t,n,i,r,s){mn.subVectors(r,n),ni.subVectors(i,n),Ru.subVectors(t,n);const o=mn.dot(mn),a=mn.dot(ni),c=mn.dot(Ru),l=ni.dot(ni),h=ni.dot(Ru),u=o*l-a*a;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new A),u===0)return s.set(-2,-1,-1);const f=1/u,d=(l*c-a*h)*f,p=(o*h-a*c)*f;return s.set(1-d-p,p,d)}static containsPoint(t,n,i,r){return this.getBarycoord(t,n,i,r,ii),ii.x>=0&&ii.y>=0&&ii.x+ii.y<=1}static getUV(t,n,i,r,s,o,a,c){return this.getBarycoord(t,n,i,r,ii),c.set(0,0),c.addScaledVector(s,ii.x),c.addScaledVector(o,ii.y),c.addScaledVector(a,ii.z),c}static isFrontFacing(t,n,i,r){return mn.subVectors(i,n),ni.subVectors(t,n),mn.cross(ni).dot(r)<0}set(t,n,i){return this.a.copy(t),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(t,n,i,r){return this.a.copy(t[n]),this.b.copy(t[i]),this.c.copy(t[r]),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return mn.subVectors(this.c,this.b),ni.subVectors(this.a,this.b),mn.cross(ni).length()*.5}getMidpoint(t){return t===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new A),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return _t.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Un),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,n){return _t.getBarycoord(t,this.a,this.b,this.c,n)}getUV(t,n,i,r,s){return _t.getUV(t,this.a,this.b,this.c,n,i,r,s)}containsPoint(t){return _t.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return _t.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,n){n===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),n=new A);const i=this.a,r=this.b,s=this.c;let o,a;Wr.subVectors(r,i),jr.subVectors(s,i),Cu.subVectors(t,i);const c=Wr.dot(Cu),l=jr.dot(Cu);if(c<=0&&l<=0)return n.copy(i);Lu.subVectors(t,r);const h=Wr.dot(Lu),u=jr.dot(Lu);if(h>=0&&u<=h)return n.copy(r);const f=c*u-h*l;if(f<=0&&c>=0&&h<=0)return o=c/(c-h),n.copy(i).addScaledVector(Wr,o);Pu.subVectors(t,s);const d=Wr.dot(Pu),p=jr.dot(Pu);if(p>=0&&d<=p)return n.copy(s);const y=d*l-c*p;if(y<=0&&l>=0&&p<=0)return a=l/(l-p),n.copy(i).addScaledVector(jr,a);const v=h*p-d*u;if(v<=0&&u-h>=0&&d-p>=0)return am.subVectors(s,r),a=(u-h)/(u-h+(d-p)),n.copy(r).addScaledVector(am,a);const g=1/(v+y+f);return o=y*g,a=f*g,n.copy(i).addScaledVector(Wr,o).addScaledVector(jr,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const nx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},gn={h:0,s:0,l:0},ka={h:0,s:0,l:0};function Iu(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}function Ou(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function Du(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}class me{constructor(t,n,i){return Object.defineProperty(this,"isColor",{value:!0}),n===void 0&&i===void 0?this.set(t):this.setRGB(t,n,i)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this}setRGB(t,n,i){return this.r=t,this.g=n,this.b=i,this}setHSL(t,n,i){if(t=Ee.euclideanModulo(t,1),n=Ee.clamp(n,0,1),i=Ee.clamp(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,s=2*i-r;this.r=Iu(s,r,t+1/3),this.g=Iu(s,r,t),this.b=Iu(s,r,t-1/3)}return this}setStyle(t){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,n(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,n(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,c=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return n(r[5]),this.setHSL(a,c,l)}break}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const n=nx[t];return n!==void 0?this.setHex(n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,n){return n===void 0&&(n=2),this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}copyLinearToGamma(t,n){n===void 0&&(n=2);const i=n>0?1/n:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Ou(t.r),this.g=Ou(t.g),this.b=Ou(t.b),this}copyLinearToSRGB(t){return this.r=Du(t.r),this.g=Du(t.g),this.b=Du(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){t===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const n=this.r,i=this.g,r=this.b,s=Math.max(n,i,r),o=Math.min(n,i,r);let a,c;const l=(o+s)/2;if(o===s)a=0,c=0;else{const h=s-o;switch(c=l<=.5?h/(s+o):h/(2-s-o),s){case n:a=(i-r)/h+(i<r?6:0);break;case i:a=(r-n)/h+2;break;case r:a=(n-i)/h+4;break}a/=6}return t.h=a,t.s=c,t.l=l,t}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(t,n,i){return this.getHSL(gn),gn.h+=t,gn.s+=n,gn.l+=i,this.setHSL(gn.h,gn.s,gn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpHSL(t,n){this.getHSL(gn),t.getHSL(ka);const i=Ee.lerp(gn.h,ka.h,n),r=Ee.lerp(gn.s,ka.s,n),s=Ee.lerp(gn.l,ka.l,n);return this.setHSL(i,r,s),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n){return n===void 0&&(n=0),this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t,n){return t===void 0&&(t=[]),n===void 0&&(n=0),t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),t.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}me.NAMES=nx;me.prototype.r=1;me.prototype.g=1;me.prototype.b=1;class qo{constructor(t,n,i,r,s,o){this.a=t,this.b=n,this.c=i,this.normal=r&&r.isVector3?r:new A,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new me,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=o!==void 0?o:0}clone(){return new this.constructor().copy(this)}copy(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let n=0,i=t.vertexNormals.length;n<i;n++)this.vertexNormals[n]=t.vertexNormals[n].clone();for(let n=0,i=t.vertexColors.length;n<i;n++)this.vertexColors[n]=t.vertexColors[n].clone();return this}}let yE=0;function Se(){Object.defineProperty(this,"id",{value:yE++}),this.uuid=Ee.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=ms,this.side=Ns,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=id,this.blendDst=rd,this.blendEquation=fr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=qc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=tx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Nc,this.stencilZFail=Nc,this.stencilZPass=Nc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Se.prototype=Object.assign(Object.create(Xn.prototype),{constructor:Se,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===nd;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}},toJSON:function(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ms&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==Ns&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(t){const r=i(e.textures),s=i(e.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Se.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function un(e){Se.call(this),this.type="MeshBasicMaterial",this.color=new me(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=va,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}un.prototype=Object.create(Se.prototype);un.prototype.constructor=un;un.prototype.isMeshBasicMaterial=!0;un.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Je=new A,Wa=new ie;function Me(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Ma,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Me.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Me.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new me),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this},copyVector2sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new ie),t[n++]=s.x,t[n++]=s.y}return this},copyVector3sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new A),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this},copyVector4sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new je),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this},applyMatrix3:function(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Wa.fromBufferAttribute(this,t),Wa.applyMatrix3(e),this.setXY(t,Wa.x,Wa.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Je.fromBufferAttribute(this,t),Je.applyMatrix3(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this},applyMatrix4:function(e){for(let t=0,n=this.count;t<n;t++)Je.x=this.getX(t),Je.y=this.getY(t),Je.z=this.getZ(t),Je.applyMatrix4(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this},applyNormalMatrix:function(e){for(let t=0,n=this.count;t<n;t++)Je.x=this.getX(t),Je.y=this.getY(t),Je.z=this.getZ(t),Je.applyNormalMatrix(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this},transformDirection:function(e){for(let t=0,n=this.count;t<n;t++)Je.x=this.getX(t),Je.y=this.getY(t),Je.z=this.getZ(t),Je.transformDirection(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Xo(e,t,n){Me.call(this,new Int8Array(e),t,n)}Xo.prototype=Object.create(Me.prototype);Xo.prototype.constructor=Xo;function Yo(e,t,n){Me.call(this,new Uint8Array(e),t,n)}Yo.prototype=Object.create(Me.prototype);Yo.prototype.constructor=Yo;function $o(e,t,n){Me.call(this,new Uint8ClampedArray(e),t,n)}$o.prototype=Object.create(Me.prototype);$o.prototype.constructor=$o;function Zo(e,t,n){Me.call(this,new Int16Array(e),t,n)}Zo.prototype=Object.create(Me.prototype);Zo.prototype.constructor=Zo;function wr(e,t,n){Me.call(this,new Uint16Array(e),t,n)}wr.prototype=Object.create(Me.prototype);wr.prototype.constructor=wr;function Jo(e,t,n){Me.call(this,new Int32Array(e),t,n)}Jo.prototype=Object.create(Me.prototype);Jo.prototype.constructor=Jo;function Mr(e,t,n){Me.call(this,new Uint32Array(e),t,n)}Mr.prototype=Object.create(Me.prototype);Mr.prototype.constructor=Mr;function he(e,t,n){Me.call(this,new Float32Array(e),t,n)}he.prototype=Object.create(Me.prototype);he.prototype.constructor=he;function Ko(e,t,n){Me.call(this,new Float64Array(e),t,n)}Ko.prototype=Object.create(Me.prototype);Ko.prototype.constructor=Ko;class vE{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const n=[];let i,r,s;const o=t.faces;for(r=0;r<o.length;r++){const a=o[r];a.materialIndex!==s&&(s=a.materialIndex,i!==void 0&&(i.count=r*3-i.start,n.push(i)),i={start:r*3,materialIndex:s})}i!==void 0&&(i.count=r*3-i.start,n.push(i)),this.groups=n}fromGeometry(t){const n=t.faces,i=t.vertices,r=t.faceVertexUvs,s=r[0]&&r[0].length>0,o=r[1]&&r[1].length>0,a=t.morphTargets,c=a.length;let l;if(c>0){l=[];for(let g=0;g<c;g++)l[g]={name:a[g].name,data:[]};this.morphTargets.position=l}const h=t.morphNormals,u=h.length;let f;if(u>0){f=[];for(let g=0;g<u;g++)f[g]={name:h[g].name,data:[]};this.morphTargets.normal=f}const d=t.skinIndices,p=t.skinWeights,y=d.length===i.length,v=p.length===i.length;i.length>0&&n.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let g=0;g<n.length;g++){const m=n[g];this.vertices.push(i[m.a],i[m.b],i[m.c]);const x=m.vertexNormals;if(x.length===3)this.normals.push(x[0],x[1],x[2]);else{const T=m.normal;this.normals.push(T,T,T)}const _=m.vertexColors;if(_.length===3)this.colors.push(_[0],_[1],_[2]);else{const T=m.color;this.colors.push(T,T,T)}if(s===!0){const T=r[0][g];T!==void 0?this.uvs.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",g),this.uvs.push(new ie,new ie,new ie))}if(o===!0){const T=r[1][g];T!==void 0?this.uvs2.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",g),this.uvs2.push(new ie,new ie,new ie))}for(let T=0;T<c;T++){const b=a[T].vertices;l[T].data.push(b[m.a],b[m.b],b[m.c])}for(let T=0;T<u;T++){const b=h[T].vertexNormals[g];f[T].data.push(b.a,b.b,b.c)}y&&this.skinIndices.push(d[m.a],d[m.b],d[m.c]),v&&this.skinWeights.push(p[m.a],p[m.b],p[m.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this}}function ix(e){if(e.length===0)return-1/0;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}let xE=1;const On=new Ie,Nu=new xe,qr=new A,$t=new Yn,Js=new Yn,yt=new A;function we(){Object.defineProperty(this,"id",{value:xE+=2}),this.uuid=Ee.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}we.prototype=Object.assign(Object.create(Xn.prototype),{constructor:we,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(ix(e)>65535?Mr:wr)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ht().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(e){return On.makeRotationX(e),this.applyMatrix4(On),this},rotateY:function(e){return On.makeRotationY(e),this.applyMatrix4(On),this},rotateZ:function(e){return On.makeRotationZ(e),this.applyMatrix4(On),this},translate:function(e,t,n){return On.makeTranslation(e,t,n),this.applyMatrix4(On),this},scale:function(e,t,n){return On.makeScale(e,t,n),this.applyMatrix4(On),this},lookAt:function(e){return Nu.lookAt(e),Nu.updateMatrix(),this.applyMatrix4(Nu.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(qr).negate(),this.translate(qr.x,qr.y,qr.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const n=new he(t.vertices.length*3,3),i=new he(t.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const r=new he(t.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new he(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}if(t.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(t.vertices),n.needsUpdate=!0),t.verticesNeedUpdate=!1}if(t.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(t.normals),n.needsUpdate=!0),t.normalsNeedUpdate=!1}if(t.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(t.colors),n.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(t.uvs),n.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(t.lineDistances),n.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new vE().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(e.vertices.length*3);if(this.setAttribute("position",new Me(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const n=new Float32Array(e.normals.length*3);this.setAttribute("normal",new Me(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const n=new Float32Array(e.colors.length*3);this.setAttribute("color",new Me(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const n=new Float32Array(e.uvs.length*2);this.setAttribute("uv",new Me(n,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const n=new Float32Array(e.uvs2.length*2);this.setAttribute("uv2",new Me(n,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const n in e.morphTargets){const i=[],r=e.morphTargets[n];for(let s=0,o=r.length;s<o;s++){const a=r[s],c=new he(a.data.length*3,3);c.name=a.name,i.push(c.copyVector3sArray(a.data))}this.morphAttributes[n]=i}if(e.skinIndices.length>0){const n=new he(e.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const n=new he(e.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Yn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];$t.setFromBufferAttribute(r),this.morphTargetsRelative?(yt.addVectors(this.boundingBox.min,$t.min),this.boundingBox.expandByPoint(yt),yt.addVectors(this.boundingBox.max,$t.max),this.boundingBox.expandByPoint(yt)):(this.boundingBox.expandByPoint($t.min),this.boundingBox.expandByPoint($t.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new xi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new A,1/0);return}if(e){const n=this.boundingSphere.center;if($t.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const o=t[r];Js.setFromBufferAttribute(o),this.morphTargetsRelative?(yt.addVectors($t.min,Js.min),$t.expandByPoint(yt),yt.addVectors($t.max,Js.max),$t.expandByPoint(yt)):($t.expandByPoint(Js.min),$t.expandByPoint(Js.max))}$t.getCenter(n);let i=0;for(let r=0,s=e.count;r<s;r++)yt.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(yt));if(t)for(let r=0,s=t.length;r<s;r++){const o=t[r],a=this.morphTargetsRelative;for(let c=0,l=o.count;c<l;c++)yt.fromBufferAttribute(o,c),a&&(qr.fromBufferAttribute(e,c),yt.add(qr)),i=Math.max(i,n.distanceToSquared(yt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Me(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let u=0,f=n.count;u<f;u++)n.setXYZ(u,0,0,0);const i=new A,r=new A,s=new A,o=new A,a=new A,c=new A,l=new A,h=new A;if(e)for(let u=0,f=e.count;u<f;u+=3){const d=e.getX(u+0),p=e.getX(u+1),y=e.getX(u+2);i.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,y),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),o.fromBufferAttribute(n,d),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,y),o.add(l),a.add(l),c.add(l),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(y,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)i.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),s.fromBufferAttribute(t,u+2),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),n.setXYZ(u+0,l.x,l.y,l.z),n.setXYZ(u+1,l.x,l.y,l.z),n.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const s=n[i].array,o=e.attributes[i],a=o.array,c=o.itemSize*t,l=Math.min(a.length,s.length-c);for(let h=0,u=c;h<l;h++,u++)s[u]=a[h]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)yt.fromBufferAttribute(e,t),yt.normalize(),e.setXYZ(t,yt.x,yt.y,yt.z)},toNonIndexed:function(){function e(o,a){const c=o.array,l=o.itemSize,h=o.normalized,u=new c.constructor(a.length*l);let f=0,d=0;for(let p=0,y=a.length;p<y;p++){f=a[p]*l;for(let v=0;v<l;v++)u[d++]=c[f++]}return new Me(u,l,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new we,n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],c=e(a,n);t.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const a=[],c=r[o];for(let l=0,h=c.length;l<h;l++){const u=c[l],f=e(u,n);a.push(f)}t.morphAttributes[o]=a}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const c=s[o];t.addGroup(c.start,c.count,c.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const c in a)a[c]!==void 0&&(e[c]=a[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const a in n){const c=n[a],l=c.toJSON(e.data);c.name!==""&&(l.name=c.name),e.data.attributes[a]=l}const i={};let r=!1;for(const a in this.morphAttributes){const c=this.morphAttributes[a],l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=f.toJSON(e.data);f.name!==""&&(d.name=f.name),l.push(d)}l.length>0&&(i[a]=l,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return new we().copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const l=i[c];this.setAttribute(c,l.clone(t))}const r=e.morphAttributes;for(const c in r){const l=[],h=r[c];for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone(t));this.morphAttributes[c]=l}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let c=0,l=s.length;c<l;c++){const h=s[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const cm=new Ie,rr=new zs,Fu=new xi,Ei=new A,Ai=new A,Ri=new A,Bu=new A,Uu=new A,zu=new A,ja=new A,qa=new A,Xa=new A,os=new ie,as=new ie,cs=new ie,Eo=new A,Ya=new A;function nt(e,t){xe.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new we,this.material=t!==void 0?t:new un,this.updateMorphTargets()}nt.prototype=Object.assign(Object.create(xe.prototype),{constructor:nt,isMesh:!0,copy:function(e){return xe.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Fu.copy(n.boundingSphere),Fu.applyMatrix4(r),e.ray.intersectsSphere(Fu)===!1)||(cm.getInverse(r),rr.copy(e.ray).applyMatrix4(cm),n.boundingBox!==null&&rr.intersectsBox(n.boundingBox)===!1))return;let s;if(n.isBufferGeometry){const o=n.index,a=n.attributes.position,c=n.morphAttributes.position,l=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,f=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(i))for(let p=0,y=f.length;p<y;p++){const v=f[p],g=i[v.materialIndex],m=Math.max(v.start,d.start),x=Math.min(v.start+v.count,d.start+d.count);for(let _=m,T=x;_<T;_+=3){const b=o.getX(_),L=o.getX(_+1),D=o.getX(_+2);s=$a(this,g,e,rr,a,c,l,h,u,b,L,D),s&&(s.faceIndex=Math.floor(_/3),s.face.materialIndex=v.materialIndex,t.push(s))}}else{const p=Math.max(0,d.start),y=Math.min(o.count,d.start+d.count);for(let v=p,g=y;v<g;v+=3){const m=o.getX(v),x=o.getX(v+1),_=o.getX(v+2);s=$a(this,i,e,rr,a,c,l,h,u,m,x,_),s&&(s.faceIndex=Math.floor(v/3),t.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,y=f.length;p<y;p++){const v=f[p],g=i[v.materialIndex],m=Math.max(v.start,d.start),x=Math.min(v.start+v.count,d.start+d.count);for(let _=m,T=x;_<T;_+=3){const b=_,L=_+1,D=_+2;s=$a(this,g,e,rr,a,c,l,h,u,b,L,D),s&&(s.faceIndex=Math.floor(_/3),s.face.materialIndex=v.materialIndex,t.push(s))}}else{const p=Math.max(0,d.start),y=Math.min(a.count,d.start+d.count);for(let v=p,g=y;v<g;v+=3){const m=v,x=v+1,_=v+2;s=$a(this,i,e,rr,a,c,l,h,u,m,x,_),s&&(s.faceIndex=Math.floor(v/3),t.push(s))}}}else if(n.isGeometry){const o=Array.isArray(i),a=n.vertices,c=n.faces;let l;const h=n.faceVertexUvs[0];h.length>0&&(l=h);for(let u=0,f=c.length;u<f;u++){const d=c[u],p=o?i[d.materialIndex]:i;if(p===void 0)continue;const y=a[d.a],v=a[d.b],g=a[d.c];if(s=rx(this,p,e,rr,y,v,g,Eo),s){if(l&&l[u]){const m=l[u];os.copy(m[0]),as.copy(m[1]),cs.copy(m[2]),s.uv=_t.getUV(Eo,y,v,g,os,as,cs,new ie)}s.face=d,s.faceIndex=u,t.push(s)}}}}});function rx(e,t,n,i,r,s,o,a){let c;if(t.side===dt?c=i.intersectTriangle(o,s,r,!0,a):c=i.intersectTriangle(r,s,o,t.side!==ya,a),c===null)return null;Ya.copy(a),Ya.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(Ya);return l<n.near||l>n.far?null:{distance:l,point:Ya.clone(),object:e}}function $a(e,t,n,i,r,s,o,a,c,l,h,u){Ei.fromBufferAttribute(r,l),Ai.fromBufferAttribute(r,h),Ri.fromBufferAttribute(r,u);const f=e.morphTargetInfluences;if(t.morphTargets&&s&&f){ja.set(0,0,0),qa.set(0,0,0),Xa.set(0,0,0);for(let p=0,y=s.length;p<y;p++){const v=f[p],g=s[p];v!==0&&(Bu.fromBufferAttribute(g,l),Uu.fromBufferAttribute(g,h),zu.fromBufferAttribute(g,u),o?(ja.addScaledVector(Bu,v),qa.addScaledVector(Uu,v),Xa.addScaledVector(zu,v)):(ja.addScaledVector(Bu.sub(Ei),v),qa.addScaledVector(Uu.sub(Ai),v),Xa.addScaledVector(zu.sub(Ri),v)))}Ei.add(ja),Ai.add(qa),Ri.add(Xa)}e.isSkinnedMesh&&(e.boneTransform(l,Ei),e.boneTransform(h,Ai),e.boneTransform(u,Ri));const d=rx(e,t,n,i,Ei,Ai,Ri,Eo);if(d){a&&(os.fromBufferAttribute(a,l),as.fromBufferAttribute(a,h),cs.fromBufferAttribute(a,u),d.uv=_t.getUV(Eo,Ei,Ai,Ri,os,as,cs,new ie)),c&&(os.fromBufferAttribute(c,l),as.fromBufferAttribute(c,h),cs.fromBufferAttribute(c,u),d.uv2=_t.getUV(Eo,Ei,Ai,Ri,os,as,cs,new ie));const p=new qo(l,h,u);_t.getNormal(Ei,Ai,Ri,p.normal),d.face=p}return d}class Sa extends we{constructor(t=1,n=1,i=1,r=1,s=1,o=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const c=[],l=[],h=[],u=[];let f=0,d=0;p("z","y","x",-1,-1,i,n,t,o,s,0),p("z","y","x",1,-1,i,n,-t,o,s,1),p("x","z","y",1,1,t,i,n,r,o,2),p("x","z","y",1,-1,t,i,-n,r,o,3),p("x","y","z",1,-1,t,n,i,r,s,4),p("x","y","z",-1,-1,t,n,-i,r,s,5),this.setIndex(c),this.setAttribute("position",new he(l,3)),this.setAttribute("normal",new he(h,3)),this.setAttribute("uv",new he(u,2));function p(y,v,g,m,x,_,T,b,L,D,I){const Y=_/L,z=T/D,V=_/2,k=T/2,O=b/2,N=L+1,W=D+1;let J=0,te=0;const ae=new A;for(let ge=0;ge<W;ge++){const le=ge*z-k;for(let _e=0;_e<N;_e++){const Te=_e*Y-V;ae[y]=Te*m,ae[v]=le*x,ae[g]=O,l.push(ae.x,ae.y,ae.z),ae[y]=0,ae[v]=0,ae[g]=b>0?1:-1,h.push(ae.x,ae.y,ae.z),u.push(_e/L),u.push(1-ge/D),J+=1}}for(let ge=0;ge<D;ge++)for(let le=0;le<L;le++){const _e=f+le+N*ge,Te=f+le+N*(ge+1),He=f+(le+1)+N*(ge+1),ne=f+(le+1)+N*ge;c.push(_e,Te,ne),c.push(Te,He,ne),te+=6}a.addGroup(d,te,I),d+=te,f+=J}}}function Ms(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function Mt(e){const t={};for(let n=0;n<e.length;n++){const i=Ms(e[n]);for(const r in i)t[r]=i[r]}return t}const sx={clone:Ms,merge:Mt};var _E=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,bE=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function kt(e){Se.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=_E,this.fragmentShader=bE,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}kt.prototype=Object.create(Se.prototype);kt.prototype.constructor=kt;kt.prototype.isShaderMaterial=!0;kt.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ms(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this};kt.prototype.toJSON=function(e){const t=Se.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?t.uniforms[i]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[i]={type:"m4",value:s.toArray()}:t.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t};function Vn(){xe.call(this),this.type="Camera",this.matrixWorldInverse=new Ie,this.projectionMatrix=new Ie,this.projectionMatrixInverse=new Ie}Vn.prototype=Object.assign(Object.create(xe.prototype),{constructor:Vn,isCamera:!0,copy:function(e,t){return xe.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new A),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){xe.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){xe.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function ht(e,t,n,i){Vn.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}ht.prototype=Object.assign(Object.create(Vn.prototype),{constructor:ht,isPerspectiveCamera:!0,copy:function(e,t){return Vn.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=Ee.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(Ee.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return Ee.RAD2DEG*2*Math.atan(Math.tan(Ee.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(Ee.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,c=s.fullHeight;r+=s.offsetX*i/a,t-=s.offsetY*n/c,i*=s.width/a,n*=s.height/c}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const Xr=90,Yr=1;function Ss(e,t,n){if(xe.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new ht(Xr,Yr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new A(1,0,0)),this.add(i);const r=new ht(Xr,Yr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new A(-1,0,0)),this.add(r);const s=new ht(Xr,Yr,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new A(0,1,0)),this.add(s);const o=new ht(Xr,Yr,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new A(0,-1,0)),this.add(o);const a=new ht(Xr,Yr,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new A(0,0,1)),this.add(a);const c=new ht(Xr,Yr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new A(0,0,-1)),this.add(c),this.update=function(l,h){this.parent===null&&this.updateMatrixWorld();const u=l.xr.enabled,f=l.getRenderTarget();l.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,l.setRenderTarget(n,0),l.render(h,i),l.setRenderTarget(n,1),l.render(h,r),l.setRenderTarget(n,2),l.render(h,s),l.setRenderTarget(n,3),l.render(h,o),l.setRenderTarget(n,4),l.render(h,a),n.texture.generateMipmaps=d,l.setRenderTarget(n,5),l.render(h,c),l.setRenderTarget(f),l.xr.enabled=u},this.clear=function(l,h,u,f){const d=l.getRenderTarget();for(let p=0;p<6;p++)l.setRenderTarget(n,p),l.clear(h,u,f);l.setRenderTarget(d)}}Ss.prototype=Object.create(xe.prototype);Ss.prototype.constructor=Ss;function kn(e,t,n,i,r,s,o,a,c,l){e=e!==void 0?e:[],t=t!==void 0?t:xa,o=o!==void 0?o:Fi,Xe.call(this,e,t,n,i,r,s,o,a,c,l),this.flipY=!1,this._needsFlipEnvMap=!0}kn.prototype=Object.create(Xe.prototype);kn.prototype.constructor=kn;kn.prototype.isCubeTexture=!0;Object.defineProperty(kn.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function Gi(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),tn.call(this,e,e,t),t=t||{},this.texture=new kn(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}Gi.prototype=Object.create(tn.prototype);Gi.prototype.constructor=Gi;Gi.prototype.isWebGLCubeRenderTarget=!0;Gi.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=en,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},i=new Sa(5,5,5),r=new kt({name:"CubemapFromEquirect",uniforms:Ms(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:dt,blending:fi});r.uniforms.tEquirect.value=t;const s=new nt(i,r),o=t.minFilter;return t.minFilter===Bs&&(t.minFilter=vt),new Ss(1,10,this).update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this};function Sr(e,t,n,i,r,s,o,a,c,l,h,u){Xe.call(this,null,s,o,a,c,l,i,r,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=c!==void 0?c:pt,this.minFilter=l!==void 0?l:pt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Sr.prototype=Object.create(Xe.prototype);Sr.prototype.constructor=Sr;Sr.prototype.isDataTexture=!0;const $r=new xi,Za=new A;class Ta{constructor(t,n,i,r,s,o){this.planes=[t!==void 0?t:new Un,n!==void 0?n:new Un,i!==void 0?i:new Un,r!==void 0?r:new Un,s!==void 0?s:new Un,o!==void 0?o:new Un]}set(t,n,i,r,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(n),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}clone(){return new this.constructor().copy(this)}copy(t){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const n=this.planes,i=t.elements,r=i[0],s=i[1],o=i[2],a=i[3],c=i[4],l=i[5],h=i[6],u=i[7],f=i[8],d=i[9],p=i[10],y=i[11],v=i[12],g=i[13],m=i[14],x=i[15];return n[0].setComponents(a-r,u-c,y-f,x-v).normalize(),n[1].setComponents(a+r,u+c,y+f,x+v).normalize(),n[2].setComponents(a+s,u+l,y+d,x+g).normalize(),n[3].setComponents(a-s,u-l,y-d,x-g).normalize(),n[4].setComponents(a-o,u-h,y-p,x-m).normalize(),n[5].setComponents(a+o,u+h,y+p,x+m).normalize(),this}intersectsObject(t){const n=t.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),$r.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere($r)}intersectsSprite(t){return $r.center.set(0,0,0),$r.radius=.7071067811865476,$r.applyMatrix4(t.matrixWorld),this.intersectsSphere($r)}intersectsSphere(t){const n=this.planes,i=t.center,r=-t.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(t){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(Za.x=r.normal.x>0?t.max.x:t.min.x,Za.y=r.normal.y>0?t.max.y:t.min.y,Za.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Za)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(t)<0)return!1;return!0}}function ox(){let e=null,t=!1,n=null,i=null;function r(s,o){n(s,o),i=e.requestAnimationFrame(r)}return{start:function(){t!==!0&&n!==null&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(s){n=s},setContext:function(s){e=s}}}function wE(e,t){const n=t.isWebGL2,i=new WeakMap;function r(l,h){const u=l.array,f=l.usage,d=e.createBuffer();e.bindBuffer(h,d),e.bufferData(h,u,f),l.onUploadCallback();let p=5126;return u instanceof Float32Array?p=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?p=5123:u instanceof Int16Array?p=5122:u instanceof Uint32Array?p=5125:u instanceof Int32Array?p=5124:u instanceof Int8Array?p=5120:u instanceof Uint8Array&&(p=5121),{buffer:d,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version}}function s(l,h,u){const f=h.array,d=h.updateRange;e.bindBuffer(u,l),d.count===-1?e.bufferSubData(u,0,f):(n?e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),i.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=i.get(l);h&&(e.deleteBuffer(h.buffer),i.delete(l))}function c(l,h){if(l.isGLBufferAttribute){var u=i.get(l);(!u||u.version<l.version)&&i.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const f=i.get(l);f===void 0?i.set(l,r(l,h)):f.version<l.version&&(s(f.buffer,l,h),f.version=l.version)}return{get:o,remove:a,update:c}}let Vl=class extends we{constructor(t,n,i,r){super(),this.type="PlaneBufferGeometry",this.parameters={width:t,height:n,widthSegments:i,heightSegments:r},t=t||1,n=n||1;const s=t/2,o=n/2,a=Math.floor(i)||1,c=Math.floor(r)||1,l=a+1,h=c+1,u=t/a,f=n/c,d=[],p=[],y=[],v=[];for(let g=0;g<h;g++){const m=g*f-o;for(let x=0;x<l;x++){const _=x*u-s;p.push(_,-m,0),y.push(0,0,1),v.push(x/a),v.push(1-g/c)}}for(let g=0;g<c;g++)for(let m=0;m<a;m++){const x=m+l*g,_=m+l*(g+1),T=m+1+l*(g+1),b=m+1+l*g;d.push(x,_,b),d.push(_,T,b)}this.setIndex(d),this.setAttribute("position",new he(p,3)),this.setAttribute("normal",new he(y,3)),this.setAttribute("uv",new he(v,2))}};var ME=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,SE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,TE=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,EE=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,AE=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,RE="vec3 transformed = vec3( position );",CE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,LE=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,PE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,IE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,OE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,DE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,NE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,FE=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,BE=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,UE=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,zE=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,HE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,GE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,VE=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,kE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,WE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,jE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,qE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,XE="gl_FragColor = linearToOutputTexel( gl_FragColor );",YE=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,$E=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,ZE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,JE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,KE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,QE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,eA=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,tA=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,nA=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,iA=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,rA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,sA=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,oA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,aA=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,cA=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,lA=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,uA=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,hA=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,fA=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,dA=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,pA=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,mA=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,gA=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,yA=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,vA=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,xA=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,_A=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,bA=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,wA=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,MA=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,SA=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,TA=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,EA=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,AA=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,RA=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,CA=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,LA=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,PA=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,IA=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,OA=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,DA=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,NA=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,FA=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,BA=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,UA=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,zA=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,HA=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,GA=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,VA=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,kA=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,WA=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,jA=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,qA=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,XA=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,YA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,$A=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ZA=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,JA=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,KA=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,QA=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,eR=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,nR=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,iR=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,rR=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,sR=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,oR=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,aR=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,cR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,lR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,uR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,hR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,fR=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,dR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,pR=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,mR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,gR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,yR=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,vR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,xR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,_R=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,wR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,MR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,SR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,TR=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,ER=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AR=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,RR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,CR=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,LR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PR=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,IR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,OR=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,DR=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NR=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,BR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,UR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,zR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,HR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,GR=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,VR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,kR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const Ne={alphamap_fragment:ME,alphamap_pars_fragment:SE,alphatest_fragment:TE,aomap_fragment:EE,aomap_pars_fragment:AE,begin_vertex:RE,beginnormal_vertex:CE,bsdfs:LE,bumpmap_pars_fragment:PE,clipping_planes_fragment:IE,clipping_planes_pars_fragment:OE,clipping_planes_pars_vertex:DE,clipping_planes_vertex:NE,color_fragment:FE,color_pars_fragment:BE,color_pars_vertex:UE,color_vertex:zE,common:HE,cube_uv_reflection_fragment:GE,defaultnormal_vertex:VE,displacementmap_pars_vertex:kE,displacementmap_vertex:WE,emissivemap_fragment:jE,emissivemap_pars_fragment:qE,encodings_fragment:XE,encodings_pars_fragment:YE,envmap_fragment:$E,envmap_common_pars_fragment:ZE,envmap_pars_fragment:JE,envmap_pars_vertex:KE,envmap_physical_pars_fragment:lA,envmap_vertex:QE,fog_vertex:eA,fog_pars_vertex:tA,fog_fragment:nA,fog_pars_fragment:iA,gradientmap_pars_fragment:rA,lightmap_fragment:sA,lightmap_pars_fragment:oA,lights_lambert_vertex:aA,lights_pars_begin:cA,lights_toon_fragment:uA,lights_toon_pars_fragment:hA,lights_phong_fragment:fA,lights_phong_pars_fragment:dA,lights_physical_fragment:pA,lights_physical_pars_fragment:mA,lights_fragment_begin:gA,lights_fragment_maps:yA,lights_fragment_end:vA,logdepthbuf_fragment:xA,logdepthbuf_pars_fragment:_A,logdepthbuf_pars_vertex:bA,logdepthbuf_vertex:wA,map_fragment:MA,map_pars_fragment:SA,map_particle_fragment:TA,map_particle_pars_fragment:EA,metalnessmap_fragment:AA,metalnessmap_pars_fragment:RA,morphnormal_vertex:CA,morphtarget_pars_vertex:LA,morphtarget_vertex:PA,normal_fragment_begin:IA,normal_fragment_maps:OA,normalmap_pars_fragment:DA,clearcoat_normal_fragment_begin:NA,clearcoat_normal_fragment_maps:FA,clearcoat_pars_fragment:BA,packing:UA,premultiplied_alpha_fragment:zA,project_vertex:HA,dithering_fragment:GA,dithering_pars_fragment:VA,roughnessmap_fragment:kA,roughnessmap_pars_fragment:WA,shadowmap_pars_fragment:jA,shadowmap_pars_vertex:qA,shadowmap_vertex:XA,shadowmask_pars_fragment:YA,skinbase_vertex:$A,skinning_pars_vertex:ZA,skinning_vertex:JA,skinnormal_vertex:KA,specularmap_fragment:QA,specularmap_pars_fragment:eR,tonemapping_fragment:tR,tonemapping_pars_fragment:nR,transmissionmap_fragment:iR,transmissionmap_pars_fragment:rR,uv_pars_fragment:sR,uv_pars_vertex:oR,uv_vertex:aR,uv2_pars_fragment:cR,uv2_pars_vertex:lR,uv2_vertex:uR,worldpos_vertex:hR,background_frag:fR,background_vert:dR,cube_frag:pR,cube_vert:mR,depth_frag:gR,depth_vert:yR,distanceRGBA_frag:vR,distanceRGBA_vert:xR,equirect_frag:_R,equirect_vert:bR,linedashed_frag:wR,linedashed_vert:MR,meshbasic_frag:SR,meshbasic_vert:TR,meshlambert_frag:ER,meshlambert_vert:AR,meshmatcap_frag:RR,meshmatcap_vert:CR,meshtoon_frag:LR,meshtoon_vert:PR,meshphong_frag:IR,meshphong_vert:OR,meshphysical_frag:DR,meshphysical_vert:NR,normal_frag:FR,normal_vert:BR,points_frag:UR,points_vert:zR,shadow_frag:HR,shadow_vert:GR,sprite_frag:VR,sprite_vert:kR},de={common:{diffuse:{value:new me(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ht},uv2Transform:{value:new Ht},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ie(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new me(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new me(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Ht}},sprite:{diffuse:{value:new me(15658734)},opacity:{value:1},center:{value:new ie(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Ht}}},_n={basic:{uniforms:Mt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.fog]),vertexShader:Ne.meshbasic_vert,fragmentShader:Ne.meshbasic_frag},lambert:{uniforms:Mt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.fog,de.lights,{emissive:{value:new me(0)}}]),vertexShader:Ne.meshlambert_vert,fragmentShader:Ne.meshlambert_frag},phong:{uniforms:Mt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.fog,de.lights,{emissive:{value:new me(0)},specular:{value:new me(1118481)},shininess:{value:30}}]),vertexShader:Ne.meshphong_vert,fragmentShader:Ne.meshphong_frag},standard:{uniforms:Mt([de.common,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.roughnessmap,de.metalnessmap,de.fog,de.lights,{emissive:{value:new me(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag},toon:{uniforms:Mt([de.common,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.gradientmap,de.fog,de.lights,{emissive:{value:new me(0)}}]),vertexShader:Ne.meshtoon_vert,fragmentShader:Ne.meshtoon_frag},matcap:{uniforms:Mt([de.common,de.bumpmap,de.normalmap,de.displacementmap,de.fog,{matcap:{value:null}}]),vertexShader:Ne.meshmatcap_vert,fragmentShader:Ne.meshmatcap_frag},points:{uniforms:Mt([de.points,de.fog]),vertexShader:Ne.points_vert,fragmentShader:Ne.points_frag},dashed:{uniforms:Mt([de.common,de.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ne.linedashed_vert,fragmentShader:Ne.linedashed_frag},depth:{uniforms:Mt([de.common,de.displacementmap]),vertexShader:Ne.depth_vert,fragmentShader:Ne.depth_frag},normal:{uniforms:Mt([de.common,de.bumpmap,de.normalmap,de.displacementmap,{opacity:{value:1}}]),vertexShader:Ne.normal_vert,fragmentShader:Ne.normal_frag},sprite:{uniforms:Mt([de.sprite,de.fog]),vertexShader:Ne.sprite_vert,fragmentShader:Ne.sprite_frag},background:{uniforms:{uvTransform:{value:new Ht},t2D:{value:null}},vertexShader:Ne.background_vert,fragmentShader:Ne.background_frag},cube:{uniforms:Mt([de.envmap,{opacity:{value:1}}]),vertexShader:Ne.cube_vert,fragmentShader:Ne.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ne.equirect_vert,fragmentShader:Ne.equirect_frag},distanceRGBA:{uniforms:Mt([de.common,de.displacementmap,{referencePosition:{value:new A},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ne.distanceRGBA_vert,fragmentShader:Ne.distanceRGBA_frag},shadow:{uniforms:Mt([de.lights,de.fog,{color:{value:new me(0)},opacity:{value:1}}]),vertexShader:Ne.shadow_vert,fragmentShader:Ne.shadow_frag}};_n.physical={uniforms:Mt([_n.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ie(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new me(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag};function WR(e,t,n,i,r){const s=new me(0);let o=0,a,c,l=null,h=0,u=null;function f(p,y,v,g){let m=y.isScene===!0?y.background:null;m&&m.isTexture&&(m=t.get(m));const x=e.xr,_=x.getSession&&x.getSession();_&&_.environmentBlendMode==="additive"&&(m=null),m===null?d(s,o):m&&m.isColor&&(d(m,1),g=!0),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===Fs)?(c===void 0&&(c=new nt(new Sa(1,1,1),new kt({name:"BackgroundCubeMaterial",uniforms:Ms(_n.cube.uniforms),vertexShader:_n.cube.vertexShader,fragmentShader:_n.cube.fragmentShader,side:dt,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(T,b,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),m.isWebGLCubeRenderTarget&&(m=m.texture),c.material.uniforms.envMap.value=m,c.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,(l!==m||h!==m.version||u!==e.toneMapping)&&(c.material.needsUpdate=!0,l=m,h=m.version,u=e.toneMapping),p.unshift(c,c.geometry,c.material,0,0,null)):m&&m.isTexture&&(a===void 0&&(a=new nt(new Vl(2,2),new kt({name:"BackgroundMaterial",uniforms:Ms(_n.background.uniforms),vertexShader:_n.background.vertexShader,fragmentShader:_n.background.fragmentShader,side:Ns,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),(l!==m||h!==m.version||u!==e.toneMapping)&&(a.material.needsUpdate=!0,l=m,h=m.version,u=e.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function d(p,y){n.buffers.color.setClear(p.r,p.g,p.b,y,r)}return{getClearColor:function(){return s},setClearColor:function(p,y){s.set(p),o=y!==void 0?y:1,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(p){o=p,d(s,o)},render:f}}function jR(e,t,n,i){const r=e.getParameter(34921),s=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},c=y(null);let l=c;function h(k,O,N,W,J){let te=!1;if(o){const ae=p(W,N,O);l!==ae&&(l=ae,f(l.object)),te=v(W,J),te&&g(W,J)}else{const ae=O.wireframe===!0;(l.geometry!==W.id||l.program!==N.id||l.wireframe!==ae)&&(l.geometry=W.id,l.program=N.id,l.wireframe=ae,te=!0)}k.isInstancedMesh===!0&&(te=!0),J!==null&&n.update(J,34963),te&&(L(k,O,N,W),J!==null&&e.bindBuffer(34963,n.get(J).buffer))}function u(){return i.isWebGL2?e.createVertexArray():s.createVertexArrayOES()}function f(k){return i.isWebGL2?e.bindVertexArray(k):s.bindVertexArrayOES(k)}function d(k){return i.isWebGL2?e.deleteVertexArray(k):s.deleteVertexArrayOES(k)}function p(k,O,N){const W=N.wireframe===!0;let J=a[k.id];J===void 0&&(J={},a[k.id]=J);let te=J[O.id];te===void 0&&(te={},J[O.id]=te);let ae=te[W];return ae===void 0&&(ae=y(u()),te[W]=ae),ae}function y(k){const O=[],N=[],W=[];for(let J=0;J<r;J++)O[J]=0,N[J]=0,W[J]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:N,attributeDivisors:W,object:k,attributes:{},index:null}}function v(k,O){const N=l.attributes,W=k.attributes;if(Object.keys(N).length!==Object.keys(W).length)return!0;for(const J in W){const te=N[J],ae=W[J];if(te===void 0||te.attribute!==ae||te.data!==ae.data)return!0}return l.index!==O}function g(k,O){const N={},W=k.attributes;for(const J in W){const te=W[J],ae={};ae.attribute=te,te.data&&(ae.data=te.data),N[J]=ae}l.attributes=N,l.index=O}function m(){const k=l.newAttributes;for(let O=0,N=k.length;O<N;O++)k[O]=0}function x(k){_(k,0)}function _(k,O){const N=l.newAttributes,W=l.enabledAttributes,J=l.attributeDivisors;N[k]=1,W[k]===0&&(e.enableVertexAttribArray(k),W[k]=1),J[k]!==O&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](k,O),J[k]=O)}function T(){const k=l.newAttributes,O=l.enabledAttributes;for(let N=0,W=O.length;N<W;N++)O[N]!==k[N]&&(e.disableVertexAttribArray(N),O[N]=0)}function b(k,O,N,W,J,te){i.isWebGL2===!0&&(N===5124||N===5125)?e.vertexAttribIPointer(k,O,N,J,te):e.vertexAttribPointer(k,O,N,W,J,te)}function L(k,O,N,W){if(i.isWebGL2===!1&&(k.isInstancedMesh||W.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;m();const J=W.attributes,te=N.getAttributes(),ae=O.defaultAttributeValues;for(const ge in te){const le=te[ge];if(le>=0){const _e=J[ge];if(_e!==void 0){const Te=_e.normalized,He=_e.itemSize,ne=n.get(_e);if(ne===void 0)continue;const ke=ne.buffer,G=ne.type,re=ne.bytesPerElement;if(_e.isInterleavedBufferAttribute){const K=_e.data,oe=K.stride,ye=_e.offset;K&&K.isInstancedInterleavedBuffer?(_(le,K.meshPerAttribute),W._maxInstanceCount===void 0&&(W._maxInstanceCount=K.meshPerAttribute*K.count)):x(le),e.bindBuffer(34962,ke),b(le,He,G,Te,oe*re,ye*re)}else _e.isInstancedBufferAttribute?(_(le,_e.meshPerAttribute),W._maxInstanceCount===void 0&&(W._maxInstanceCount=_e.meshPerAttribute*_e.count)):x(le),e.bindBuffer(34962,ke),b(le,He,G,Te,0,0)}else if(ge==="instanceMatrix"){const Te=n.get(k.instanceMatrix);if(Te===void 0)continue;const He=Te.buffer,ne=Te.type;_(le+0,1),_(le+1,1),_(le+2,1),_(le+3,1),e.bindBuffer(34962,He),e.vertexAttribPointer(le+0,4,ne,!1,64,0),e.vertexAttribPointer(le+1,4,ne,!1,64,16),e.vertexAttribPointer(le+2,4,ne,!1,64,32),e.vertexAttribPointer(le+3,4,ne,!1,64,48)}else if(ge==="instanceColor"){const Te=n.get(k.instanceColor);if(Te===void 0)continue;const He=Te.buffer,ne=Te.type;_(le,1),e.bindBuffer(34962,He),e.vertexAttribPointer(le,3,ne,!1,12,0)}else if(ae!==void 0){const Te=ae[ge];if(Te!==void 0)switch(Te.length){case 2:e.vertexAttrib2fv(le,Te);break;case 3:e.vertexAttrib3fv(le,Te);break;case 4:e.vertexAttrib4fv(le,Te);break;default:e.vertexAttrib1fv(le,Te)}}}}T()}function D(){z();for(const k in a){const O=a[k];for(const N in O){const W=O[N];for(const J in W)d(W[J].object),delete W[J];delete O[N]}delete a[k]}}function I(k){if(a[k.id]===void 0)return;const O=a[k.id];for(const N in O){const W=O[N];for(const J in W)d(W[J].object),delete W[J];delete O[N]}delete a[k.id]}function Y(k){for(const O in a){const N=a[O];if(N[k.id]===void 0)continue;const W=N[k.id];for(const J in W)d(W[J].object),delete W[J];delete N[k.id]}}function z(){V(),l!==c&&(l=c,f(l.object))}function V(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:z,resetDefaultState:V,dispose:D,releaseStatesOfGeometry:I,releaseStatesOfProgram:Y,initAttributes:m,enableAttribute:x,disableUnusedAttributes:T}}function qR(e,t,n,i){const r=i.isWebGL2;let s;function o(l){s=l}function a(l,h){e.drawArrays(s,l,h),n.update(h,s,1)}function c(l,h,u){if(u===0)return;let f,d;if(r)f=e,d="drawArraysInstanced";else if(f=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,l,h,u),n.update(h,s,u)}this.setMode=o,this.render=a,this.renderInstances=c}function XR(e,t,n){let i;function r(){if(i!==void 0)return i;const b=t.get("EXT_texture_filter_anisotropic");return b!==null?i=e.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(b){if(b==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return b==="mediump"&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&e instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=n.logarithmicDepthBuffer===!0,h=e.getParameter(34930),u=e.getParameter(35660),f=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),y=e.getParameter(36347),v=e.getParameter(36348),g=e.getParameter(36349),m=u>0,x=o||!!t.get("OES_texture_float"),_=m&&x,T=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:y,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:m,floatFragmentTextures:x,floatVertexTextures:_,maxSamples:T}}function YR(e){const t=this;let n=null,i=0,r=!1,s=!1;const o=new Un,a=new Ht,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,d){const p=u.length!==0||f||i!==0||r;return r=f,n=h(u,d,0),i=u.length,p},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,l()},this.setState=function(u,f,d){const p=u.clippingPlanes,y=u.clipIntersection,v=u.clipShadows,g=e.get(u);if(!r||p===null||p.length===0||s&&!v)s?h(null):l();else{const m=s?0:i,x=m*4;let _=g.clippingState||null;c.value=_,_=h(p,f,x,d);for(let T=0;T!==x;++T)_[T]=n[T];g.clippingState=_,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=m}};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(u,f,d,p){const y=u!==null?u.length:0;let v=null;if(y!==0){if(v=c.value,p!==!0||v===null){const g=d+y*4,m=f.matrixWorldInverse;a.getNormalMatrix(m),(v===null||v.length<g)&&(v=new Float32Array(g));for(let x=0,_=d;x!==y;++x,_+=4)o.copy(u[x]).applyMatrix4(m,a),o.normal.toArray(v,_),v[_+3]=o.constant}c.value=v,c.needsUpdate=!0}return t.numPlanes=y,t.numIntersection=0,v}}function $R(e){let t=new WeakMap;function n(s,o){return o===Xc?s.mapping=xa:o===Yc&&(s.mapping=_a),s}function i(s){if(s&&s.isTexture){const o=s.mapping;if(o===Xc||o===Yc)if(t.has(s)){const a=t.get(s).texture;return n(a,s.mapping)}else{const a=s.image;if(a&&a.height>0){const c=e.getRenderList(),l=e.getRenderTarget(),h=e.getRenderState(),u=new Gi(a.height/2);return u.fromEquirectangularTexture(e,s),t.set(s,u),e.setRenderTarget(l),e.setRenderList(c),e.setRenderState(h),n(u.texture,s.mapping)}else return null}}return s}function r(){t=new WeakMap}return{get:i,dispose:r}}function ZR(e){const t={};return{has:function(n){if(t[n]!==void 0)return t[n]!==null;let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i!==null},get:function(n){return this.has(n)||console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]}}}function JR(e,t,n,i){const r=new WeakMap,s=new WeakMap;function o(u){const f=u.target,d=r.get(f);d.index!==null&&t.remove(d.index);for(const y in d.attributes)t.remove(d.attributes[y]);f.removeEventListener("dispose",o),r.delete(f);const p=s.get(d);p&&(t.remove(p),s.delete(d)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function a(u,f){let d=r.get(f);return d||(f.addEventListener("dispose",o),f.isBufferGeometry?d=f:f.isGeometry&&(f._bufferGeometry===void 0&&(f._bufferGeometry=new we().setFromObject(u)),d=f._bufferGeometry),r.set(f,d),n.memory.geometries++,d)}function c(u){const f=u.attributes;for(const p in f)t.update(f[p],34962);const d=u.morphAttributes;for(const p in d){const y=d[p];for(let v=0,g=y.length;v<g;v++)t.update(y[v],34962)}}function l(u){const f=[],d=u.index,p=u.attributes.position;let y=0;if(d!==null){const m=d.array;y=d.version;for(let x=0,_=m.length;x<_;x+=3){const T=m[x+0],b=m[x+1],L=m[x+2];f.push(T,b,b,L,L,T)}}else{const m=p.array;y=p.version;for(let x=0,_=m.length/3-1;x<_;x+=3){const T=x+0,b=x+1,L=x+2;f.push(T,b,b,L,L,T)}}const v=new(ix(f)>65535?Mr:wr)(f,1);v.version=y;const g=s.get(u);g&&t.remove(g),s.set(u,v)}function h(u){const f=s.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&l(u)}else l(u);return s.get(u)}return{get:a,update:c,getWireframeAttribute:h}}function KR(e,t,n,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,c;function l(f){a=f.type,c=f.bytesPerElement}function h(f,d){e.drawElements(s,d,a,f*c),n.update(d,s,1)}function u(f,d,p){if(p===0)return;let y,v;if(r)y=e,v="drawElementsInstanced";else if(y=t.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[v](s,d,a,f*c,p),n.update(d,s,p)}this.setMode=o,this.setIndex=l,this.render=h,this.renderInstances=u}function QR(e){const t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(n.calls++,o){case 4:n.triangles+=a*(s/3);break;case 1:n.lines+=a*(s/2);break;case 3:n.lines+=a*(s-1);break;case 2:n.lines+=a*s;break;case 0:n.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:r,update:i}}function eC(e,t){return e[0]-t[0]}function tC(e,t){return Math.abs(t[1])-Math.abs(e[1])}function nC(e){const t={},n=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,c){const l=s.morphTargetInfluences,h=l===void 0?0:l.length;let u=t[o.id];if(u===void 0){u=[];for(let v=0;v<h;v++)u[v]=[v,0];t[o.id]=u}for(let v=0;v<h;v++){const g=u[v];g[0]=v,g[1]=l[v]}u.sort(tC);for(let v=0;v<8;v++)v<h&&u[v][1]?(i[v][0]=u[v][0],i[v][1]=u[v][1]):(i[v][0]=Number.MAX_SAFE_INTEGER,i[v][1]=0);i.sort(eC);const f=a.morphTargets&&o.morphAttributes.position,d=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let v=0;v<8;v++){const g=i[v],m=g[0],x=g[1];m!==Number.MAX_SAFE_INTEGER&&x?(f&&o.getAttribute("morphTarget"+v)!==f[m]&&o.setAttribute("morphTarget"+v,f[m]),d&&o.getAttribute("morphNormal"+v)!==d[m]&&o.setAttribute("morphNormal"+v,d[m]),n[v]=x,p+=x):(f&&o.getAttribute("morphTarget"+v)!==void 0&&o.deleteAttribute("morphTarget"+v),d&&o.getAttribute("morphNormal"+v)!==void 0&&o.deleteAttribute("morphNormal"+v),n[v]=0)}const y=o.morphTargetsRelative?1:1-p;c.getUniforms().setValue(e,"morphTargetBaseInfluence",y),c.getUniforms().setValue(e,"morphTargetInfluences",n)}return{update:r}}function iC(e,t,n,i){let r=new WeakMap;function s(a){const c=i.render.frame,l=a.geometry,h=t.get(a,l);return r.get(h)!==c&&(l.isGeometry&&h.updateFromObject(a),t.update(h),r.set(h,c)),a.isInstancedMesh&&(n.update(a.instanceMatrix,34962),a.instanceColor!==null&&n.update(a.instanceColor,34962)),h}function o(){r=new WeakMap}return{update:s,dispose:o}}function Ts(e,t,n,i){Xe.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=pt,this.minFilter=pt,this.wrapR=Ut,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Ts.prototype=Object.create(Xe.prototype);Ts.prototype.constructor=Ts;Ts.prototype.isDataTexture2DArray=!0;function Es(e,t,n,i){Xe.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=pt,this.minFilter=pt,this.wrapR=Ut,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Es.prototype=Object.create(Xe.prototype);Es.prototype.constructor=Es;Es.prototype.isDataTexture3D=!0;const ax=new Xe,rC=new Ts,sC=new Es,cx=new kn,lm=[],um=[],hm=new Float32Array(16),fm=new Float32Array(9),dm=new Float32Array(4);function Gs(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let s=lm[r];if(s===void 0&&(s=new Float32Array(r),lm[r]=s),t!==0){i.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=n,e[o].toArray(s,a)}return s}function hn(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function rn(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function lx(e,t){let n=um[t];n===void 0&&(n=new Int32Array(t),um[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function oC(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function aC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(hn(n,t))return;e.uniform2fv(this.addr,t),rn(n,t)}}function cC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(hn(n,t))return;e.uniform3fv(this.addr,t),rn(n,t)}}function lC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(hn(n,t))return;e.uniform4fv(this.addr,t),rn(n,t)}}function uC(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(hn(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),rn(n,t)}else{if(hn(n,i))return;dm.set(i),e.uniformMatrix2fv(this.addr,!1,dm),rn(n,i)}}function hC(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(hn(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),rn(n,t)}else{if(hn(n,i))return;fm.set(i),e.uniformMatrix3fv(this.addr,!1,fm),rn(n,i)}}function fC(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(hn(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),rn(n,t)}else{if(hn(n,i))return;hm.set(i),e.uniformMatrix4fv(this.addr,!1,hm),rn(n,i)}}function dC(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||ax,r)}function pC(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||rC,r)}function mC(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||sC,r)}function gC(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||cx,r)}function yC(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function vC(e,t){const n=this.cache;hn(n,t)||(e.uniform2iv(this.addr,t),rn(n,t))}function xC(e,t){const n=this.cache;hn(n,t)||(e.uniform3iv(this.addr,t),rn(n,t))}function _C(e,t){const n=this.cache;hn(n,t)||(e.uniform4iv(this.addr,t),rn(n,t))}function bC(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function wC(e){switch(e){case 5126:return oC;case 35664:return aC;case 35665:return cC;case 35666:return lC;case 35674:return uC;case 35675:return hC;case 35676:return fC;case 5124:case 35670:return yC;case 35667:case 35671:return vC;case 35668:case 35672:return xC;case 35669:case 35673:return _C;case 5125:return bC;case 35678:case 36198:case 36298:case 36306:case 35682:return dC;case 35679:case 36299:case 36307:return mC;case 35680:case 36300:case 36308:case 36293:return gC;case 36289:case 36303:case 36311:case 36292:return pC}}function MC(e,t){e.uniform1fv(this.addr,t)}function SC(e,t){e.uniform1iv(this.addr,t)}function TC(e,t){e.uniform2iv(this.addr,t)}function EC(e,t){e.uniform3iv(this.addr,t)}function AC(e,t){e.uniform4iv(this.addr,t)}function RC(e,t){const n=Gs(t,this.size,2);e.uniform2fv(this.addr,n)}function CC(e,t){const n=Gs(t,this.size,3);e.uniform3fv(this.addr,n)}function LC(e,t){const n=Gs(t,this.size,4);e.uniform4fv(this.addr,n)}function PC(e,t){const n=Gs(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function IC(e,t){const n=Gs(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function OC(e,t){const n=Gs(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function DC(e,t,n){const i=t.length,r=lx(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTexture2D(t[s]||ax,r[s])}function NC(e,t,n){const i=t.length,r=lx(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTextureCube(t[s]||cx,r[s])}function FC(e){switch(e){case 5126:return MC;case 35664:return RC;case 35665:return CC;case 35666:return LC;case 35674:return PC;case 35675:return IC;case 35676:return OC;case 5124:case 35670:return SC;case 35667:case 35671:return TC;case 35668:case 35672:return EC;case 35669:case 35673:return AC;case 35678:case 36198:case 36298:case 36306:case 35682:return DC;case 35680:case 36300:case 36308:case 36293:return NC}}function BC(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=wC(t.type)}function ux(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=FC(t.type)}ux.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),rn(t,e)};function hx(e){this.id=e,this.seq=[],this.map={}}hx.prototype.setValue=function(e,t,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(e,t[o.id],n)}};const Hu=/([\w\d_]+)(\])?(\[|\.)?/g;function pm(e,t){e.seq.push(t),e.map[t.id]=t}function UC(e,t,n){const i=e.name,r=i.length;for(Hu.lastIndex=0;;){const s=Hu.exec(i),o=Hu.lastIndex;let a=s[1];const c=s[2]==="]",l=s[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===r){pm(n,l===void 0?new BC(a,e,t):new ux(a,e,t));break}else{let u=n.map[a];u===void 0&&(u=new hx(a),pm(n,u)),n=u}}}function Bi(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),s=e.getUniformLocation(t,r.name);UC(r,s,this)}}Bi.prototype.setValue=function(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)};Bi.prototype.setOptional=function(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)};Bi.upload=function(e,t,n,i){for(let r=0,s=t.length;r!==s;++r){const o=t[r],a=n[o.id];a.needsUpdate!==!1&&o.setValue(e,a.value,i)}};Bi.seqWithValue=function(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const s=e[i];s.id in t&&n.push(s)}return n};function mm(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let zC=0;function HC(e){const t=e.split(`
`);for(let n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function fx(e){switch(e){case Vt:return["Linear","( value )"];case wa:return["sRGB","( value )"];case Gl:return["RGBE","( value )"];case ad:return["RGBM","( value, 7.0 )"];case cd:return["RGBM","( value, 16.0 )"];case ld:return["RGBD","( value, 256.0 )"];case Hl:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case J0:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function gm(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const s=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+HC(s)}function Ks(e,t){const n=fx(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function GC(e,t){const n=fx(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function VC(e,t){let n;switch(t){case Zv:n="Linear";break;case Jv:n="Reinhard";break;case Kv:n="OptimizedCineon";break;case Qv:n="ACESFilmic";break;case e0:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function kC(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ao).join(`
`)}function WC(e){const t=[];for(const n in e){const i=e[n];i!==!1&&t.push("#define "+n+" "+i)}return t.join(`
`)}function jC(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const o=e.getActiveAttrib(t,r).name;n[o]=e.getAttribLocation(t,o)}return n}function ao(e){return e!==""}function ym(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function vm(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const qC=/^[ \t]*#include +<([\w\d./]+)>/gm;function Zh(e){return e.replace(qC,XC)}function XC(e,t){const n=Ne[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return Zh(n)}const YC=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,$C=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function xm(e){return e.replace($C,dx).replace(YC,ZC)}function ZC(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),dx(e,t,n,i)}function dx(e,t,n,i){let r="";for(let s=parseInt(t);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function _m(e){let t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function JC(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===td?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===Rv?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===ss&&(t="SHADOWMAP_TYPE_VSM"),t}function KC(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case xa:case _a:t="ENVMAP_TYPE_CUBE";break;case Fs:case ba:t="ENVMAP_TYPE_CUBE_UV";break}return t}function QC(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case _a:case ba:t="ENVMAP_MODE_REFRACTION";break}return t}function eL(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case va:t="ENVMAP_BLENDING_MULTIPLY";break;case Yv:t="ENVMAP_BLENDING_MIX";break;case $v:t="ENVMAP_BLENDING_ADD";break}return t}function tL(e,t,n,i){const r=e.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const c=JC(n),l=KC(n),h=QC(n),u=eL(n),f=e.gammaFactor>0?e.gammaFactor:1,d=n.isWebGL2?"":kC(n),p=WC(s),y=r.createProgram();let v,g,m=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(v=[p].filter(ao).join(`
`),v.length>0&&(v+=`
`),g=[d,p].filter(ao).join(`
`),g.length>0&&(g+=`
`)):(v=[_m(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ao).join(`
`),g=[d,_m(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==yr?"#define TONE_MAPPING":"",n.toneMapping!==yr?Ne.tonemapping_pars_fragment:"",n.toneMapping!==yr?VC("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Ne.encodings_pars_fragment,n.map?Ks("mapTexelToLinear",n.mapEncoding):"",n.matcap?Ks("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Ks("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Ks("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Ks("lightMapTexelToLinear",n.lightMapEncoding):"",GC("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(ao).join(`
`)),o=Zh(o),o=ym(o,n),o=vm(o,n),a=Zh(a),a=ym(a,n),a=vm(a,n),o=xm(o),a=xm(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(m=`#version 300 es
`,v=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,g=["#define varying in",n.glslVersion===Yh?"":"out highp vec4 pc_fragColor;",n.glslVersion===Yh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const x=m+v+o,_=m+g+a,T=mm(r,35633,x),b=mm(r,35632,_);if(r.attachShader(y,T),r.attachShader(y,b),n.index0AttributeName!==void 0?r.bindAttribLocation(y,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y),e.debug.checkShaderErrors){const I=r.getProgramInfoLog(y).trim(),Y=r.getShaderInfoLog(T).trim(),z=r.getShaderInfoLog(b).trim();let V=!0,k=!0;if(r.getProgramParameter(y,35714)===!1){V=!1;const O=gm(r,T,"vertex"),N=gm(r,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(y,35715),"gl.getProgramInfoLog",I,O,N)}else I!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",I):(Y===""||z==="")&&(k=!1);k&&(this.diagnostics={runnable:V,programLog:I,vertexShader:{log:Y,prefix:v},fragmentShader:{log:z,prefix:g}})}r.deleteShader(T),r.deleteShader(b);let L;this.getUniforms=function(){return L===void 0&&(L=new Bi(r,y)),L};let D;return this.getAttributes=function(){return D===void 0&&(D=jC(r,y)),D},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(y),this.program=void 0},this.name=n.shaderName,this.id=zC++,this.cacheKey=t,this.usedTimes=1,this.program=y,this.vertexShader=T,this.fragmentShader=b,this}function nL(e,t,n,i,r,s){const o=[],a=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let f=i.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function y(b){const D=b.skeleton.bones;if(l)return 1024;{const Y=Math.floor((h-20)/4),z=Math.min(Y,D.length);return z<D.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+D.length+" bones. This GPU supports "+z+"."),0):z}}function v(b){let L;return b?b.isTexture?L=b.encoding:b.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),L=b.texture.encoding):L=Vt,L}function g(b,L,D,I,Y){const z=I.fog,V=b.isMeshStandardMaterial?I.environment:null,k=t.get(b.envMap||V),O=d[b.type],N=Y.isSkinnedMesh?y(Y):0;b.precision!==null&&(f=i.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));let W,J;if(O){const ge=_n[O];W=ge.vertexShader,J=ge.fragmentShader}else W=b.vertexShader,J=b.fragmentShader;const te=e.getRenderTarget();return{isWebGL2:a,shaderID:O,shaderName:b.type,vertexShader:W,fragmentShader:J,defines:b.defines,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,instancing:Y.isInstancedMesh===!0,instancingColor:Y.isInstancedMesh===!0&&Y.instanceColor!==null,supportsVertexTextures:u,outputEncoding:te!==null?v(te.texture):e.outputEncoding,map:!!b.map,mapEncoding:v(b.map),matcap:!!b.matcap,matcapEncoding:v(b.matcap),envMap:!!k,envMapMode:k&&k.mapping,envMapEncoding:v(k),envMapCubeUV:!!k&&(k.mapping===Fs||k.mapping===ba),lightMap:!!b.lightMap,lightMapEncoding:v(b.lightMap),aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:v(b.emissiveMap),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===ex,tangentSpaceNormalMap:b.normalMapType===Or,clearcoatMap:!!b.clearcoatMap,clearcoatRoughnessMap:!!b.clearcoatRoughnessMap,clearcoatNormalMap:!!b.clearcoatNormalMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,alphaMap:!!b.alphaMap,gradientMap:!!b.gradientMap,sheen:!!b.sheen,transmissionMap:!!b.transmissionMap,combine:b.combine,vertexTangents:b.normalMap&&b.vertexTangents,vertexColors:b.vertexColors,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.displacementMap||!!b.transmissionMap,uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.transmissionMap)&&!!b.displacementMap,fog:!!z,useFog:b.fog,fogExp2:z&&z.isFogExp2,flatShading:b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:c,skinning:b.skinning&&N>0,maxBones:N,useVertexTexture:l,morphTargets:b.morphTargets,morphNormals:b.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:b.dithering,shadowMapEnabled:e.shadowMap.enabled&&D.length>0,shadowMapType:e.shadowMap.type,toneMapping:b.toneMapped?e.toneMapping:yr,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,alphaTest:b.alphaTest,doubleSided:b.side===ya,flipSided:b.side===dt,depthPacking:b.depthPacking!==void 0?b.depthPacking:!1,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function m(b){const L=[];if(b.shaderID?L.push(b.shaderID):(L.push(b.fragmentShader),L.push(b.vertexShader)),b.defines!==void 0)for(const D in b.defines)L.push(D),L.push(b.defines[D]);if(b.isRawShaderMaterial===!1){for(let D=0;D<p.length;D++)L.push(b[p[D]]);L.push(e.outputEncoding),L.push(e.gammaFactor)}return L.push(b.customProgramCacheKey),L.join()}function x(b){const L=d[b.type];let D;if(L){const I=_n[L];D=sx.clone(I.uniforms)}else D=b.uniforms;return D}function _(b,L){let D;for(let I=0,Y=o.length;I<Y;I++){const z=o[I];if(z.cacheKey===L){D=z,++D.usedTimes;break}}return D===void 0&&(D=new tL(e,L,b,r),o.push(D)),D}function T(b){if(--b.usedTimes===0){const L=o.indexOf(b);o[L]=o[o.length-1],o.pop(),b.destroy()}}return{getParameters:g,getProgramCacheKey:m,getUniforms:x,acquireProgram:_,releaseProgram:T,programs:o}}function iL(){let e=new WeakMap;function t(s){let o=e.get(s);return o===void 0&&(o={},e.set(s,o)),o}function n(s){e.delete(s)}function i(s,o,a){e.get(s)[o]=a}function r(){e=new WeakMap}return{get:t,remove:n,update:i,dispose:r}}function rL(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function sL(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function bm(e){const t=[];let n=0;const i=[],r=[],s={id:-1};function o(){n=0,i.length=0,r.length=0}function a(f,d,p,y,v,g){let m=t[n];const x=e.get(p);return m===void 0?(m={id:f.id,object:f,geometry:d,material:p,program:x.program||s,groupOrder:y,renderOrder:f.renderOrder,z:v,group:g},t[n]=m):(m.id=f.id,m.object=f,m.geometry=d,m.material=p,m.program=x.program||s,m.groupOrder=y,m.renderOrder=f.renderOrder,m.z=v,m.group=g),n++,m}function c(f,d,p,y,v,g){const m=a(f,d,p,y,v,g);(p.transparent===!0?r:i).push(m)}function l(f,d,p,y,v,g){const m=a(f,d,p,y,v,g);(p.transparent===!0?r:i).unshift(m)}function h(f,d){i.length>1&&i.sort(f||rL),r.length>1&&r.sort(d||sL)}function u(){for(let f=n,d=t.length;f<d;f++){const p=t[f];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.program=null,p.group=null}}return{opaque:i,transparent:r,init:o,push:c,unshift:l,finish:u,sort:h}}function oL(e){let t=new WeakMap;function n(r,s){const o=t.get(r);let a;return o===void 0?(a=new bm(e),t.set(r,new WeakMap),t.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new bm(e),o.set(s,a))),a}function i(){t=new WeakMap}return{get:n,dispose:i}}function aL(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new A,color:new me};break;case"SpotLight":n={position:new A,direction:new A,color:new me,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new A,color:new me,distance:0,decay:0};break;case"HemisphereLight":n={direction:new A,skyColor:new me,groundColor:new me};break;case"RectAreaLight":n={color:new me,position:new A,halfWidth:new A,halfHeight:new A};break}return e[t.id]=n,n}}}function cL(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie,shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}let lL=0;function uL(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function hL(){const e=new aL,t=cL(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)n.probe.push(new A);const i=new A,r=new Ie,s=new Ie;function o(a,c,l){let h=0,u=0,f=0;for(let L=0;L<9;L++)n.probe[L].set(0,0,0);let d=0,p=0,y=0,v=0,g=0,m=0,x=0,_=0;const T=l.matrixWorldInverse;a.sort(uL);for(let L=0,D=a.length;L<D;L++){const I=a[L],Y=I.color,z=I.intensity,V=I.distance,k=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)h+=Y.r*z,u+=Y.g*z,f+=Y.b*z;else if(I.isLightProbe)for(let O=0;O<9;O++)n.probe[O].addScaledVector(I.sh.coefficients[O],z);else if(I.isDirectionalLight){const O=e.get(I);if(O.color.copy(I.color).multiplyScalar(I.intensity),O.direction.setFromMatrixPosition(I.matrixWorld),i.setFromMatrixPosition(I.target.matrixWorld),O.direction.sub(i),O.direction.transformDirection(T),I.castShadow){const N=I.shadow,W=t.get(I);W.shadowBias=N.bias,W.shadowNormalBias=N.normalBias,W.shadowRadius=N.radius,W.shadowMapSize=N.mapSize,n.directionalShadow[d]=W,n.directionalShadowMap[d]=k,n.directionalShadowMatrix[d]=I.shadow.matrix,m++}n.directional[d]=O,d++}else if(I.isSpotLight){const O=e.get(I);if(O.position.setFromMatrixPosition(I.matrixWorld),O.position.applyMatrix4(T),O.color.copy(Y).multiplyScalar(z),O.distance=V,O.direction.setFromMatrixPosition(I.matrixWorld),i.setFromMatrixPosition(I.target.matrixWorld),O.direction.sub(i),O.direction.transformDirection(T),O.coneCos=Math.cos(I.angle),O.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),O.decay=I.decay,I.castShadow){const N=I.shadow,W=t.get(I);W.shadowBias=N.bias,W.shadowNormalBias=N.normalBias,W.shadowRadius=N.radius,W.shadowMapSize=N.mapSize,n.spotShadow[y]=W,n.spotShadowMap[y]=k,n.spotShadowMatrix[y]=I.shadow.matrix,_++}n.spot[y]=O,y++}else if(I.isRectAreaLight){const O=e.get(I);O.color.copy(Y).multiplyScalar(z),O.position.setFromMatrixPosition(I.matrixWorld),O.position.applyMatrix4(T),s.identity(),r.copy(I.matrixWorld),r.premultiply(T),s.extractRotation(r),O.halfWidth.set(I.width*.5,0,0),O.halfHeight.set(0,I.height*.5,0),O.halfWidth.applyMatrix4(s),O.halfHeight.applyMatrix4(s),n.rectArea[v]=O,v++}else if(I.isPointLight){const O=e.get(I);if(O.position.setFromMatrixPosition(I.matrixWorld),O.position.applyMatrix4(T),O.color.copy(I.color).multiplyScalar(I.intensity),O.distance=I.distance,O.decay=I.decay,I.castShadow){const N=I.shadow,W=t.get(I);W.shadowBias=N.bias,W.shadowNormalBias=N.normalBias,W.shadowRadius=N.radius,W.shadowMapSize=N.mapSize,W.shadowCameraNear=N.camera.near,W.shadowCameraFar=N.camera.far,n.pointShadow[p]=W,n.pointShadowMap[p]=k,n.pointShadowMatrix[p]=I.shadow.matrix,x++}n.point[p]=O,p++}else if(I.isHemisphereLight){const O=e.get(I);O.direction.setFromMatrixPosition(I.matrixWorld),O.direction.transformDirection(T),O.direction.normalize(),O.skyColor.copy(I.color).multiplyScalar(z),O.groundColor.copy(I.groundColor).multiplyScalar(z),n.hemi[g]=O,g++}}v>0&&(n.rectAreaLTC1=de.LTC_1,n.rectAreaLTC2=de.LTC_2),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=f;const b=n.hash;(b.directionalLength!==d||b.pointLength!==p||b.spotLength!==y||b.rectAreaLength!==v||b.hemiLength!==g||b.numDirectionalShadows!==m||b.numPointShadows!==x||b.numSpotShadows!==_)&&(n.directional.length=d,n.spot.length=y,n.rectArea.length=v,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=m,n.directionalShadowMap.length=m,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=_,n.spotShadowMap.length=_,n.directionalShadowMatrix.length=m,n.pointShadowMatrix.length=x,n.spotShadowMatrix.length=_,b.directionalLength=d,b.pointLength=p,b.spotLength=y,b.rectAreaLength=v,b.hemiLength=g,b.numDirectionalShadows=m,b.numPointShadows=x,b.numSpotShadows=_,n.version=lL++)}return{setup:o,state:n}}function wm(){const e=new hL,t=[],n=[];function i(){t.length=0,n.length=0}function r(c){t.push(c)}function s(c){n.push(c)}function o(c){e.setup(t,n,c)}return{init:i,state:{lightsArray:t,shadowsArray:n,lights:e},setupLights:o,pushLight:r,pushShadow:s}}function fL(){let e=new WeakMap;function t(i,r){let s;return e.has(i)===!1?(s=new wm,e.set(i,new WeakMap),e.get(i).set(r,s)):e.get(i).has(r)===!1?(s=new wm,e.get(i).set(r,s)):s=e.get(i).get(r),s}function n(){e=new WeakMap}return{get:t,dispose:n}}function Vi(e){Se.call(this),this.type="MeshDepthMaterial",this.depthPacking=K0,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}Vi.prototype=Object.create(Se.prototype);Vi.prototype.constructor=Vi;Vi.prototype.isMeshDepthMaterial=!0;Vi.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function ki(e){Se.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new A,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}ki.prototype=Object.create(Se.prototype);ki.prototype.constructor=ki;ki.prototype.isMeshDistanceMaterial=!0;ki.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var dL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,pL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function px(e,t,n){let i=new Ta;const r=new ie,s=new ie,o=new je,a=[],c=[],l={},h={0:dt,1:Ns,2:ya},u=new kt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new ie},radius:{value:4}},vertexShader:pL,fragmentShader:dL}),f=u.clone();f.defines.HORIZONAL_PASS=1;const d=new we;d.setAttribute("position",new Me(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new nt(d,u),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=td,this.render=function(T,b,L){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||T.length===0)return;const D=e.getRenderTarget(),I=e.getActiveCubeFace(),Y=e.getActiveMipmapLevel(),z=e.state;z.setBlending(fi),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let V=0,k=T.length;V<k;V++){const O=T[V],N=O.shadow;if(N===void 0){console.warn("THREE.WebGLShadowMap:",O,"has no shadow.");continue}if(N.autoUpdate===!1&&N.needsUpdate===!1)continue;r.copy(N.mapSize);const W=N.getFrameExtents();if(r.multiply(W),s.copy(N.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/W.x),r.x=s.x*W.x,N.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/W.y),r.y=s.y*W.y,N.mapSize.y=s.y)),N.map===null&&!N.isPointLightShadow&&this.type===ss){const te={minFilter:vt,magFilter:vt,format:en};N.map=new tn(r.x,r.y,te),N.map.texture.name=O.name+".shadowMap",N.mapPass=new tn(r.x,r.y,te),N.camera.updateProjectionMatrix()}if(N.map===null){const te={minFilter:pt,magFilter:pt,format:en};N.map=new tn(r.x,r.y,te),N.map.texture.name=O.name+".shadowMap",N.camera.updateProjectionMatrix()}e.setRenderTarget(N.map),e.clear();const J=N.getViewportCount();for(let te=0;te<J;te++){const ae=N.getViewport(te);o.set(s.x*ae.x,s.y*ae.y,s.x*ae.z,s.y*ae.w),z.viewport(o),N.updateMatrices(O,te),i=N.getFrustum(),_(b,L,N.camera,O,this.type)}!N.isPointLightShadow&&this.type===ss&&v(N,L),N.needsUpdate=!1}y.needsUpdate=!1,e.setRenderTarget(D,I,Y)};function v(T,b){const L=t.update(p);u.uniforms.shadow_pass.value=T.map.texture,u.uniforms.resolution.value=T.mapSize,u.uniforms.radius.value=T.radius,e.setRenderTarget(T.mapPass),e.clear(),e.renderBufferDirect(b,null,L,u,p,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,e.setRenderTarget(T.map),e.clear(),e.renderBufferDirect(b,null,L,f,p,null)}function g(T,b,L){const D=T<<0|b<<1|L<<2;let I=a[D];return I===void 0&&(I=new Vi({depthPacking:Q0,morphTargets:T,skinning:b}),a[D]=I),I}function m(T,b,L){const D=T<<0|b<<1|L<<2;let I=c[D];return I===void 0&&(I=new ki({morphTargets:T,skinning:b}),c[D]=I),I}function x(T,b,L,D,I,Y,z){let V=null,k=g,O=T.customDepthMaterial;if(D.isPointLight===!0&&(k=m,O=T.customDistanceMaterial),O===void 0){let N=!1;L.morphTargets===!0&&(N=b.morphAttributes&&b.morphAttributes.position&&b.morphAttributes.position.length>0);let W=!1;T.isSkinnedMesh===!0&&(L.skinning===!0?W=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",T));const J=T.isInstancedMesh===!0;V=k(N,W,J)}else V=O;if(e.localClippingEnabled&&L.clipShadows===!0&&L.clippingPlanes.length!==0){const N=V.uuid,W=L.uuid;let J=l[N];J===void 0&&(J={},l[N]=J);let te=J[W];te===void 0&&(te=V.clone(),J[W]=te),V=te}return V.visible=L.visible,V.wireframe=L.wireframe,z===ss?V.side=L.shadowSide!==null?L.shadowSide:L.side:V.side=L.shadowSide!==null?L.shadowSide:h[L.side],V.clipShadows=L.clipShadows,V.clippingPlanes=L.clippingPlanes,V.clipIntersection=L.clipIntersection,V.wireframeLinewidth=L.wireframeLinewidth,V.linewidth=L.linewidth,D.isPointLight===!0&&V.isMeshDistanceMaterial===!0&&(V.referencePosition.setFromMatrixPosition(D.matrixWorld),V.nearDistance=I,V.farDistance=Y),V}function _(T,b,L,D,I){if(T.visible===!1)return;if(T.layers.test(b.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&I===ss)&&(!T.frustumCulled||i.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,T.matrixWorld);const V=t.update(T),k=T.material;if(Array.isArray(k)){const O=V.groups;for(let N=0,W=O.length;N<W;N++){const J=O[N],te=k[J.materialIndex];if(te&&te.visible){const ae=x(T,V,te,D,L.near,L.far,I);e.renderBufferDirect(L,null,V,ae,T,J)}}}else if(k.visible){const O=x(T,V,k,D,L.near,L.far,I);e.renderBufferDirect(L,null,V,O,T,null)}}const z=T.children;for(let V=0,k=z.length;V<k;V++)_(z[V],b,L,D,I)}}function mL(e,t,n){const i=n.isWebGL2;function r(){let R=!1;const q=new je;let j=null;const Q=new je(0,0,0,0);return{setMask:function(Z){j!==Z&&!R&&(e.colorMask(Z,Z,Z,Z),j=Z)},setLocked:function(Z){R=Z},setClear:function(Z,se,ce,pe,ue){ue===!0&&(Z*=pe,se*=pe,ce*=pe),q.set(Z,se,ce,pe),Q.equals(q)===!1&&(e.clearColor(Z,se,ce,pe),Q.copy(q))},reset:function(){R=!1,j=null,Q.set(-1,0,0,0)}}}function s(){let R=!1,q=null,j=null,Q=null;return{setTest:function(Z){Z?ge(2929):le(2929)},setMask:function(Z){q!==Z&&!R&&(e.depthMask(Z),q=Z)},setFunc:function(Z){if(j!==Z){if(Z)switch(Z){case Gv:e.depthFunc(512);break;case Vv:e.depthFunc(519);break;case kv:e.depthFunc(513);break;case qc:e.depthFunc(515);break;case Wv:e.depthFunc(514);break;case jv:e.depthFunc(518);break;case qv:e.depthFunc(516);break;case Xv:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);j=Z}},setLocked:function(Z){R=Z},setClear:function(Z){Q!==Z&&(e.clearDepth(Z),Q=Z)},reset:function(){R=!1,q=null,j=null,Q=null}}}function o(){let R=!1,q=null,j=null,Q=null,Z=null,se=null,ce=null,pe=null,ue=null;return{setTest:function(ve){R||(ve?ge(2960):le(2960))},setMask:function(ve){q!==ve&&!R&&(e.stencilMask(ve),q=ve)},setFunc:function(ve,Ue,et){(j!==ve||Q!==Ue||Z!==et)&&(e.stencilFunc(ve,Ue,et),j=ve,Q=Ue,Z=et)},setOp:function(ve,Ue,et){(se!==ve||ce!==Ue||pe!==et)&&(e.stencilOp(ve,Ue,et),se=ve,ce=Ue,pe=et)},setLocked:function(ve){R=ve},setClear:function(ve){ue!==ve&&(e.clearStencil(ve),ue=ve)},reset:function(){R=!1,q=null,j=null,Q=null,Z=null,se=null,ce=null,pe=null,ue=null}}}const a=new r,c=new s,l=new o;let h={},u=null,f=null,d=null,p=null,y=null,v=null,g=null,m=null,x=null,_=!1,T=null,b=null,L=null,D=null,I=null;const Y=e.getParameter(35661);let z=!1,V=0;const k=e.getParameter(7938);k.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL\ ([0-9])/.exec(k)[1]),z=V>=1):k.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(k)[1]),z=V>=2);let O=null,N={};const W=new je,J=new je;function te(R,q,j){const Q=new Uint8Array(4),Z=e.createTexture();e.bindTexture(R,Z),e.texParameteri(R,10241,9728),e.texParameteri(R,10240,9728);for(let se=0;se<j;se++)e.texImage2D(q+se,0,6408,1,1,0,6408,5121,Q);return Z}const ae={};ae[3553]=te(3553,3553,1),ae[34067]=te(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),ge(2929),c.setFunc(qc),G(!1),re(Ih),ge(2884),ne(fi);function ge(R){h[R]!==!0&&(e.enable(R),h[R]=!0)}function le(R){h[R]!==!1&&(e.disable(R),h[R]=!1)}function _e(R){return u!==R?(e.useProgram(R),u=R,!0):!1}const Te={[fr]:32774,[Lv]:32778,[Pv]:32779};if(i)Te[Fh]=32775,Te[Bh]=32776;else{const R=t.get("EXT_blend_minmax");R!==null&&(Te[Fh]=R.MIN_EXT,Te[Bh]=R.MAX_EXT)}const He={[Iv]:0,[Ov]:1,[Dv]:768,[id]:770,[Hv]:776,[Uv]:774,[Fv]:772,[Nv]:769,[rd]:771,[zv]:775,[Bv]:773};function ne(R,q,j,Q,Z,se,ce,pe){if(R===fi){f&&(le(3042),f=!1);return}if(f||(ge(3042),f=!0),R!==Cv){if(R!==d||pe!==_){if((p!==fr||g!==fr)&&(e.blendEquation(32774),p=fr,g=fr),pe)switch(R){case ms:e.blendFuncSeparate(1,771,1,771);break;case Oh:e.blendFunc(1,1);break;case Dh:e.blendFuncSeparate(0,0,769,771);break;case Nh:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}else switch(R){case ms:e.blendFuncSeparate(770,771,1,771);break;case Oh:e.blendFunc(770,1);break;case Dh:e.blendFunc(0,769);break;case Nh:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}y=null,v=null,m=null,x=null,d=R,_=pe}return}Z=Z||q,se=se||j,ce=ce||Q,(q!==p||Z!==g)&&(e.blendEquationSeparate(Te[q],Te[Z]),p=q,g=Z),(j!==y||Q!==v||se!==m||ce!==x)&&(e.blendFuncSeparate(He[j],He[Q],He[se],He[ce]),y=j,v=Q,m=se,x=ce),d=R,_=null}function ke(R,q){R.side===ya?le(2884):ge(2884);let j=R.side===dt;q&&(j=!j),G(j),R.blending===ms&&R.transparent===!1?ne(fi):ne(R.blending,R.blendEquation,R.blendSrc,R.blendDst,R.blendEquationAlpha,R.blendSrcAlpha,R.blendDstAlpha,R.premultipliedAlpha),c.setFunc(R.depthFunc),c.setTest(R.depthTest),c.setMask(R.depthWrite),a.setMask(R.colorWrite);const Q=R.stencilWrite;l.setTest(Q),Q&&(l.setMask(R.stencilWriteMask),l.setFunc(R.stencilFunc,R.stencilRef,R.stencilFuncMask),l.setOp(R.stencilFail,R.stencilZFail,R.stencilZPass)),oe(R.polygonOffset,R.polygonOffsetFactor,R.polygonOffsetUnits)}function G(R){T!==R&&(R?e.frontFace(2304):e.frontFace(2305),T=R)}function re(R){R!==Ev?(ge(2884),R!==b&&(R===Ih?e.cullFace(1029):R===Av?e.cullFace(1028):e.cullFace(1032))):le(2884),b=R}function K(R){R!==L&&(z&&e.lineWidth(R),L=R)}function oe(R,q,j){R?(ge(32823),(D!==q||I!==j)&&(e.polygonOffset(q,j),D=q,I=j)):le(32823)}function ye(R){R?ge(3089):le(3089)}function S(R){R===void 0&&(R=33984+Y-1),O!==R&&(e.activeTexture(R),O=R)}function E(R,q){O===null&&S();let j=N[O];j===void 0&&(j={type:void 0,texture:void 0},N[O]=j),(j.type!==R||j.texture!==q)&&(e.bindTexture(R,q||ae[R]),j.type=R,j.texture=q)}function P(){const R=N[O];R!==void 0&&R.type!==void 0&&(e.bindTexture(R.type,null),R.type=void 0,R.texture=void 0)}function H(){try{e.compressedTexImage2D.apply(e,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function B(){try{e.texImage2D.apply(e,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function w(){try{e.texImage3D.apply(e,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function M(R){W.equals(R)===!1&&(e.scissor(R.x,R.y,R.z,R.w),W.copy(R))}function U(R){J.equals(R)===!1&&(e.viewport(R.x,R.y,R.z,R.w),J.copy(R))}function F(){h={},O=null,N={},u=null,d=null,T=null,b=null,a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:ge,disable:le,useProgram:_e,setBlending:ne,setMaterial:ke,setFlipSided:G,setCullFace:re,setLineWidth:K,setPolygonOffset:oe,setScissorTest:ye,activeTexture:S,bindTexture:E,unbindTexture:P,compressedTexImage2D:H,texImage2D:B,texImage3D:w,scissor:M,viewport:U,reset:F}}function gL(e,t,n,i,r,s,o){const a=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,f=new WeakMap;let d,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(w,M){return p?new OffscreenCanvas(w,M):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(w,M,U,F){let R=1;if((w.width>F||w.height>F)&&(R=F/Math.max(w.width,w.height)),R<1||M===!0)if(typeof HTMLImageElement<"u"&&w instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&w instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&w instanceof ImageBitmap){const q=M?Ee.floorPowerOfTwo:Math.floor,j=q(R*w.width),Q=q(R*w.height);d===void 0&&(d=y(j,Q));const Z=U?y(j,Q):d;return Z.width=j,Z.height=Q,Z.getContext("2d").drawImage(w,0,0,j,Q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+w.width+"x"+w.height+") to ("+j+"x"+Q+")."),Z}else return"data"in w&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+w.width+"x"+w.height+")."),w;return w}function g(w){return Ee.isPowerOfTwo(w.width)&&Ee.isPowerOfTwo(w.height)}function m(w){return a?!1:w.wrapS!==Ut||w.wrapT!==Ut||w.minFilter!==pt&&w.minFilter!==vt}function x(w,M){return w.generateMipmaps&&M&&w.minFilter!==pt&&w.minFilter!==vt}function _(w,M,U,F){e.generateMipmap(w);const R=i.get(M);R.__maxMipLevel=Math.log(Math.max(U,F))*Math.LOG2E}function T(w,M,U){if(a===!1)return M;if(w!==null){if(e[w]!==void 0)return e[w];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+w+"'")}let F=M;return M===6403&&(U===5126&&(F=33326),U===5131&&(F=33325),U===5121&&(F=33321)),M===6407&&(U===5126&&(F=34837),U===5131&&(F=34843),U===5121&&(F=32849)),M===6408&&(U===5126&&(F=34836),U===5131&&(F=34842),U===5121&&(F=32856)),(F===33325||F===33326||F===34842||F===34836)&&t.get("EXT_color_buffer_float"),F}function b(w){return w===pt||w===$c||w===Zc?9728:9729}function L(w){const M=w.target;M.removeEventListener("dispose",L),I(M),M.isVideoTexture&&f.delete(M),o.memory.textures--}function D(w){const M=w.target;M.removeEventListener("dispose",D),Y(M),o.memory.textures--}function I(w){const M=i.get(w);M.__webglInit!==void 0&&(e.deleteTexture(M.__webglTexture),i.remove(w))}function Y(w){const M=i.get(w),U=i.get(w.texture);if(w){if(U.__webglTexture!==void 0&&e.deleteTexture(U.__webglTexture),w.depthTexture&&w.depthTexture.dispose(),w.isWebGLCubeRenderTarget)for(let F=0;F<6;F++)e.deleteFramebuffer(M.__webglFramebuffer[F]),M.__webglDepthbuffer&&e.deleteRenderbuffer(M.__webglDepthbuffer[F]);else e.deleteFramebuffer(M.__webglFramebuffer),M.__webglDepthbuffer&&e.deleteRenderbuffer(M.__webglDepthbuffer),M.__webglMultisampledFramebuffer&&e.deleteFramebuffer(M.__webglMultisampledFramebuffer),M.__webglColorRenderbuffer&&e.deleteRenderbuffer(M.__webglColorRenderbuffer),M.__webglDepthRenderbuffer&&e.deleteRenderbuffer(M.__webglDepthRenderbuffer);i.remove(w.texture),i.remove(w)}}let z=0;function V(){z=0}function k(){const w=z;return w>=c&&console.warn("THREE.WebGLTextures: Trying to use "+w+" texture units while this GPU supports only "+c),z+=1,w}function O(w,M){const U=i.get(w);if(w.isVideoTexture&&S(w),w.version>0&&U.__version!==w.version){const F=w.image;if(F===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(F.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{_e(U,w,M);return}}n.activeTexture(33984+M),n.bindTexture(3553,U.__webglTexture)}function N(w,M){const U=i.get(w);if(w.version>0&&U.__version!==w.version){_e(U,w,M);return}n.activeTexture(33984+M),n.bindTexture(35866,U.__webglTexture)}function W(w,M){const U=i.get(w);if(w.version>0&&U.__version!==w.version){_e(U,w,M);return}n.activeTexture(33984+M),n.bindTexture(32879,U.__webglTexture)}function J(w,M){const U=i.get(w);if(w.version>0&&U.__version!==w.version){Te(U,w,M);return}n.activeTexture(33984+M),n.bindTexture(34067,U.__webglTexture)}const te={[Ho]:10497,[Ut]:33071,[Go]:33648},ae={[pt]:9728,[$c]:9984,[Zc]:9986,[vt]:9729,[sd]:9985,[Bs]:9987};function ge(w,M,U){U?(e.texParameteri(w,10242,te[M.wrapS]),e.texParameteri(w,10243,te[M.wrapT]),(w===32879||w===35866)&&e.texParameteri(w,32882,te[M.wrapR]),e.texParameteri(w,10240,ae[M.magFilter]),e.texParameteri(w,10241,ae[M.minFilter])):(e.texParameteri(w,10242,33071),e.texParameteri(w,10243,33071),(w===32879||w===35866)&&e.texParameteri(w,32882,33071),(M.wrapS!==Ut||M.wrapT!==Ut)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(w,10240,b(M.magFilter)),e.texParameteri(w,10241,b(M.minFilter)),M.minFilter!==pt&&M.minFilter!==vt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const F=t.get("EXT_texture_filter_anisotropic");if(F){if(M.type===ai&&t.get("OES_texture_float_linear")===null||M.type===ko&&(a||t.get("OES_texture_half_float_linear"))===null)return;(M.anisotropy>1||i.get(M).__currentAnisotropy)&&(e.texParameterf(w,F.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,r.getMaxAnisotropy())),i.get(M).__currentAnisotropy=M.anisotropy)}}function le(w,M){w.__webglInit===void 0&&(w.__webglInit=!0,M.addEventListener("dispose",L),w.__webglTexture=e.createTexture(),o.memory.textures++)}function _e(w,M,U){let F=3553;M.isDataTexture2DArray&&(F=35866),M.isDataTexture3D&&(F=32879),le(w,M),n.activeTexture(33984+U),n.bindTexture(F,w.__webglTexture),e.pixelStorei(37440,M.flipY),e.pixelStorei(37441,M.premultiplyAlpha),e.pixelStorei(3317,M.unpackAlignment);const R=m(M)&&g(M.image)===!1,q=v(M.image,R,!1,h),j=g(q)||a,Q=s.convert(M.format);let Z=s.convert(M.type),se=T(M.internalFormat,Q,Z);ge(F,M,j);let ce;const pe=M.mipmaps;if(M.isDepthTexture)se=6402,a?M.type===ai?se=36012:M.type===So?se=33190:M.type===gs?se=35056:se=33189:M.type===ai&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),M.format===vr&&se===6402&&M.type!==Vo&&M.type!==So&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),M.type=Vo,Z=s.convert(M.type)),M.format===ws&&se===6402&&(se=34041,M.type!==gs&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),M.type=gs,Z=s.convert(M.type))),n.texImage2D(3553,0,se,q.width,q.height,0,Q,Z,null);else if(M.isDataTexture)if(pe.length>0&&j){for(let ue=0,ve=pe.length;ue<ve;ue++)ce=pe[ue],n.texImage2D(3553,ue,se,ce.width,ce.height,0,Q,Z,ce.data);M.generateMipmaps=!1,w.__maxMipLevel=pe.length-1}else n.texImage2D(3553,0,se,q.width,q.height,0,Q,Z,q.data),w.__maxMipLevel=0;else if(M.isCompressedTexture){for(let ue=0,ve=pe.length;ue<ve;ue++)ce=pe[ue],M.format!==en&&M.format!==Fi?Q!==null?n.compressedTexImage2D(3553,ue,se,ce.width,ce.height,0,ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,ue,se,ce.width,ce.height,0,Q,Z,ce.data);w.__maxMipLevel=pe.length-1}else if(M.isDataTexture2DArray)n.texImage3D(35866,0,se,q.width,q.height,q.depth,0,Q,Z,q.data),w.__maxMipLevel=0;else if(M.isDataTexture3D)n.texImage3D(32879,0,se,q.width,q.height,q.depth,0,Q,Z,q.data),w.__maxMipLevel=0;else if(pe.length>0&&j){for(let ue=0,ve=pe.length;ue<ve;ue++)ce=pe[ue],n.texImage2D(3553,ue,se,Q,Z,ce);M.generateMipmaps=!1,w.__maxMipLevel=pe.length-1}else n.texImage2D(3553,0,se,Q,Z,q),w.__maxMipLevel=0;x(M,j)&&_(F,M,q.width,q.height),w.__version=M.version,M.onUpdate&&M.onUpdate(M)}function Te(w,M,U){if(M.image.length!==6)return;le(w,M),n.activeTexture(33984+U),n.bindTexture(34067,w.__webglTexture),e.pixelStorei(37440,M.flipY);const F=M&&(M.isCompressedTexture||M.image[0].isCompressedTexture),R=M.image[0]&&M.image[0].isDataTexture,q=[];for(let ue=0;ue<6;ue++)!F&&!R?q[ue]=v(M.image[ue],!1,!0,l):q[ue]=R?M.image[ue].image:M.image[ue];const j=q[0],Q=g(j)||a,Z=s.convert(M.format),se=s.convert(M.type),ce=T(M.internalFormat,Z,se);ge(34067,M,Q);let pe;if(F){for(let ue=0;ue<6;ue++){pe=q[ue].mipmaps;for(let ve=0;ve<pe.length;ve++){const Ue=pe[ve];M.format!==en&&M.format!==Fi?Z!==null?n.compressedTexImage2D(34069+ue,ve,ce,Ue.width,Ue.height,0,Ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+ue,ve,ce,Ue.width,Ue.height,0,Z,se,Ue.data)}}w.__maxMipLevel=pe.length-1}else{pe=M.mipmaps;for(let ue=0;ue<6;ue++)if(R){n.texImage2D(34069+ue,0,ce,q[ue].width,q[ue].height,0,Z,se,q[ue].data);for(let ve=0;ve<pe.length;ve++){const et=pe[ve].image[ue].image;n.texImage2D(34069+ue,ve+1,ce,et.width,et.height,0,Z,se,et.data)}}else{n.texImage2D(34069+ue,0,ce,Z,se,q[ue]);for(let ve=0;ve<pe.length;ve++){const Ue=pe[ve];n.texImage2D(34069+ue,ve+1,ce,Z,se,Ue.image[ue])}}w.__maxMipLevel=pe.length}x(M,Q)&&_(34067,M,j.width,j.height),w.__version=M.version,M.onUpdate&&M.onUpdate(M)}function He(w,M,U,F){const R=s.convert(M.texture.format),q=s.convert(M.texture.type),j=T(M.texture.internalFormat,R,q);n.texImage2D(F,0,j,M.width,M.height,0,R,q,null),e.bindFramebuffer(36160,w),e.framebufferTexture2D(36160,U,F,i.get(M.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function ne(w,M,U){if(e.bindRenderbuffer(36161,w),M.depthBuffer&&!M.stencilBuffer){let F=33189;if(U){const R=M.depthTexture;R&&R.isDepthTexture&&(R.type===ai?F=36012:R.type===So&&(F=33190));const q=ye(M);e.renderbufferStorageMultisample(36161,q,F,M.width,M.height)}else e.renderbufferStorage(36161,F,M.width,M.height);e.framebufferRenderbuffer(36160,36096,36161,w)}else if(M.depthBuffer&&M.stencilBuffer){if(U){const F=ye(M);e.renderbufferStorageMultisample(36161,F,35056,M.width,M.height)}else e.renderbufferStorage(36161,34041,M.width,M.height);e.framebufferRenderbuffer(36160,33306,36161,w)}else{const F=s.convert(M.texture.format),R=s.convert(M.texture.type),q=T(M.texture.internalFormat,F,R);if(U){const j=ye(M);e.renderbufferStorageMultisample(36161,j,q,M.width,M.height)}else e.renderbufferStorage(36161,q,M.width,M.height)}e.bindRenderbuffer(36161,null)}function ke(w,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,w),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(M.depthTexture).__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),O(M.depthTexture,0);const F=i.get(M.depthTexture).__webglTexture;if(M.depthTexture.format===vr)e.framebufferTexture2D(36160,36096,3553,F,0);else if(M.depthTexture.format===ws)e.framebufferTexture2D(36160,33306,3553,F,0);else throw new Error("Unknown depthTexture format")}function G(w){const M=i.get(w),U=w.isWebGLCubeRenderTarget===!0;if(w.depthTexture){if(U)throw new Error("target.depthTexture not supported in Cube render targets");ke(M.__webglFramebuffer,w)}else if(U){M.__webglDepthbuffer=[];for(let F=0;F<6;F++)e.bindFramebuffer(36160,M.__webglFramebuffer[F]),M.__webglDepthbuffer[F]=e.createRenderbuffer(),ne(M.__webglDepthbuffer[F],w,!1)}else e.bindFramebuffer(36160,M.__webglFramebuffer),M.__webglDepthbuffer=e.createRenderbuffer(),ne(M.__webglDepthbuffer,w,!1);e.bindFramebuffer(36160,null)}function re(w){const M=i.get(w),U=i.get(w.texture);w.addEventListener("dispose",D),U.__webglTexture=e.createTexture(),o.memory.textures++;const F=w.isWebGLCubeRenderTarget===!0,R=w.isWebGLMultisampleRenderTarget===!0,q=g(w)||a;if(a&&w.texture.format===Fi&&(w.texture.type===ai||w.texture.type===ko)&&(w.texture.format=en,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),F){M.__webglFramebuffer=[];for(let j=0;j<6;j++)M.__webglFramebuffer[j]=e.createFramebuffer()}else if(M.__webglFramebuffer=e.createFramebuffer(),R)if(a){M.__webglMultisampledFramebuffer=e.createFramebuffer(),M.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,M.__webglColorRenderbuffer);const j=s.convert(w.texture.format),Q=s.convert(w.texture.type),Z=T(w.texture.internalFormat,j,Q),se=ye(w);e.renderbufferStorageMultisample(36161,se,Z,w.width,w.height),e.bindFramebuffer(36160,M.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,M.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),w.depthBuffer&&(M.__webglDepthRenderbuffer=e.createRenderbuffer(),ne(M.__webglDepthRenderbuffer,w,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(F){n.bindTexture(34067,U.__webglTexture),ge(34067,w.texture,q);for(let j=0;j<6;j++)He(M.__webglFramebuffer[j],w,36064,34069+j);x(w.texture,q)&&_(34067,w.texture,w.width,w.height),n.bindTexture(34067,null)}else n.bindTexture(3553,U.__webglTexture),ge(3553,w.texture,q),He(M.__webglFramebuffer,w,36064,3553),x(w.texture,q)&&_(3553,w.texture,w.width,w.height),n.bindTexture(3553,null);w.depthBuffer&&G(w)}function K(w){const M=w.texture,U=g(w)||a;if(x(M,U)){const F=w.isWebGLCubeRenderTarget?34067:3553,R=i.get(M).__webglTexture;n.bindTexture(F,R),_(F,M,w.width,w.height),n.bindTexture(F,null)}}function oe(w){if(w.isWebGLMultisampleRenderTarget)if(a){const M=i.get(w);e.bindFramebuffer(36008,M.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,M.__webglFramebuffer);const U=w.width,F=w.height;let R=16384;w.depthBuffer&&(R|=256),w.stencilBuffer&&(R|=1024),e.blitFramebuffer(0,0,U,F,0,0,U,F,R,9728),e.bindFramebuffer(36160,M.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function ye(w){return a&&w.isWebGLMultisampleRenderTarget?Math.min(u,w.samples):0}function S(w){const M=o.render.frame;f.get(w)!==M&&(f.set(w,M),w.update())}let E=!1,P=!1;function H(w,M){w&&w.isWebGLRenderTarget&&(E===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),E=!0),w=w.texture),O(w,M)}function B(w,M){w&&w.isWebGLCubeRenderTarget&&(P===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),P=!0),w=w.texture),J(w,M)}this.allocateTextureUnit=k,this.resetTextureUnits=V,this.setTexture2D=O,this.setTexture2DArray=N,this.setTexture3D=W,this.setTextureCube=J,this.setupRenderTarget=re,this.updateRenderTargetMipmap=K,this.updateMultisampleRenderTarget=oe,this.safeSetTexture2D=H,this.safeSetTextureCube=B}function mx(e,t,n){const i=n.isWebGL2;function r(s){let o;if(s===Us)return 5121;if(s===r0)return 32819;if(s===s0)return 32820;if(s===o0)return 33635;if(s===t0)return 5120;if(s===n0)return 5122;if(s===Vo)return 5123;if(s===i0)return 5124;if(s===So)return 5125;if(s===ai)return 5126;if(s===ko)return i?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===a0)return 6406;if(s===Fi)return 6407;if(s===en)return 6408;if(s===c0)return 6409;if(s===l0)return 6410;if(s===vr)return 6402;if(s===ws)return 34041;if(s===h0)return 6403;if(s===f0)return 36244;if(s===d0)return 33319;if(s===p0)return 33320;if(s===m0)return 36248;if(s===g0)return 36249;if(s===Uh||s===zh||s===Hh||s===Gh)if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Uh)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===zh)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Hh)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Gh)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Vh||s===kh||s===Wh||s===jh)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Vh)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===kh)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Wh)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===jh)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===y0)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===qh||s===Xh)&&(o=t.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===qh)return o.COMPRESSED_RGB8_ETC2;if(s===Xh)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===v0||s===x0||s===_0||s===b0||s===w0||s===M0||s===S0||s===T0||s===E0||s===A0||s===R0||s===C0||s===L0||s===P0||s===O0||s===D0||s===N0||s===F0||s===B0||s===U0||s===z0||s===H0||s===G0||s===V0||s===k0||s===W0||s===j0||s===q0)return o=t.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===I0)return o=t.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===gs)return i?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function Jc(e){ht.call(this),this.cameras=e||[]}Jc.prototype=Object.assign(Object.create(ht.prototype),{constructor:Jc,isArrayCamera:!0});function Di(){xe.call(this),this.type="Group"}Di.prototype=Object.assign(Object.create(xe.prototype),{constructor:Di,isGroup:!0});function Ao(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Ao.prototype,{constructor:Ao,getHandSpace:function(){if(this._hand===null&&(this._hand=new Di,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const t=new Di;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new Di,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new Di,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(e,t,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,c=this._hand;if(e)if(c&&e.hand){s=!0;for(let l=0;l<=window.XRHand.LITTLE_PHALANX_TIP;l++)if(e.hand[l]){const h=t.getJointPose(e.hand[l],n),u=c.joints[l];h!==null&&(u.matrix.fromArray(h.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.jointRadius=h.radius),u.visible=h!==null;const f=c.joints[window.XRHand.INDEX_PHALANX_TIP],d=c.joints[window.XRHand.THUMB_PHALANX_TIP],p=f.position.distanceTo(d.position),y=.02,v=.005;c.inputState.pinching&&p>y+v?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&p<=y-v&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else o!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),c!==null&&(c.visible=s!==null),this}});function gx(e,t){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const c=[],l=new Map,h=new ht;h.layers.enable(1),h.viewport=new je;const u=new ht;u.layers.enable(2),u.viewport=new je;const f=[h,u],d=new Jc;d.layers.enable(1),d.layers.enable(2);let p=null,y=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let V=c[z];return V===void 0&&(V=new Ao,c[z]=V),V.getTargetRaySpace()},this.getControllerGrip=function(z){let V=c[z];return V===void 0&&(V=new Ao,c[z]=V),V.getGripSpace()},this.getHand=function(z){let V=c[z];return V===void 0&&(V=new Ao,c[z]=V),V.getHandSpace()};function v(z){const V=l.get(z.inputSource);V&&V.dispatchEvent({type:z.type,data:z.inputSource})}function g(){l.forEach(function(z,V){z.disconnect(V)}),l.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),Y.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function m(z){s=z,Y.setContext(i),Y.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(z){r=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){o=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=function(z){if(i=z,i!==null){i.addEventListener("select",v),i.addEventListener("selectstart",v),i.addEventListener("selectend",v),i.addEventListener("squeeze",v),i.addEventListener("squeezestart",v),i.addEventListener("squeezeend",v),i.addEventListener("end",g);const V=t.getContextAttributes();V.xrCompatible!==!0&&t.makeXRCompatible();const k={antialias:V.antialias,alpha:V.alpha,depth:V.depth,stencil:V.stencil,framebufferScaleFactor:r},O=new XRWebGLLayer(i,t,k);i.updateRenderState({baseLayer:O}),i.requestReferenceSpace(o).then(m),i.addEventListener("inputsourceschange",x)}};function x(z){const V=i.inputSources;for(let k=0;k<c.length;k++)l.set(V[k],c[k]);for(let k=0;k<z.removed.length;k++){const O=z.removed[k],N=l.get(O);N&&(N.dispatchEvent({type:"disconnected",data:O}),l.delete(O))}for(let k=0;k<z.added.length;k++){const O=z.added[k],N=l.get(O);N&&N.dispatchEvent({type:"connected",data:O})}}const _=new A,T=new A;function b(z,V,k){_.setFromMatrixPosition(V.matrixWorld),T.setFromMatrixPosition(k.matrixWorld);const O=_.distanceTo(T),N=V.projectionMatrix.elements,W=k.projectionMatrix.elements,J=N[14]/(N[10]-1),te=N[14]/(N[10]+1),ae=(N[9]+1)/N[5],ge=(N[9]-1)/N[5],le=(N[8]-1)/N[0],_e=(W[8]+1)/W[0],Te=J*le,He=J*_e,ne=O/(-le+_e),ke=ne*-le;V.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(ke),z.translateZ(ne),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.getInverse(z.matrixWorld);const G=J+ne,re=te+ne,K=Te-ke,oe=He+(O-ke),ye=ae*te/re*G,S=ge*te/re*G;z.projectionMatrix.makePerspective(K,oe,ye,S,G,re)}function L(z,V){V===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(V.matrixWorld,z.matrix),z.matrixWorldInverse.getInverse(z.matrixWorld)}this.getCamera=function(z){d.near=u.near=h.near=z.near,d.far=u.far=h.far=z.far,(p!==d.near||y!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),p=d.near,y=d.far);const V=z.parent,k=d.cameras;L(d,V);for(let N=0;N<k.length;N++)L(k[N],V);z.matrixWorld.copy(d.matrixWorld);const O=z.children;for(let N=0,W=O.length;N<W;N++)O[N].updateMatrixWorld(!0);return k.length===2?b(d,h,u):d.projectionMatrix.copy(h.projectionMatrix),d};let D=null;function I(z,V){if(a=V.getViewerPose(s),a!==null){const O=a.views,N=i.renderState.baseLayer;e.setFramebuffer(N.framebuffer);let W=!1;O.length!==d.cameras.length&&(d.cameras.length=0,W=!0);for(let J=0;J<O.length;J++){const te=O[J],ae=N.getViewport(te),ge=f[J];ge.matrix.fromArray(te.transform.matrix),ge.projectionMatrix.fromArray(te.projectionMatrix),ge.viewport.set(ae.x,ae.y,ae.width,ae.height),J===0&&d.matrix.copy(ge.matrix),W===!0&&d.cameras.push(ge)}}const k=i.inputSources;for(let O=0;O<c.length;O++){const N=c[O],W=k[O];N.update(W,V,s)}D&&D(z,V)}const Y=new ox;Y.setAnimationLoop(I),this.setAnimationLoop=function(z){D=z},this.dispose=function(){}}Object.assign(gx.prototype,Xn.prototype);function yL(e){function t(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,_){m.isMeshBasicMaterial?i(g,m):m.isMeshLambertMaterial?(i(g,m),c(g,m)):m.isMeshToonMaterial?(i(g,m),h(g,m)):m.isMeshPhongMaterial?(i(g,m),l(g,m)):m.isMeshStandardMaterial?(i(g,m),m.isMeshPhysicalMaterial?f(g,m):u(g,m)):m.isMeshMatcapMaterial?(i(g,m),d(g,m)):m.isMeshDepthMaterial?(i(g,m),p(g,m)):m.isMeshDistanceMaterial?(i(g,m),y(g,m)):m.isMeshNormalMaterial?(i(g,m),v(g,m)):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&s(g,m)):m.isPointsMaterial?o(g,m,x,_):m.isSpriteMaterial?a(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.specularMap&&(g.specularMap.value=m.specularMap);const x=e.get(m).envMap;if(x){g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&x._needsFlipEnvMap?-1:1,g.reflectivity.value=m.reflectivity,g.refractionRatio.value=m.refractionRatio;const b=e.get(x).__maxMipLevel;b!==void 0&&(g.maxMipLevel.value=b)}m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let _;m.map?_=m.map:m.specularMap?_=m.specularMap:m.displacementMap?_=m.displacementMap:m.normalMap?_=m.normalMap:m.bumpMap?_=m.bumpMap:m.roughnessMap?_=m.roughnessMap:m.metalnessMap?_=m.metalnessMap:m.alphaMap?_=m.alphaMap:m.emissiveMap?_=m.emissiveMap:m.clearcoatMap?_=m.clearcoatMap:m.clearcoatNormalMap?_=m.clearcoatNormalMap:m.clearcoatRoughnessMap&&(_=m.clearcoatRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),g.uvTransform.value.copy(_.matrix));let T;m.aoMap?T=m.aoMap:m.lightMap&&(T=m.lightMap),T!==void 0&&(T.isWebGLRenderTarget&&(T=T.texture),T.matrixAutoUpdate===!0&&T.updateMatrix(),g.uv2Transform.value.copy(T.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function s(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function o(g,m,x,_){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=_*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let T;m.map?T=m.map:m.alphaMap&&(T=m.alphaMap),T!==void 0&&(T.matrixAutoUpdate===!0&&T.updateMatrix(),g.uvTransform.value.copy(T.matrix))}function a(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function c(g,m){m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap)}function l(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===dt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===dt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===dt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===dt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function u(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===dt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===dt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),e.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m){u(g,m),g.reflectivity.value=m.reflectivity,g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.sheen&&g.sheen.value.copy(m.sheen),m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===dt&&g.clearcoatNormalScale.value.negate()),g.transmission.value=m.transmission,m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap)}function d(g,m){m.matcap&&(g.matcap.value=m.matcap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===dt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===dt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function p(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function y(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}function v(g,m){m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===dt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===dt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Ea(e){e=e||{};const t=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==void 0?e.context:null,i=e.alpha!==void 0?e.alpha:!1,r=e.depth!==void 0?e.depth:!0,s=e.stencil!==void 0?e.stencil:!0,o=e.antialias!==void 0?e.antialias:!1,a=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,c=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,l=e.powerPreference!==void 0?e.powerPreference:"default",h=e.failIfMajorPerformanceCaveat!==void 0?e.failIfMajorPerformanceCaveat:!1;let u=null,f=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Vt,this.physicallyCorrectLights=!1,this.toneMapping=yr,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const d=this;let p=!1,y=null,v=0,g=0,m=null,x=null,_=-1,T=null,b=null;const L=new je,D=new je;let I=null,Y=t.width,z=t.height,V=1,k=null,O=null;const N=new je(0,0,Y,z),W=new je(0,0,Y,z);let J=!1;const te=new Ta;let ae=!1,ge=!1;const le=new Ie,_e=new A,Te={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function He(){return m===null?V:1}let ne=n;function ke(C,$){for(let X=0;X<C.length;X++){const ee=C[X],fe=t.getContext(ee,$);if(fe!==null)return fe}return null}try{const C={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",Ue,!1),t.addEventListener("webglcontextrestored",et,!1),ne===null){const $=["webgl2","webgl","experimental-webgl"];if(d.isWebGL1Renderer===!0&&$.shift(),ne=ke($,C),ne===null)throw ke($)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}ne.getShaderPrecisionFormat===void 0&&(ne.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let G,re,K,oe,ye,S,E,P,H,B,w,M,U,F,R,q,j,Q,Z,se,ce;function pe(){G=new ZR(ne),re=new XR(ne,G,e),re.isWebGL2===!1&&(G.get("WEBGL_depth_texture"),G.get("OES_texture_float"),G.get("OES_texture_half_float"),G.get("OES_texture_half_float_linear"),G.get("OES_standard_derivatives"),G.get("OES_element_index_uint"),G.get("OES_vertex_array_object"),G.get("ANGLE_instanced_arrays")),G.get("OES_texture_float_linear"),se=new mx(ne,G,re),K=new mL(ne,G,re),K.scissor(D.copy(W).multiplyScalar(V).floor()),K.viewport(L.copy(N).multiplyScalar(V).floor()),oe=new QR,ye=new iL,S=new gL(ne,G,K,ye,re,se,oe),E=new $R(d),P=new wE(ne,re),ce=new jR(ne,G,P,re),H=new JR(ne,P,oe,ce),B=new iC(ne,H,P,oe),j=new nC(ne),R=new YR(ye),w=new nL(d,E,G,re,ce,R),M=new yL(ye),U=new oL(ye),F=new fL,q=new WR(d,E,K,B,a),Q=new qR(ne,G,oe,re),Z=new KR(ne,G,oe,re),oe.programs=w.programs,d.capabilities=re,d.extensions=G,d.properties=ye,d.renderLists=U,d.state=K,d.info=oe}pe();const ue=new gx(d,ne);this.xr=ue;const ve=new px(d,B,re.maxTextureSize);this.shadowMap=ve,this.getContext=function(){return ne},this.getContextAttributes=function(){return ne.getContextAttributes()},this.forceContextLoss=function(){const C=G.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=G.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(C){C!==void 0&&(V=C,this.setSize(Y,z,!1))},this.getSize=function(C){return C===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),C=new ie),C.set(Y,z)},this.setSize=function(C,$,X){if(ue.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Y=C,z=$,t.width=Math.floor(C*V),t.height=Math.floor($*V),X!==!1&&(t.style.width=C+"px",t.style.height=$+"px"),this.setViewport(0,0,C,$)},this.getDrawingBufferSize=function(C){return C===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),C=new ie),C.set(Y*V,z*V).floor()},this.setDrawingBufferSize=function(C,$,X){Y=C,z=$,V=X,t.width=Math.floor(C*X),t.height=Math.floor($*X),this.setViewport(0,0,C,$)},this.getCurrentViewport=function(C){return C===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),C=new je),C.copy(L)},this.getViewport=function(C){return C.copy(N)},this.setViewport=function(C,$,X,ee){C.isVector4?N.set(C.x,C.y,C.z,C.w):N.set(C,$,X,ee),K.viewport(L.copy(N).multiplyScalar(V).floor())},this.getScissor=function(C){return C.copy(W)},this.setScissor=function(C,$,X,ee){C.isVector4?W.set(C.x,C.y,C.z,C.w):W.set(C,$,X,ee),K.scissor(D.copy(W).multiplyScalar(V).floor())},this.getScissorTest=function(){return J},this.setScissorTest=function(C){K.setScissorTest(J=C)},this.setOpaqueSort=function(C){k=C},this.setTransparentSort=function(C){O=C},this.getClearColor=function(){return q.getClearColor()},this.setClearColor=function(){q.setClearColor.apply(q,arguments)},this.getClearAlpha=function(){return q.getClearAlpha()},this.setClearAlpha=function(){q.setClearAlpha.apply(q,arguments)},this.clear=function(C,$,X){let ee=0;(C===void 0||C)&&(ee|=16384),($===void 0||$)&&(ee|=256),(X===void 0||X)&&(ee|=1024),ne.clear(ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ue,!1),t.removeEventListener("webglcontextrestored",et,!1),U.dispose(),F.dispose(),ye.dispose(),E.dispose(),B.dispose(),ce.dispose(),ue.dispose(),Vs.stop()};function Ue(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function et(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1,pe()}function _i(C){const $=C.target;$.removeEventListener("dispose",_i),Ca($)}function Ca(C){wt(C),ye.remove(C)}function wt(C){const $=ye.get(C).program;$!==void 0&&w.releaseProgram($)}function on(C,$){C.render(function(X){d.renderBufferImmediate(X,$)})}this.renderBufferImmediate=function(C,$){ce.initAttributes();const X=ye.get(C);C.hasPositions&&!X.position&&(X.position=ne.createBuffer()),C.hasNormals&&!X.normal&&(X.normal=ne.createBuffer()),C.hasUvs&&!X.uv&&(X.uv=ne.createBuffer()),C.hasColors&&!X.color&&(X.color=ne.createBuffer());const ee=$.getAttributes();C.hasPositions&&(ne.bindBuffer(34962,X.position),ne.bufferData(34962,C.positionArray,35048),ce.enableAttribute(ee.position),ne.vertexAttribPointer(ee.position,3,5126,!1,0,0)),C.hasNormals&&(ne.bindBuffer(34962,X.normal),ne.bufferData(34962,C.normalArray,35048),ce.enableAttribute(ee.normal),ne.vertexAttribPointer(ee.normal,3,5126,!1,0,0)),C.hasUvs&&(ne.bindBuffer(34962,X.uv),ne.bufferData(34962,C.uvArray,35048),ce.enableAttribute(ee.uv),ne.vertexAttribPointer(ee.uv,2,5126,!1,0,0)),C.hasColors&&(ne.bindBuffer(34962,X.color),ne.bufferData(34962,C.colorArray,35048),ce.enableAttribute(ee.color),ne.vertexAttribPointer(ee.color,3,5126,!1,0,0)),ce.disableUnusedAttributes(),ne.drawArrays(4,0,C.count),C.count=0},this.renderBufferDirect=function(C,$,X,ee,fe,Fe){$===null&&($=Te);const Oe=fe.isMesh&&fe.matrixWorld.determinant()<0,Be=qd(C,$,ee,fe);K.setMaterial(ee,Oe);let De=X.index;const ut=X.attributes.position;if(De===null){if(ut===void 0||ut.count===0)return}else if(De.count===0)return;let ct=1;ee.wireframe===!0&&(De=H.getWireframeAttribute(X),ct=2),(ee.morphTargets||ee.morphNormals)&&j.update(fe,X,ee,Be),ce.setup(fe,ee,Be,X,De);let Le,$e=Q;De!==null&&(Le=P.get(De),$e=Z,$e.setIndex(Le));const Zn=De!==null?De.count:ut.count,Ze=X.drawRange.start*ct,Ji=X.drawRange.count*ct,gt=Fe!==null?Fe.start*ct:0,Jl=Fe!==null?Fe.count*ct:1/0,jt=Math.max(Ze,gt),ks=Math.min(Zn,Ze+Ji,gt+Jl)-1,Fr=Math.max(0,ks-jt+1);if(Fr!==0){if(fe.isMesh)ee.wireframe===!0?(K.setLineWidth(ee.wireframeLinewidth*He()),$e.setMode(1)):$e.setMode(4);else if(fe.isLine){let Ws=ee.linewidth;Ws===void 0&&(Ws=1),K.setLineWidth(Ws*He()),fe.isLineSegments?$e.setMode(1):fe.isLineLoop?$e.setMode(2):$e.setMode(3)}else fe.isPoints?$e.setMode(0):fe.isSprite&&$e.setMode(4);if(fe.isInstancedMesh)$e.renderInstances(jt,Fr,fe.count);else if(X.isInstancedBufferGeometry){const Ws=Math.min(X.instanceCount,X._maxInstanceCount);$e.renderInstances(jt,Fr,Ws)}else $e.render(jt,Fr)}},this.compile=function(C,$){f=F.get(C,$),f.init(),C.traverse(function(ee){ee.isLight&&(f.pushLight(ee),ee.castShadow&&f.pushShadow(ee))}),f.setupLights($);const X=new WeakMap;C.traverse(function(ee){const fe=ee.material;if(fe)if(Array.isArray(fe))for(let Fe=0;Fe<fe.length;Fe++){const Oe=fe[Fe];X.has(Oe)===!1&&($n(Oe,C,ee),X.set(Oe))}else X.has(fe)===!1&&($n(fe,C,ee),X.set(fe))})};let Nr=null;function La(C){ue.isPresenting||Nr&&Nr(C)}const Vs=new ox;Vs.setAnimationLoop(La),typeof window<"u"&&Vs.setContext(window),this.setAnimationLoop=function(C){Nr=C,ue.setAnimationLoop(C),C===null?Vs.stop():Vs.start()},this.render=function(C,$){let X,ee;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),X=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),ee=arguments[3]),$!==void 0&&$.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;ce.resetDefaultState(),_=-1,T=null,C.autoUpdate===!0&&C.updateMatrixWorld(),$.parent===null&&$.updateMatrixWorld(),ue.enabled===!0&&ue.isPresenting===!0&&($=ue.getCamera($)),C.isScene===!0&&C.onBeforeRender(d,C,$,X||m),f=F.get(C,$),f.init(),le.multiplyMatrices($.projectionMatrix,$.matrixWorldInverse),te.setFromProjectionMatrix(le),ge=this.localClippingEnabled,ae=R.init(this.clippingPlanes,ge,$),u=U.get(C,$),u.init(),kd(C,$,0,d.sortObjects),u.finish(),d.sortObjects===!0&&u.sort(k,O),ae===!0&&R.beginShadows();const fe=f.state.shadowsArray;ve.render(fe,C,$),f.setupLights($),ae===!0&&R.endShadows(),this.info.autoReset===!0&&this.info.reset(),X!==void 0&&this.setRenderTarget(X),q.render(u,C,$,ee);const Fe=u.opaque,Oe=u.transparent;Fe.length>0&&Wd(Fe,C,$),Oe.length>0&&Wd(Oe,C,$),C.isScene===!0&&C.onAfterRender(d,C,$),m!==null&&(S.updateRenderTargetMipmap(m),S.updateMultisampleRenderTarget(m)),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1),u=null,f=null};function kd(C,$,X,ee){if(C.visible===!1)return;if(C.layers.test($.layers)){if(C.isGroup)X=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update($);else if(C.isLight)f.pushLight(C),C.castShadow&&f.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||te.intersectsSprite(C)){ee&&_e.setFromMatrixPosition(C.matrixWorld).applyMatrix4(le);const Oe=B.update(C),Be=C.material;Be.visible&&u.push(C,Oe,Be,X,_e.z,null)}}else if(C.isImmediateRenderObject)ee&&_e.setFromMatrixPosition(C.matrixWorld).applyMatrix4(le),u.push(C,null,C.material,X,_e.z,null);else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==oe.render.frame&&(C.skeleton.update(),C.skeleton.frame=oe.render.frame),!C.frustumCulled||te.intersectsObject(C))){ee&&_e.setFromMatrixPosition(C.matrixWorld).applyMatrix4(le);const Oe=B.update(C),Be=C.material;if(Array.isArray(Be)){const De=Oe.groups;for(let ut=0,ct=De.length;ut<ct;ut++){const Le=De[ut],$e=Be[Le.materialIndex];$e&&$e.visible&&u.push(C,Oe,$e,X,_e.z,Le)}}else Be.visible&&u.push(C,Oe,Be,X,_e.z,null)}}const Fe=C.children;for(let Oe=0,Be=Fe.length;Oe<Be;Oe++)kd(Fe[Oe],$,X,ee)}function Wd(C,$,X){const ee=$.isScene===!0?$.overrideMaterial:null;for(let fe=0,Fe=C.length;fe<Fe;fe++){const Oe=C[fe],Be=Oe.object,De=Oe.geometry,ut=ee===null?Oe.material:ee,ct=Oe.group;if(X.isArrayCamera){b=X;const Le=X.cameras;for(let $e=0,Zn=Le.length;$e<Zn;$e++){const Ze=Le[$e];Be.layers.test(Ze.layers)&&(K.viewport(L.copy(Ze.viewport)),f.setupLights(Ze),jd(Be,$,Ze,De,ut,ct))}}else b=null,jd(Be,$,X,De,ut,ct)}}function jd(C,$,X,ee,fe,Fe){if(C.onBeforeRender(d,$,X,ee,fe,Fe),f=F.get($,b||X),C.modelViewMatrix.multiplyMatrices(X.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),C.isImmediateRenderObject){const Oe=qd(X,$,fe,C);K.setMaterial(fe),ce.reset(),on(C,Oe)}else d.renderBufferDirect(X,$,ee,fe,C,Fe);C.onAfterRender(d,$,X,ee,fe,Fe),f=F.get($,b||X)}function $n(C,$,X){$.isScene!==!0&&($=Te);const ee=ye.get(C),fe=f.state.lights,Fe=f.state.shadowsArray,Oe=fe.state.version,Be=w.getParameters(C,fe.state,Fe,$,X),De=w.getProgramCacheKey(Be);let ut=ee.program,ct=!0;if(ut===void 0)C.addEventListener("dispose",_i);else if(ut.cacheKey!==De)wt(C);else if(ee.lightsStateVersion!==Oe)ct=!1;else if(Be.shaderID!==void 0){const Ze=C.isMeshStandardMaterial?$.environment:null;ee.envMap=E.get(C.envMap||Ze);return}else ct=!1;ct&&(Be.uniforms=w.getUniforms(C),C.onBeforeCompile(Be,d),ut=w.acquireProgram(Be,De),ee.program=ut,ee.uniforms=Be.uniforms,ee.outputEncoding=Be.outputEncoding);const Le=ee.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(ee.numClippingPlanes=R.numPlanes,ee.numIntersection=R.numIntersection,Le.clippingPlanes=R.uniform),ee.environment=C.isMeshStandardMaterial?$.environment:null,ee.fog=$.fog,ee.envMap=E.get(C.envMap||ee.environment),ee.needsLights=s_(C),ee.lightsStateVersion=Oe,ee.needsLights&&(Le.ambientLightColor.value=fe.state.ambient,Le.lightProbe.value=fe.state.probe,Le.directionalLights.value=fe.state.directional,Le.directionalLightShadows.value=fe.state.directionalShadow,Le.spotLights.value=fe.state.spot,Le.spotLightShadows.value=fe.state.spotShadow,Le.rectAreaLights.value=fe.state.rectArea,Le.ltc_1.value=fe.state.rectAreaLTC1,Le.ltc_2.value=fe.state.rectAreaLTC2,Le.pointLights.value=fe.state.point,Le.pointLightShadows.value=fe.state.pointShadow,Le.hemisphereLights.value=fe.state.hemi,Le.directionalShadowMap.value=fe.state.directionalShadowMap,Le.directionalShadowMatrix.value=fe.state.directionalShadowMatrix,Le.spotShadowMap.value=fe.state.spotShadowMap,Le.spotShadowMatrix.value=fe.state.spotShadowMatrix,Le.pointShadowMap.value=fe.state.pointShadowMap,Le.pointShadowMatrix.value=fe.state.pointShadowMatrix);const $e=ee.program.getUniforms(),Zn=Bi.seqWithValue($e.seq,Le);ee.uniformsList=Zn}function qd(C,$,X,ee){$.isScene!==!0&&($=Te),S.resetTextureUnits();const fe=$.fog,Fe=X.isMeshStandardMaterial?$.environment:null,Oe=m===null?d.outputEncoding:m.texture.encoding,Be=E.get(X.envMap||Fe),De=ye.get(X),ut=f.state.lights;if(ae===!0&&(ge===!0||C!==T)){const gt=C===T&&X.id===_;R.setState(X,C,gt)}X.version===De.__version?(X.fog&&De.fog!==fe||De.environment!==Fe||De.needsLights&&De.lightsStateVersion!==ut.state.version||De.numClippingPlanes!==void 0&&(De.numClippingPlanes!==R.numPlanes||De.numIntersection!==R.numIntersection)||De.outputEncoding!==Oe||De.envMap!==Be)&&$n(X,$,ee):($n(X,$,ee),De.__version=X.version);let ct=!1,Le=!1,$e=!1;const Zn=De.program,Ze=Zn.getUniforms(),Ji=De.uniforms;if(K.useProgram(Zn.program)&&(ct=!0,Le=!0,$e=!0),X.id!==_&&(_=X.id,Le=!0),ct||T!==C){if(Ze.setValue(ne,"projectionMatrix",C.projectionMatrix),re.logarithmicDepthBuffer&&Ze.setValue(ne,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),T!==C&&(T=C,Le=!0,$e=!0),X.isShaderMaterial||X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshStandardMaterial||X.envMap){const gt=Ze.map.cameraPosition;gt!==void 0&&gt.setValue(ne,_e.setFromMatrixPosition(C.matrixWorld))}(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&Ze.setValue(ne,"isOrthographic",C.isOrthographicCamera===!0),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial||X.isShadowMaterial||X.skinning)&&Ze.setValue(ne,"viewMatrix",C.matrixWorldInverse)}if(X.skinning){Ze.setOptional(ne,ee,"bindMatrix"),Ze.setOptional(ne,ee,"bindMatrixInverse");const gt=ee.skeleton;if(gt){const Jl=gt.bones;if(re.floatVertexTextures){if(gt.boneTexture===void 0){let jt=Math.sqrt(Jl.length*4);jt=Ee.ceilPowerOfTwo(jt),jt=Math.max(jt,4);const ks=new Float32Array(jt*jt*4);ks.set(gt.boneMatrices);const Fr=new Sr(ks,jt,jt,en,ai);gt.boneMatrices=ks,gt.boneTexture=Fr,gt.boneTextureSize=jt}Ze.setValue(ne,"boneTexture",gt.boneTexture,S),Ze.setValue(ne,"boneTextureSize",gt.boneTextureSize)}else Ze.setOptional(ne,gt,"boneMatrices")}}return(Le||De.receiveShadow!==ee.receiveShadow)&&(De.receiveShadow=ee.receiveShadow,Ze.setValue(ne,"receiveShadow",ee.receiveShadow)),Le&&(Ze.setValue(ne,"toneMappingExposure",d.toneMappingExposure),De.needsLights&&r_(Ji,$e),fe&&X.fog&&M.refreshFogUniforms(Ji,fe),M.refreshMaterialUniforms(Ji,X,V,z),Bi.upload(ne,De.uniformsList,Ji,S)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(Bi.upload(ne,De.uniformsList,Ji,S),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&Ze.setValue(ne,"center",ee.center),Ze.setValue(ne,"modelViewMatrix",ee.modelViewMatrix),Ze.setValue(ne,"normalMatrix",ee.normalMatrix),Ze.setValue(ne,"modelMatrix",ee.matrixWorld),Zn}function r_(C,$){C.ambientLightColor.needsUpdate=$,C.lightProbe.needsUpdate=$,C.directionalLights.needsUpdate=$,C.directionalLightShadows.needsUpdate=$,C.pointLights.needsUpdate=$,C.pointLightShadows.needsUpdate=$,C.spotLights.needsUpdate=$,C.spotLightShadows.needsUpdate=$,C.rectAreaLights.needsUpdate=$,C.hemisphereLights.needsUpdate=$}function s_(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.setFramebuffer=function(C){y!==C&&m===null&&ne.bindFramebuffer(36160,C),y=C},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderList=function(){return u},this.setRenderList=function(C){u=C},this.getRenderState=function(){return f},this.setRenderState=function(C){f=C},this.getRenderTarget=function(){return m},this.setRenderTarget=function(C,$=0,X=0){m=C,v=$,g=X,C&&ye.get(C).__webglFramebuffer===void 0&&S.setupRenderTarget(C);let ee=y,fe=!1;if(C){const Fe=ye.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(ee=Fe[$],fe=!0):C.isWebGLMultisampleRenderTarget?ee=ye.get(C).__webglMultisampledFramebuffer:ee=Fe,L.copy(C.viewport),D.copy(C.scissor),I=C.scissorTest}else L.copy(N).multiplyScalar(V).floor(),D.copy(W).multiplyScalar(V).floor(),I=J;if(x!==ee&&(ne.bindFramebuffer(36160,ee),x=ee),K.viewport(L),K.scissor(D),K.setScissorTest(I),fe){const Fe=ye.get(C.texture);ne.framebufferTexture2D(36160,36064,34069+$,Fe.__webglTexture,X)}},this.readRenderTargetPixels=function(C,$,X,ee,fe,Fe,Oe){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=ye.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Oe!==void 0&&(Be=Be[Oe]),Be){let De=!1;Be!==x&&(ne.bindFramebuffer(36160,Be),De=!0);try{const ut=C.texture,ct=ut.format,Le=ut.type;if(ct!==en&&se.convert(ct)!==ne.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Le!==Us&&se.convert(Le)!==ne.getParameter(35738)&&!(Le===ai&&(re.isWebGL2||G.get("OES_texture_float")||G.get("WEBGL_color_buffer_float")))&&!(Le===ko&&(re.isWebGL2?G.get("EXT_color_buffer_float"):G.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ne.checkFramebufferStatus(36160)===36053?$>=0&&$<=C.width-ee&&X>=0&&X<=C.height-fe&&ne.readPixels($,X,ee,fe,se.convert(ct),se.convert(Le),Fe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{De&&ne.bindFramebuffer(36160,x)}}},this.copyFramebufferToTexture=function(C,$,X){X===void 0&&(X=0);const ee=Math.pow(2,-X),fe=Math.floor($.image.width*ee),Fe=Math.floor($.image.height*ee),Oe=se.convert($.format);S.setTexture2D($,0),ne.copyTexImage2D(3553,X,Oe,C.x,C.y,fe,Fe,0),K.unbindTexture()},this.copyTextureToTexture=function(C,$,X,ee){ee===void 0&&(ee=0);const fe=$.image.width,Fe=$.image.height,Oe=se.convert(X.format),Be=se.convert(X.type);S.setTexture2D(X,0),ne.pixelStorei(37440,X.flipY),ne.pixelStorei(37441,X.premultiplyAlpha),ne.pixelStorei(3317,X.unpackAlignment),$.isDataTexture?ne.texSubImage2D(3553,ee,C.x,C.y,fe,Fe,Oe,Be,$.image.data):$.isCompressedTexture?ne.compressedTexSubImage2D(3553,ee,C.x,C.y,$.mipmaps[0].width,$.mipmaps[0].height,Oe,$.mipmaps[0].data):ne.texSubImage2D(3553,ee,C.x,C.y,Oe,Be,$.image),ee===0&&X.generateMipmaps&&ne.generateMipmap(3553),K.unbindTexture()},this.initTexture=function(C){S.setTexture2D(C,0),K.unbindTexture()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Jh(e){Ea.call(this,e)}Jh.prototype=Object.assign(Object.create(Ea.prototype),{constructor:Jh,isWebGL1Renderer:!0});class kl{constructor(t,n){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new me(t),this.density=n!==void 0?n:25e-5}clone(){return new kl(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Wl{constructor(t,n,i){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new me(t),this.near=n!==void 0?n:1,this.far=i!==void 0?i:1e3}clone(){return new Wl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}let hd=class extends xe{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,n){return super.copy(t,n),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const n=super.toJSON(t);return this.background!==null&&(n.object.background=this.background.toJSON(t)),this.environment!==null&&(n.object.environment=this.environment.toJSON(t)),this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}};function Qt(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ma,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ee.generateUUID()}Object.defineProperty(Qt.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Qt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},clone:function(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ee.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new Qt(t,this.stride);return n.setUsage(this.usage),n},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ee.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const sr=new A;function Wi(e,t,n,i){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}Object.defineProperties(Wi.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}});Object.assign(Wi.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,n=this.data.count;t<n;t++)sr.x=this.getX(t),sr.y=this.getY(t),sr.z=this.getZ(t),sr.applyMatrix4(e),this.setXYZ(t,sr.x,sr.y,sr.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this},clone:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Me(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Wi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function ji(e){Se.call(this),this.type="SpriteMaterial",this.color=new me(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}ji.prototype=Object.create(Se.prototype);ji.prototype.constructor=ji;ji.prototype.isSpriteMaterial=!0;ji.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};let Zr;const Qs=new A,Jr=new A,Kr=new A,Qr=new ie,eo=new ie,yx=new Ie,Ja=new A,to=new A,Ka=new A,Mm=new ie,Gu=new ie,Sm=new ie;function Qo(e){if(xe.call(this),this.type="Sprite",Zr===void 0){Zr=new we;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Qt(t,5);Zr.setIndex([0,1,2,0,2,3]),Zr.setAttribute("position",new Wi(n,3,0,!1)),Zr.setAttribute("uv",new Wi(n,2,3,!1))}this.geometry=Zr,this.material=e!==void 0?e:new ji,this.center=new ie(.5,.5)}Qo.prototype=Object.assign(Object.create(xe.prototype),{constructor:Qo,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Jr.setFromMatrixScale(this.matrixWorld),yx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Kr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Jr.multiplyScalar(-Kr.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Qa(Ja.set(-.5,-.5,0),Kr,s,Jr,i,r),Qa(to.set(.5,-.5,0),Kr,s,Jr,i,r),Qa(Ka.set(.5,.5,0),Kr,s,Jr,i,r),Mm.set(0,0),Gu.set(1,0),Sm.set(1,1);let o=e.ray.intersectTriangle(Ja,to,Ka,!1,Qs);if(o===null&&(Qa(to.set(-.5,.5,0),Kr,s,Jr,i,r),Gu.set(0,1),o=e.ray.intersectTriangle(Ja,Ka,to,!1,Qs),o===null))return;const a=e.ray.origin.distanceTo(Qs);a<e.near||a>e.far||t.push({distance:a,point:Qs.clone(),uv:_t.getUV(Qs,Ja,to,Ka,Mm,Gu,Sm,new ie),face:null,object:this})},copy:function(e){return xe.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}});function Qa(e,t,n,i,r,s){Qr.subVectors(e,n).addScalar(.5).multiply(i),r!==void 0?(eo.x=s*Qr.x-r*Qr.y,eo.y=r*Qr.x+s*Qr.y):eo.copy(Qr),e.copy(t),e.x+=eo.x,e.y+=eo.y,e.applyMatrix4(yx)}const ec=new A,Tm=new A;function ea(){xe.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}ea.prototype=Object.assign(Object.create(xe.prototype),{constructor:ea,isLOD:!0,copy:function(e){xe.prototype.copy.call(this,e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){if(this.levels.length>0){ec.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(ec);this.getObjectForDistance(i).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){ec.setFromMatrixPosition(e.matrixWorld),Tm.setFromMatrixPosition(this.matrixWorld);const n=ec.distanceTo(Tm)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];t.object.levels.push({object:s.object.uuid,distance:s.distance})}return t}});function Kc(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),nt.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ie,this.bindMatrixInverse=new Ie}Kc.prototype=Object.assign(Object.create(nt.prototype),{constructor:Kc,isSkinnedMesh:!0,copy:function(e){return nt.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new je,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){nt.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:(function(){const e=new A,t=new je,n=new je,i=new A,r=new Ie;return function(s,o){const a=this.skeleton,c=this.geometry;t.fromBufferAttribute(c.attributes.skinIndex,s),n.fromBufferAttribute(c.attributes.skinWeight,s),e.fromBufferAttribute(c.attributes.position,s).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let l=0;l<4;l++){const h=n.getComponent(l);if(h!==0){const u=t.getComponent(l);r.multiplyMatrices(a.bones[u].matrixWorld,a.boneInverses[u]),o.addScaledVector(i.copy(e).applyMatrix4(r),h)}}return o.applyMatrix4(this.bindMatrixInverse)}})()});const Em=new Ie,vL=new Ie;function Qc(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ie)}}Object.assign(Qc.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const n=new Ie;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.getInverse(n.parent.matrixWorld),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=e.length;r<s;r++){const o=e[r]?e[r].matrixWorld:vL;Em.multiplyMatrices(o,t[r]),Em.toArray(n,r*16)}i!==void 0&&(i.needsUpdate=!0)},clone:function(){return new Qc(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function Kh(){xe.call(this),this.type="Bone"}Kh.prototype=Object.assign(Object.create(xe.prototype),{constructor:Kh,isBone:!0});const Am=new Ie,Rm=new Ie,tc=[],no=new nt;function el(e,t,n){nt.call(this,e,t),this.instanceMatrix=new Me(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}el.prototype=Object.assign(Object.create(nt.prototype),{constructor:el,isInstancedMesh:!0,copy:function(e){return nt.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},setColorAt:function(e,t){this.instanceColor===null&&(this.instanceColor=new Me(new Float32Array(this.count*3),3)),t.toArray(this.instanceColor.array,e*3)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){const n=this.matrixWorld,i=this.count;if(no.geometry=this.geometry,no.material=this.material,no.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Am),Rm.multiplyMatrices(n,Am),no.matrixWorld=Rm,no.raycast(e,tc);for(let s=0,o=tc.length;s<o;s++){const a=tc[s];a.instanceId=r,a.object=this,t.push(a)}tc.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){}});function rt(e){Se.call(this),this.type="LineBasicMaterial",this.color=new me(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}rt.prototype=Object.create(Se.prototype);rt.prototype.constructor=rt;rt.prototype.isLineBasicMaterial=!0;rt.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const Cm=new A,Lm=new A,Pm=new Ie,nc=new zs,ic=new xi;function fn(e,t,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),xe.call(this),this.type="Line",this.geometry=e!==void 0?e:new we,this.material=t!==void 0?t:new rt,this.updateMorphTargets()}fn.prototype=Object.assign(Object.create(xe.prototype),{constructor:fn,isLine:!0,copy:function(e){return xe.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Cm.fromBufferAttribute(t,i-1),Lm.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Cm.distanceTo(Lm);e.setAttribute("lineDistance",new he(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;n[0]=0;for(let i=1,r=t.length;i<r;i++)n[i]=n[i-1],n[i]+=t[i-1].distanceTo(t[i])}return this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),ic.copy(n.boundingSphere),ic.applyMatrix4(i),ic.radius+=r,e.ray.intersectsSphere(ic)===!1)return;Pm.getInverse(i),nc.copy(e.ray).applyMatrix4(Pm);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new A,c=new A,l=new A,h=new A,u=this.isLineSegments?2:1;if(n.isBufferGeometry){const f=n.index,p=n.attributes.position;if(f!==null){const y=f.array;for(let v=0,g=y.length-1;v<g;v+=u){const m=y[v],x=y[v+1];if(a.fromBufferAttribute(p,m),c.fromBufferAttribute(p,x),nc.distanceSqToSegment(a,c,h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const T=e.ray.origin.distanceTo(h);T<e.near||T>e.far||t.push({distance:T,point:l.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else for(let y=0,v=p.count-1;y<v;y+=u){if(a.fromBufferAttribute(p,y),c.fromBufferAttribute(p,y+1),nc.distanceSqToSegment(a,c,h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const m=e.ray.origin.distanceTo(h);m<e.near||m>e.far||t.push({distance:m,point:l.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const f=n.vertices,d=f.length;for(let p=0;p<d-1;p+=u){if(nc.distanceSqToSegment(f[p],f[p+1],h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(h);v<e.near||v>e.far||t.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const rc=new A,sc=new A;function Wt(e,t){fn.call(this,e,t),this.type="LineSegments"}Wt.prototype=Object.assign(Object.create(fn.prototype),{constructor:Wt,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)rc.fromBufferAttribute(t,i),sc.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+rc.distanceTo(sc);e.setAttribute("lineDistance",new he(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;for(let i=0,r=t.length;i<r;i+=2)rc.copy(t[i]),sc.copy(t[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+rc.distanceTo(sc)}return this}});function tl(e,t){fn.call(this,e,t),this.type="LineLoop"}tl.prototype=Object.assign(Object.create(fn.prototype),{constructor:tl,isLineLoop:!0});function En(e){Se.call(this),this.type="PointsMaterial",this.color=new me(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}En.prototype=Object.create(Se.prototype);En.prototype.constructor=En;En.prototype.isPointsMaterial=!0;En.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const Im=new Ie,Qh=new zs,oc=new xi,ac=new A;function As(e,t){xe.call(this),this.type="Points",this.geometry=e!==void 0?e:new we,this.material=t!==void 0?t:new En,this.updateMorphTargets()}As.prototype=Object.assign(Object.create(xe.prototype),{constructor:As,isPoints:!0,copy:function(e){return xe.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),oc.copy(n.boundingSphere),oc.applyMatrix4(i),oc.radius+=r,e.ray.intersectsSphere(oc)===!1)return;Im.getInverse(i),Qh.copy(e.ray).applyMatrix4(Im);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position;if(a!==null){const h=a.array;for(let u=0,f=h.length;u<f;u++){const d=h[u];ac.fromBufferAttribute(l,d),Vu(ac,d,o,i,e,t,this)}}else for(let h=0,u=l.count;h<u;h++)ac.fromBufferAttribute(l,h),Vu(ac,h,o,i,e,t,this)}else{const a=n.vertices;for(let c=0,l=a.length;c<l;c++)Vu(a[c],c,o,i,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function Vu(e,t,n,i,r,s,o){const a=Qh.distanceSqToPoint(e);if(a<n){const c=new A;Qh.closestPointToPoint(e,c),c.applyMatrix4(i);const l=r.ray.origin.distanceTo(c);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:t,face:null,object:o})}}function ef(e,t,n,i,r,s,o,a,c){Xe.call(this,e,t,n,i,r,s,o,a,c),this.format=o!==void 0?o:Fi,this.minFilter=s!==void 0?s:vt,this.magFilter=r!==void 0?r:vt,this.generateMipmaps=!1;const l=this;function h(){l.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}ef.prototype=Object.assign(Object.create(Xe.prototype),{constructor:ef,isVideoTexture:!0,update:function(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Rs(e,t,n,i,r,s,o,a,c,l,h,u){Xe.call(this,null,s,o,a,c,l,i,r,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}Rs.prototype=Object.create(Xe.prototype);Rs.prototype.constructor=Rs;Rs.prototype.isCompressedTexture=!0;function ta(e,t,n,i,r,s,o,a,c){Xe.call(this,e,t,n,i,r,s,o,a,c),this.needsUpdate=!0}ta.prototype=Object.create(Xe.prototype);ta.prototype.constructor=ta;ta.prototype.isCanvasTexture=!0;function na(e,t,n,i,r,s,o,a,c,l){if(l=l!==void 0?l:vr,l!==vr&&l!==ws)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&l===vr&&(n=Vo),n===void 0&&l===ws&&(n=gs),Xe.call(this,null,i,r,s,o,a,l,n,c),this.image={width:e,height:t},this.magFilter=o!==void 0?o:pt,this.minFilter=a!==void 0?a:pt,this.flipY=!1,this.generateMipmaps=!1}na.prototype=Object.create(Xe.prototype);na.prototype.constructor=na;na.prototype.isDepthTexture=!0;let xL=0;const Dn=new Ie,ku=new xe,cc=new A;function qe(){Object.defineProperty(this,"id",{value:xL+=2}),this.uuid=Ee.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}qe.prototype=Object.assign(Object.create(Xn.prototype),{constructor:qe,isGeometry:!0,applyMatrix4:function(e){const t=new Ht().getNormalMatrix(e);for(let n=0,i=this.vertices.length;n<i;n++)this.vertices[n].applyMatrix4(e);for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal.applyMatrix3(t).normalize();for(let s=0,o=r.vertexNormals.length;s<o;s++)r.vertexNormals[s].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return Dn.makeRotationX(e),this.applyMatrix4(Dn),this},rotateY:function(e){return Dn.makeRotationY(e),this.applyMatrix4(Dn),this},rotateZ:function(e){return Dn.makeRotationZ(e),this.applyMatrix4(Dn),this},translate:function(e,t,n){return Dn.makeTranslation(e,t,n),this.applyMatrix4(Dn),this},scale:function(e,t,n){return Dn.makeScale(e,t,n),this.applyMatrix4(Dn),this},lookAt:function(e){return ku.lookAt(e),ku.updateMatrix(),this.applyMatrix4(ku.matrix),this},fromBufferGeometry:function(e){const t=this,n=e.index!==null?e.index:void 0,i=e.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,s=i.normal,o=i.color,a=i.uv,c=i.uv2;c!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<r.count;u++)t.vertices.push(new A().fromBufferAttribute(r,u)),o!==void 0&&t.colors.push(new me().fromBufferAttribute(o,u));function l(u,f,d,p){const y=o===void 0?[]:[t.colors[u].clone(),t.colors[f].clone(),t.colors[d].clone()],v=s===void 0?[]:[new A().fromBufferAttribute(s,u),new A().fromBufferAttribute(s,f),new A().fromBufferAttribute(s,d)],g=new qo(u,f,d,v,y,p);t.faces.push(g),a!==void 0&&t.faceVertexUvs[0].push([new ie().fromBufferAttribute(a,u),new ie().fromBufferAttribute(a,f),new ie().fromBufferAttribute(a,d)]),c!==void 0&&t.faceVertexUvs[1].push([new ie().fromBufferAttribute(c,u),new ie().fromBufferAttribute(c,f),new ie().fromBufferAttribute(c,d)])}const h=e.groups;if(h.length>0)for(let u=0;u<h.length;u++){const f=h[u],d=f.start,p=f.count;for(let y=d,v=d+p;y<v;y+=3)n!==void 0?l(n.getX(y),n.getX(y+1),n.getX(y+2),f.materialIndex):l(y,y+1,y+2,f.materialIndex)}else if(n!==void 0)for(let u=0;u<n.count;u+=3)l(n.getX(u),n.getX(u+1),n.getX(u+2));else for(let u=0;u<r.count;u+=3)l(u,u+1,u+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(cc).negate(),this.translate(cc.x,cc.y,cc.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,i=new Ie;return i.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const e=new A,t=new A;for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,o),t.subVectors(s,o),e.cross(t),e.normalize(),r.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);const t=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)t[n]=new A;if(e){const n=new A,i=new A;for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=this.vertices[o.a],c=this.vertices[o.b],l=this.vertices[o.c];n.subVectors(l,c),i.subVectors(a,c),n.cross(i),t[o.a].add(n),t[o.b].add(n),t[o.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)t[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=r.vertexNormals;s.length===3?(s[0].copy(t[r.a]),s[1].copy(t[r.b]),s[2].copy(t[r.c])):(s[0]=t[r.a].clone(),s[1]=t[r.b].clone(),s[2]=t[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const n=this.faces[e],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let r=0,s=i.vertexNormals.length;r<s;r++)i.__originalVertexNormals[r]?i.__originalVertexNormals[r].copy(i.vertexNormals[r]):i.__originalVertexNormals[r]=i.vertexNormals[r].clone()}const e=new qe;e.faces=this.faces;for(let t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const r=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(let o=0,a=this.faces.length;o<a;o++){const c=new A,l={a:new A,b:new A,c:new A};r.push(c),s.push(l)}}const i=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=i.faceNormals[r],c=i.vertexNormals[r];a.copy(o.normal),c.a.copy(o.vertexNormals[0]),c.b.copy(o.vertexNormals[1]),c.c.copy(o.vertexNormals[2])}}for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Yn),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new xi),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}let i;const r=this.vertices.length,s=this.vertices,o=e.vertices,a=this.faces,c=e.faces,l=this.colors,h=e.colors;n===void 0&&(n=0),t!==void 0&&(i=new Ht().getNormalMatrix(t));for(let u=0,f=o.length;u<f;u++){const p=o[u].clone();t!==void 0&&p.applyMatrix4(t),s.push(p)}for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone());for(let u=0,f=c.length;u<f;u++){const d=c[u];let p,y;const v=d.vertexNormals,g=d.vertexColors,m=new qo(d.a+r,d.b+r,d.c+r);m.normal.copy(d.normal),i!==void 0&&m.normal.applyMatrix3(i).normalize();for(let x=0,_=v.length;x<_;x++)p=v[x].clone(),i!==void 0&&p.applyMatrix3(i).normalize(),m.vertexNormals.push(p);m.color.copy(d.color);for(let x=0,_=g.length;x<_;x++)y=g[x],m.vertexColors.push(y.clone());m.materialIndex=d.materialIndex+n,a.push(m)}for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let p=0,y=d.length;p<y;p++){const v=d[p],g=[];for(let m=0,x=v.length;m<x;m++)g.push(v[m].clone());this.faceVertexUvs[u].push(g)}}},mergeMesh:function(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){const e={},t=[],n=[],r=Math.pow(10,4);for(let a=0,c=this.vertices.length;a<c;a++){const l=this.vertices[a],h=Math.round(l.x*r)+"_"+Math.round(l.y*r)+"_"+Math.round(l.z*r);e[h]===void 0?(e[h]=a,t.push(this.vertices[a]),n[a]=t.length-1):n[a]=n[e[h]]}const s=[];for(let a=0,c=this.faces.length;a<c;a++){const l=this.faces[a];l.a=n[l.a],l.b=n[l.b],l.c=n[l.c];const h=[l.a,l.b,l.c];for(let u=0;u<3;u++)if(h[u]===h[(u+1)%3]){s.push(a);break}}for(let a=s.length-1;a>=0;a--){const c=s[a];this.faces.splice(c,1);for(let l=0,h=this.faceVertexUvs.length;l<h;l++)this.faceVertexUvs[l].splice(c,1)}const o=this.vertices.length-t.length;return this.vertices=t,o},setFromPoints:function(e){this.vertices=[];for(let t=0,n=e.length;t<n;t++){const i=e[t];this.vertices.push(new A(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let a=0;a<t;a++)e[a]._id=a;function n(a,c){return a.materialIndex-c.materialIndex}e.sort(n);const i=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let s,o;i&&i.length===t&&(s=[]),r&&r.length===t&&(o=[]);for(let a=0;a<t;a++){const c=e[a]._id;s&&s.push(i[c]),o&&o.push(r[c])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){const d=this.parameters;for(const p in d)d[p]!==void 0&&(e[p]=d[p]);return e}const t=[];for(let d=0;d<this.vertices.length;d++){const p=this.vertices[d];t.push(p.x,p.y,p.z)}const n=[],i=[],r={},s=[],o={},a=[],c={};for(let d=0;d<this.faces.length;d++){const p=this.faces[d],y=!0,v=!1,g=this.faceVertexUvs[0][d]!==void 0,m=p.normal.length()>0,x=p.vertexNormals.length>0,_=p.color.r!==1||p.color.g!==1||p.color.b!==1,T=p.vertexColors.length>0;let b=0;if(b=l(b,0,0),b=l(b,1,y),b=l(b,2,v),b=l(b,3,g),b=l(b,4,m),b=l(b,5,x),b=l(b,6,_),b=l(b,7,T),n.push(b),n.push(p.a,p.b,p.c),n.push(p.materialIndex),g){const L=this.faceVertexUvs[0][d];n.push(f(L[0]),f(L[1]),f(L[2]))}if(m&&n.push(h(p.normal)),x){const L=p.vertexNormals;n.push(h(L[0]),h(L[1]),h(L[2]))}if(_&&n.push(u(p.color)),T){const L=p.vertexColors;n.push(u(L[0]),u(L[1]),u(L[2]))}}function l(d,p,y){return y?d|1<<p:d&~(1<<p)}function h(d){const p=d.x.toString()+d.y.toString()+d.z.toString();return r[p]!==void 0||(r[p]=i.length/3,i.push(d.x,d.y,d.z)),r[p]}function u(d){const p=d.r.toString()+d.g.toString()+d.b.toString();return o[p]!==void 0||(o[p]=s.length,s.push(d.getHex())),o[p]}function f(d){const p=d.x.toString()+d.y.toString();return c[p]!==void 0||(c[p]=a.length/2,a.push(d.x,d.y)),c[p]}return e.data={},e.data.vertices=t,e.data.normals=i,s.length>0&&(e.data.colors=s),a.length>0&&(e.data.uvs=[a]),e.data.faces=n,e},clone:function(){return new qe().copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let u=0,f=t.length;u<f;u++)this.vertices.push(t[u].clone());const n=e.colors;for(let u=0,f=n.length;u<f;u++)this.colors.push(n[u].clone());const i=e.faces;for(let u=0,f=i.length;u<f;u++)this.faces.push(i[u].clone());for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let p=0,y=d.length;p<y;p++){const v=d[p],g=[];for(let m=0,x=v.length;m<x;m++){const _=v[m];g.push(_.clone())}this.faceVertexUvs[u].push(g)}}const r=e.morphTargets;for(let u=0,f=r.length;u<f;u++){const d={};if(d.name=r[u].name,r[u].vertices!==void 0){d.vertices=[];for(let p=0,y=r[u].vertices.length;p<y;p++)d.vertices.push(r[u].vertices[p].clone())}if(r[u].normals!==void 0){d.normals=[];for(let p=0,y=r[u].normals.length;p<y;p++)d.normals.push(r[u].normals[p].clone())}this.morphTargets.push(d)}const s=e.morphNormals;for(let u=0,f=s.length;u<f;u++){const d={};if(s[u].vertexNormals!==void 0){d.vertexNormals=[];for(let p=0,y=s[u].vertexNormals.length;p<y;p++){const v=s[u].vertexNormals[p],g={};g.a=v.a.clone(),g.b=v.b.clone(),g.c=v.c.clone(),d.vertexNormals.push(g)}}if(s[u].faceNormals!==void 0){d.faceNormals=[];for(let p=0,y=s[u].faceNormals.length;p<y;p++)d.faceNormals.push(s[u].faceNormals[p].clone())}this.morphNormals.push(d)}const o=e.skinWeights;for(let u=0,f=o.length;u<f;u++)this.skinWeights.push(o[u].clone());const a=e.skinIndices;for(let u=0,f=a.length;u<f;u++)this.skinIndices.push(a[u].clone());const c=e.lineDistances;for(let u=0,f=c.length;u<f;u++)this.lineDistances.push(c[u]);const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class tf extends qe{constructor(t,n,i,r,s,o){super(),this.type="BoxGeometry",this.parameters={width:t,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:o},this.fromBufferGeometry(new Sa(t,n,i,r,s,o)),this.mergeVertices()}}class fd extends we{constructor(t,n,i,r){super(),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:n,thetaStart:i,thetaLength:r},t=t||1,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2;const s=[],o=[],a=[],c=[],l=new A,h=new ie;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let u=0,f=3;u<=n;u++,f+=3){const d=i+u/n*r;l.x=t*Math.cos(d),l.y=t*Math.sin(d),o.push(l.x,l.y,l.z),a.push(0,0,1),h.x=(o[f]/t+1)/2,h.y=(o[f+1]/t+1)/2,c.push(h.x,h.y)}for(let u=1;u<=n;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new he(o,3)),this.setAttribute("normal",new he(a,3)),this.setAttribute("uv",new he(c,2))}}class vx extends qe{constructor(t,n,i,r){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:n,thetaStart:i,thetaLength:r},this.fromBufferGeometry(new fd(t,n,i,r)),this.mergeVertices()}}class Aa extends we{constructor(t,n,i,r,s,o,a,c){super(),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c};const l=this;t=t!==void 0?t:1,n=n!==void 0?n:1,i=i||1,r=Math.floor(r)||8,s=Math.floor(s)||1,o=o!==void 0?o:!1,a=a!==void 0?a:0,c=c!==void 0?c:Math.PI*2;const h=[],u=[],f=[],d=[];let p=0;const y=[],v=i/2;let g=0;m(),o===!1&&(t>0&&x(!0),n>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new he(u,3)),this.setAttribute("normal",new he(f,3)),this.setAttribute("uv",new he(d,2));function m(){const _=new A,T=new A;let b=0;const L=(n-t)/i;for(let D=0;D<=s;D++){const I=[],Y=D/s,z=Y*(n-t)+t;for(let V=0;V<=r;V++){const k=V/r,O=k*c+a,N=Math.sin(O),W=Math.cos(O);T.x=z*N,T.y=-Y*i+v,T.z=z*W,u.push(T.x,T.y,T.z),_.set(N,L,W).normalize(),f.push(_.x,_.y,_.z),d.push(k,1-Y),I.push(p++)}y.push(I)}for(let D=0;D<r;D++)for(let I=0;I<s;I++){const Y=y[I][D],z=y[I+1][D],V=y[I+1][D+1],k=y[I][D+1];h.push(Y,z,k),h.push(z,V,k),b+=6}l.addGroup(g,b,0),g+=b}function x(_){const T=p,b=new ie,L=new A;let D=0;const I=_===!0?t:n,Y=_===!0?1:-1;for(let V=1;V<=r;V++)u.push(0,v*Y,0),f.push(0,Y,0),d.push(.5,.5),p++;const z=p;for(let V=0;V<=r;V++){const O=V/r*c+a,N=Math.cos(O),W=Math.sin(O);L.x=I*W,L.y=v*Y,L.z=I*N,u.push(L.x,L.y,L.z),f.push(0,Y,0),b.x=N*.5+.5,b.y=W*.5*Y+.5,d.push(b.x,b.y),p++}for(let V=0;V<r;V++){const k=T+V,O=z+V;_===!0?h.push(O,O+1,k):h.push(O+1,O,k),D+=3}l.addGroup(g,D,_===!0?1:2),g+=D}}}class dd extends qe{constructor(t,n,i,r,s,o,a,c){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c},this.fromBufferGeometry(new Aa(t,n,i,r,s,o,a,c)),this.mergeVertices()}}class xx extends dd{constructor(t,n,i,r,s,o,a){super(0,t,n,i,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}}class _x extends Aa{constructor(t,n,i,r,s,o,a){super(0,t,n,i,r,s,o,a),this.type="ConeBufferGeometry",this.parameters={radius:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}}class Dr extends we{constructor(t,n,i,r){super(),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:n,radius:i,detail:r},i=i||1,r=r||0;const s=[],o=[];a(r),l(i),h(),this.setAttribute("position",new he(s,3)),this.setAttribute("normal",new he(s.slice(),3)),this.setAttribute("uv",new he(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(m){const x=new A,_=new A,T=new A;for(let b=0;b<n.length;b+=3)d(n[b+0],x),d(n[b+1],_),d(n[b+2],T),c(x,_,T,m)}function c(m,x,_,T){const b=T+1,L=[];for(let D=0;D<=b;D++){L[D]=[];const I=m.clone().lerp(_,D/b),Y=x.clone().lerp(_,D/b),z=b-D;for(let V=0;V<=z;V++)V===0&&D===b?L[D][V]=I:L[D][V]=I.clone().lerp(Y,V/z)}for(let D=0;D<b;D++)for(let I=0;I<2*(b-D)-1;I++){const Y=Math.floor(I/2);I%2===0?(f(L[D][Y+1]),f(L[D+1][Y]),f(L[D][Y])):(f(L[D][Y+1]),f(L[D+1][Y+1]),f(L[D+1][Y]))}}function l(m){const x=new A;for(let _=0;_<s.length;_+=3)x.x=s[_+0],x.y=s[_+1],x.z=s[_+2],x.normalize().multiplyScalar(m),s[_+0]=x.x,s[_+1]=x.y,s[_+2]=x.z}function h(){const m=new A;for(let x=0;x<s.length;x+=3){m.x=s[x+0],m.y=s[x+1],m.z=s[x+2];const _=v(m)/2/Math.PI+.5,T=g(m)/Math.PI+.5;o.push(_,1-T)}p(),u()}function u(){for(let m=0;m<o.length;m+=6){const x=o[m+0],_=o[m+2],T=o[m+4],b=Math.max(x,_,T),L=Math.min(x,_,T);b>.9&&L<.1&&(x<.2&&(o[m+0]+=1),_<.2&&(o[m+2]+=1),T<.2&&(o[m+4]+=1))}}function f(m){s.push(m.x,m.y,m.z)}function d(m,x){const _=m*3;x.x=t[_+0],x.y=t[_+1],x.z=t[_+2]}function p(){const m=new A,x=new A,_=new A,T=new A,b=new ie,L=new ie,D=new ie;for(let I=0,Y=0;I<s.length;I+=9,Y+=6){m.set(s[I+0],s[I+1],s[I+2]),x.set(s[I+3],s[I+4],s[I+5]),_.set(s[I+6],s[I+7],s[I+8]),b.set(o[Y+0],o[Y+1]),L.set(o[Y+2],o[Y+3]),D.set(o[Y+4],o[Y+5]),T.copy(m).add(x).add(_).divideScalar(3);const z=v(T);y(b,Y+0,m,z),y(L,Y+2,x,z),y(D,Y+4,_,z)}}function y(m,x,_,T){T<0&&m.x===1&&(o[x]=m.x-1),_.x===0&&_.z===0&&(o[x]=T/2/Math.PI+.5)}function v(m){return Math.atan2(m.z,-m.x)}function g(m){return Math.atan2(-m.y,Math.sqrt(m.x*m.x+m.z*m.z))}}}class pd extends Dr{constructor(t,n){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,t,n),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:n}}}class bx extends qe{constructor(t,n){super(),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:n},this.fromBufferGeometry(new pd(t,n)),this.mergeVertices()}}const lc=new A,uc=new A,Wu=new A,hc=new _t;class md extends we{constructor(t,n){super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:n},n=n!==void 0?n:1,t.isGeometry&&(t=new we().fromGeometry(t));const r=Math.pow(10,4),s=Math.cos(Ee.DEG2RAD*n),o=t.getIndex(),a=t.getAttribute("position"),c=o?o.count:a.count,l=[0,0,0],h=["a","b","c"],u=new Array(3),f={},d=[];for(let p=0;p<c;p+=3){o?(l[0]=o.getX(p),l[1]=o.getX(p+1),l[2]=o.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:y,b:v,c:g}=hc;if(y.fromBufferAttribute(a,l[0]),v.fromBufferAttribute(a,l[1]),g.fromBufferAttribute(a,l[2]),hc.getNormal(Wu),u[0]=`${Math.round(y.x*r)},${Math.round(y.y*r)},${Math.round(y.z*r)}`,u[1]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,u[2]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let m=0;m<3;m++){const x=(m+1)%3,_=u[m],T=u[x],b=hc[h[m]],L=hc[h[x]],D=`${_}_${T}`,I=`${T}_${_}`;I in f&&f[I]?(Wu.dot(f[I].normal)<=s&&(d.push(b.x,b.y,b.z),d.push(L.x,L.y,L.z)),f[I]=null):D in f||(f[D]={index0:l[m],index1:l[x],normal:Wu.clone()})}}for(const p in f)if(f[p]){const{index0:y,index1:v}=f[p];lc.fromBufferAttribute(a,y),uc.fromBufferAttribute(a,v),d.push(lc.x,lc.y,lc.z),d.push(uc.x,uc.y,uc.z)}this.setAttribute("position",new he(d,3))}}const _L={triangulate:function(e,t,n){n=n||2;const i=t&&t.length,r=i?t[0]*n:e.length;let s=wx(e,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,l,h,u,f,d;if(i&&(s=TL(e,t,s,n)),e.length>80*n){a=l=e[0],c=h=e[1];for(let p=n;p<r;p+=n)u=e[p],f=e[p+1],u<a&&(a=u),f<c&&(c=f),u>l&&(l=u),f>h&&(h=f);d=Math.max(l-a,h-c),d=d!==0?1/d:0}return ia(s,o,n,a,c,d),o}};function wx(e,t,n,i,r){let s,o;if(r===FL(e,t,n,i)>0)for(s=t;s<n;s+=i)o=Om(s,e[s],e[s+1],o);else for(s=n-i;s>=t;s-=i)o=Om(s,e[s],e[s+1],o);return o&&jl(o,o.next)&&(sa(o),o=o.next),o}function qi(e,t){if(!e)return e;t||(t=e);let n=e,i;do if(i=!1,!n.steiner&&(jl(n,n.next)||st(n.prev,n,n.next)===0)){if(sa(n),n=t=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==t);return t}function ia(e,t,n,i,r,s,o){if(!e)return;!o&&s&&LL(e,i,r,s);let a=e,c,l;for(;e.prev!==e.next;){if(c=e.prev,l=e.next,s?wL(e,i,r,s):bL(e)){t.push(c.i/n),t.push(e.i/n),t.push(l.i/n),sa(e),e=l.next,a=l.next;continue}if(e=l,e===a){o?o===1?(e=ML(qi(e),t,n),ia(e,t,n,i,r,s,2)):o===2&&SL(e,t,n,i,r,s):ia(qi(e),t,n,i,r,s,1);break}}}function bL(e){const t=e.prev,n=e,i=e.next;if(st(t,n,i)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(ls(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&st(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function wL(e,t,n,i){const r=e.prev,s=e,o=e.next;if(st(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,c=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,l=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=nf(a,c,t,n,i),f=nf(l,h,t,n,i);let d=e.prevZ,p=e.nextZ;for(;d&&d.z>=u&&p&&p.z<=f;){if(d!==e.prev&&d!==e.next&&ls(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&st(d.prev,d,d.next)>=0||(d=d.prevZ,p!==e.prev&&p!==e.next&&ls(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&st(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&ls(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&st(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==e.prev&&p!==e.next&&ls(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&st(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function ML(e,t,n){let i=e;do{const r=i.prev,s=i.next.next;!jl(r,s)&&Mx(r,i,i.next,s)&&ra(r,s)&&ra(s,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(s.i/n),sa(i),sa(i.next),i=e=s),i=i.next}while(i!==e);return qi(i)}function SL(e,t,n,i,r,s){let o=e;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&OL(o,a)){let c=Sx(o,a);o=qi(o,o.next),c=qi(c,c.next),ia(o,t,n,i,r,s),ia(c,t,n,i,r,s);return}a=a.next}o=o.next}while(o!==e)}function TL(e,t,n,i){const r=[];let s,o,a,c,l;for(s=0,o=t.length;s<o;s++)a=t[s]*i,c=s<o-1?t[s+1]*i:e.length,l=wx(e,a,c,i,!1),l===l.next&&(l.steiner=!0),r.push(IL(l));for(r.sort(EL),s=0;s<r.length;s++)AL(r[s],n),n=qi(n,n.next);return n}function EL(e,t){return e.x-t.x}function AL(e,t){if(t=RL(e,t),t){const n=Sx(t,e);qi(t,t.next),qi(n,n.next)}}function RL(e,t){let n=t;const i=e.x,r=e.y;let s=-1/0,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const f=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>s){if(s=f,f===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(i===s)return o;const a=o,c=o.x,l=o.y;let h=1/0,u;n=o;do i>=n.x&&n.x>=c&&i!==n.x&&ls(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(u=Math.abs(r-n.y)/(i-n.x),ra(n,e)&&(u<h||u===h&&(n.x>o.x||n.x===o.x&&CL(o,n)))&&(o=n,h=u)),n=n.next;while(n!==a);return o}function CL(e,t){return st(e.prev,e,t.prev)<0&&st(t.next,e,e.next)<0}function LL(e,t,n,i){let r=e;do r.z===null&&(r.z=nf(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,PL(r)}function PL(e){let t,n,i,r,s,o,a,c,l=1;do{for(n=e,e=null,s=null,o=0;n;){for(o++,i=n,a=0,t=0;t<l&&(a++,i=i.nextZ,!!i);t++);for(c=l;a>0||c>0&&i;)a!==0&&(c===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;n=i}s.nextZ=null,l*=2}while(o>1);return e}function nf(e,t,n,i,r){return e=32767*(e-n)*r,t=32767*(t-i)*r,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function IL(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function ls(e,t,n,i,r,s,o,a){return(r-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(i-a)-(n-o)*(t-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function OL(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!DL(e,t)&&(ra(e,t)&&ra(t,e)&&NL(e,t)&&(st(e.prev,e,t.prev)||st(e,t.prev,t))||jl(e,t)&&st(e.prev,e,e.next)>0&&st(t.prev,t,t.next)>0)}function st(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function jl(e,t){return e.x===t.x&&e.y===t.y}function Mx(e,t,n,i){const r=dc(st(e,t,n)),s=dc(st(e,t,i)),o=dc(st(n,i,e)),a=dc(st(n,i,t));return!!(r!==s&&o!==a||r===0&&fc(e,n,t)||s===0&&fc(e,i,t)||o===0&&fc(n,e,i)||a===0&&fc(n,t,i))}function fc(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function dc(e){return e>0?1:e<0?-1:0}function DL(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Mx(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function ra(e,t){return st(e.prev,e,e.next)<0?st(e,t,e.next)>=0&&st(e,e.prev,t)>=0:st(e,t,e.prev)<0||st(e,e.next,t)<0}function NL(e,t){let n=e,i=!1;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==e);return i}function Sx(e,t){const n=new rf(e.i,e.x,e.y),i=new rf(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Om(e,t,n,i){const r=new rf(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function sa(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function rf(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function FL(e,t,n,i){let r=0;for(let s=t,o=n-i;s<n;s+=i)r+=(e[o]-e[s])*(e[s+1]+e[o+1]),o=s;return r}const di={area:function(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5},isClockWise:function(e){return di.area(e)<0},triangulateShape:function(e,t){const n=[],i=[],r=[];Dm(e),Nm(n,e);let s=e.length;t.forEach(Dm);for(let a=0;a<t.length;a++)i.push(s),s+=t[a].length,Nm(n,t[a]);const o=_L.triangulate(n,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function Dm(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Nm(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class Ra extends we{constructor(t,n){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:n},t=Array.isArray(t)?t:[t];const i=this,r=[],s=[];for(let a=0,c=t.length;a<c;a++){const l=t[a];o(l)}this.setAttribute("position",new he(r,3)),this.setAttribute("uv",new he(s,2)),this.computeVertexNormals();function o(a){const c=[],l=n.curveSegments!==void 0?n.curveSegments:12,h=n.steps!==void 0?n.steps:1;let u=n.depth!==void 0?n.depth:100,f=n.bevelEnabled!==void 0?n.bevelEnabled:!0,d=n.bevelThickness!==void 0?n.bevelThickness:6,p=n.bevelSize!==void 0?n.bevelSize:d-2,y=n.bevelOffset!==void 0?n.bevelOffset:0,v=n.bevelSegments!==void 0?n.bevelSegments:3;const g=n.extrudePath,m=n.UVGenerator!==void 0?n.UVGenerator:BL;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=n.amount);let x,_=!1,T,b,L,D;g&&(x=g.getSpacedPoints(h),_=!0,f=!1,T=g.computeFrenetFrames(h,!1),b=new A,L=new A,D=new A),f||(v=0,d=0,p=0,y=0);const I=a.extractPoints(l);let Y=I.shape;const z=I.holes;if(!di.isClockWise(Y)){Y=Y.reverse();for(let S=0,E=z.length;S<E;S++){const P=z[S];di.isClockWise(P)&&(z[S]=P.reverse())}}const k=di.triangulateShape(Y,z),O=Y;for(let S=0,E=z.length;S<E;S++){const P=z[S];Y=Y.concat(P)}function N(S,E,P){return E||console.error("THREE.ExtrudeGeometry: vec does not exist"),E.clone().multiplyScalar(P).add(S)}const W=Y.length,J=k.length;function te(S,E,P){let H,B,w;const M=S.x-E.x,U=S.y-E.y,F=P.x-S.x,R=P.y-S.y,q=M*M+U*U,j=M*R-U*F;if(Math.abs(j)>Number.EPSILON){const Q=Math.sqrt(q),Z=Math.sqrt(F*F+R*R),se=E.x-U/Q,ce=E.y+M/Q,pe=P.x-R/Z,ue=P.y+F/Z,ve=((pe-se)*R-(ue-ce)*F)/(M*R-U*F);H=se+M*ve-S.x,B=ce+U*ve-S.y;const Ue=H*H+B*B;if(Ue<=2)return new ie(H,B);w=Math.sqrt(Ue/2)}else{let Q=!1;M>Number.EPSILON?F>Number.EPSILON&&(Q=!0):M<-Number.EPSILON?F<-Number.EPSILON&&(Q=!0):Math.sign(U)===Math.sign(R)&&(Q=!0),Q?(H=-U,B=M,w=Math.sqrt(q)):(H=M,B=U,w=Math.sqrt(q/2))}return new ie(H/w,B/w)}const ae=[];for(let S=0,E=O.length,P=E-1,H=S+1;S<E;S++,P++,H++)P===E&&(P=0),H===E&&(H=0),ae[S]=te(O[S],O[P],O[H]);const ge=[];let le,_e=ae.concat();for(let S=0,E=z.length;S<E;S++){const P=z[S];le=[];for(let H=0,B=P.length,w=B-1,M=H+1;H<B;H++,w++,M++)w===B&&(w=0),M===B&&(M=0),le[H]=te(P[H],P[w],P[M]);ge.push(le),_e=_e.concat(le)}for(let S=0;S<v;S++){const E=S/v,P=d*Math.cos(E*Math.PI/2),H=p*Math.sin(E*Math.PI/2)+y;for(let B=0,w=O.length;B<w;B++){const M=N(O[B],ae[B],H);G(M.x,M.y,-P)}for(let B=0,w=z.length;B<w;B++){const M=z[B];le=ge[B];for(let U=0,F=M.length;U<F;U++){const R=N(M[U],le[U],H);G(R.x,R.y,-P)}}}const Te=p+y;for(let S=0;S<W;S++){const E=f?N(Y[S],_e[S],Te):Y[S];_?(L.copy(T.normals[0]).multiplyScalar(E.x),b.copy(T.binormals[0]).multiplyScalar(E.y),D.copy(x[0]).add(L).add(b),G(D.x,D.y,D.z)):G(E.x,E.y,0)}for(let S=1;S<=h;S++)for(let E=0;E<W;E++){const P=f?N(Y[E],_e[E],Te):Y[E];_?(L.copy(T.normals[S]).multiplyScalar(P.x),b.copy(T.binormals[S]).multiplyScalar(P.y),D.copy(x[S]).add(L).add(b),G(D.x,D.y,D.z)):G(P.x,P.y,u/h*S)}for(let S=v-1;S>=0;S--){const E=S/v,P=d*Math.cos(E*Math.PI/2),H=p*Math.sin(E*Math.PI/2)+y;for(let B=0,w=O.length;B<w;B++){const M=N(O[B],ae[B],H);G(M.x,M.y,u+P)}for(let B=0,w=z.length;B<w;B++){const M=z[B];le=ge[B];for(let U=0,F=M.length;U<F;U++){const R=N(M[U],le[U],H);_?G(R.x,R.y+x[h-1].y,x[h-1].x+P):G(R.x,R.y,u+P)}}}He(),ne();function He(){const S=r.length/3;if(f){let E=0,P=W*E;for(let H=0;H<J;H++){const B=k[H];re(B[2]+P,B[1]+P,B[0]+P)}E=h+v*2,P=W*E;for(let H=0;H<J;H++){const B=k[H];re(B[0]+P,B[1]+P,B[2]+P)}}else{for(let E=0;E<J;E++){const P=k[E];re(P[2],P[1],P[0])}for(let E=0;E<J;E++){const P=k[E];re(P[0]+W*h,P[1]+W*h,P[2]+W*h)}}i.addGroup(S,r.length/3-S,0)}function ne(){const S=r.length/3;let E=0;ke(O,E),E+=O.length;for(let P=0,H=z.length;P<H;P++){const B=z[P];ke(B,E),E+=B.length}i.addGroup(S,r.length/3-S,1)}function ke(S,E){let P=S.length;for(;--P>=0;){const H=P;let B=P-1;B<0&&(B=S.length-1);for(let w=0,M=h+v*2;w<M;w++){const U=W*w,F=W*(w+1),R=E+H+U,q=E+B+U,j=E+B+F,Q=E+H+F;K(R,q,j,Q)}}}function G(S,E,P){c.push(S),c.push(E),c.push(P)}function re(S,E,P){oe(S),oe(E),oe(P);const H=r.length/3,B=m.generateTopUV(i,r,H-3,H-2,H-1);ye(B[0]),ye(B[1]),ye(B[2])}function K(S,E,P,H){oe(S),oe(E),oe(H),oe(E),oe(P),oe(H);const B=r.length/3,w=m.generateSideWallUV(i,r,B-6,B-3,B-2,B-1);ye(w[0]),ye(w[1]),ye(w[3]),ye(w[1]),ye(w[2]),ye(w[3])}function oe(S){r.push(c[S*3+0]),r.push(c[S*3+1]),r.push(c[S*3+2])}function ye(S){s.push(S.x),s.push(S.y)}}}toJSON(){const t=we.prototype.toJSON.call(this),n=this.parameters.shapes,i=this.parameters.options;return UL(n,i,t)}}const BL={generateTopUV:function(e,t,n,i,r){const s=t[n*3],o=t[n*3+1],a=t[i*3],c=t[i*3+1],l=t[r*3],h=t[r*3+1];return[new ie(s,o),new ie(a,c),new ie(l,h)]},generateSideWallUV:function(e,t,n,i,r,s){const o=t[n*3],a=t[n*3+1],c=t[n*3+2],l=t[i*3],h=t[i*3+1],u=t[i*3+2],f=t[r*3],d=t[r*3+1],p=t[r*3+2],y=t[s*3],v=t[s*3+1],g=t[s*3+2];return Math.abs(a-h)<.01?[new ie(o,1-c),new ie(l,1-u),new ie(f,1-p),new ie(y,1-g)]:[new ie(a,1-c),new ie(h,1-u),new ie(d,1-p),new ie(v,1-g)]}};function UL(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const s=e[i];n.shapes.push(s.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}class gd extends qe{constructor(t,n){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:n},this.fromBufferGeometry(new Ra(t,n)),this.mergeVertices()}toJSON(){const t=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return zL(n,i,t)}}function zL(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const s=e[i];n.shapes.push(s.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}class yd extends Dr{constructor(t,n){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,t,n),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:n}}}class Tx extends qe{constructor(t,n){super(),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:n},this.fromBufferGeometry(new yd(t,n)),this.mergeVertices()}}class vd extends we{constructor(t,n,i,r){super(),this.type="LatheBufferGeometry",this.parameters={points:t,segments:n,phiStart:i,phiLength:r},n=Math.floor(n)||12,i=i||0,r=r||Math.PI*2,r=Ee.clamp(r,0,Math.PI*2);const s=[],o=[],a=[],c=1/n,l=new A,h=new ie;for(let u=0;u<=n;u++){const f=i+u*c*r,d=Math.sin(f),p=Math.cos(f);for(let y=0;y<=t.length-1;y++)l.x=t[y].x*d,l.y=t[y].y,l.z=t[y].x*p,o.push(l.x,l.y,l.z),h.x=u/n,h.y=y/(t.length-1),a.push(h.x,h.y)}for(let u=0;u<n;u++)for(let f=0;f<t.length-1;f++){const d=f+u*t.length,p=d,y=d+t.length,v=d+t.length+1,g=d+1;s.push(p,y,g),s.push(y,v,g)}if(this.setIndex(s),this.setAttribute("position",new he(o,3)),this.setAttribute("uv",new he(a,2)),this.computeVertexNormals(),r===Math.PI*2){const u=this.attributes.normal.array,f=new A,d=new A,p=new A,y=n*t.length*3;for(let v=0,g=0;v<t.length;v++,g+=3)f.x=u[g+0],f.y=u[g+1],f.z=u[g+2],d.x=u[y+g+0],d.y=u[y+g+1],d.z=u[y+g+2],p.addVectors(f,d).normalize(),u[g+0]=u[y+g+0]=p.x,u[g+1]=u[y+g+1]=p.y,u[g+2]=u[y+g+2]=p.z}}}class Ex extends qe{constructor(t,n,i,r){super(),this.type="LatheGeometry",this.parameters={points:t,segments:n,phiStart:i,phiLength:r},this.fromBufferGeometry(new vd(t,n,i,r)),this.mergeVertices()}}class ql extends Dr{constructor(t,n){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,t,n),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:n}}}class Ax extends qe{constructor(t,n){super(),this.type="OctahedronGeometry",this.parameters={radius:t,detail:n},this.fromBufferGeometry(new ql(t,n)),this.mergeVertices()}}function Cs(e,t,n){we.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,c=new A,l=new A,h=new A,u=new A,f=new A;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=t+1;for(let p=0;p<=n;p++){const y=p/n;for(let v=0;v<=t;v++){const g=v/t;e(g,y,l),r.push(l.x,l.y,l.z),g-a>=0?(e(g-a,y,h),u.subVectors(l,h)):(e(g+a,y,h),u.subVectors(h,l)),y-a>=0?(e(g,y-a,h),f.subVectors(l,h)):(e(g,y+a,h),f.subVectors(h,l)),c.crossVectors(u,f).normalize(),s.push(c.x,c.y,c.z),o.push(g,y)}}for(let p=0;p<n;p++)for(let y=0;y<t;y++){const v=p*d+y,g=p*d+y+1,m=(p+1)*d+y+1,x=(p+1)*d+y;i.push(v,g,x),i.push(g,m,x)}this.setIndex(i),this.setAttribute("position",new he(r,3)),this.setAttribute("normal",new he(s,3)),this.setAttribute("uv",new he(o,2))}Cs.prototype=Object.create(we.prototype);Cs.prototype.constructor=Cs;function oa(e,t,n){qe.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Cs(e,t,n)),this.mergeVertices()}oa.prototype=Object.create(qe.prototype);oa.prototype.constructor=oa;class Rx extends qe{constructor(t,n,i,r){super(),this.type="PlaneGeometry",this.parameters={width:t,height:n,widthSegments:i,heightSegments:r},this.fromBufferGeometry(new Vl(t,n,i,r)),this.mergeVertices()}}class Cx extends qe{constructor(t,n,i,r){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:n,radius:i,detail:r},this.fromBufferGeometry(new Dr(t,n,i,r)),this.mergeVertices()}}class xd extends we{constructor(t,n,i,r,s,o){super(),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:n,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},t=t||.5,n=n||1,s=s!==void 0?s:0,o=o!==void 0?o:Math.PI*2,i=i!==void 0?Math.max(3,i):8,r=r!==void 0?Math.max(1,r):1;const a=[],c=[],l=[],h=[];let u=t;const f=(n-t)/r,d=new A,p=new ie;for(let y=0;y<=r;y++){for(let v=0;v<=i;v++){const g=s+v/i*o;d.x=u*Math.cos(g),d.y=u*Math.sin(g),c.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/n+1)/2,p.y=(d.y/n+1)/2,h.push(p.x,p.y)}u+=f}for(let y=0;y<r;y++){const v=y*(i+1);for(let g=0;g<i;g++){const m=g+v,x=m,_=m+i+1,T=m+i+2,b=m+1;a.push(x,_,b),a.push(_,T,b)}}this.setIndex(a),this.setAttribute("position",new he(c,3)),this.setAttribute("normal",new he(l,3)),this.setAttribute("uv",new he(h,2))}}class Lx extends qe{constructor(t,n,i,r,s,o){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:n,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new xd(t,n,i,r,s,o)),this.mergeVertices()}}class _d extends we{constructor(t,n){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:n},n=n||12;const i=[],r=[],s=[],o=[];let a=0,c=0;if(Array.isArray(t)===!1)l(t);else for(let h=0;h<t.length;h++)l(t[h]),this.addGroup(a,c,h),a+=c,c=0;this.setIndex(i),this.setAttribute("position",new he(r,3)),this.setAttribute("normal",new he(s,3)),this.setAttribute("uv",new he(o,2));function l(h){const u=r.length/3,f=h.extractPoints(n);let d=f.shape;const p=f.holes;di.isClockWise(d)===!1&&(d=d.reverse());for(let v=0,g=p.length;v<g;v++){const m=p[v];di.isClockWise(m)===!0&&(p[v]=m.reverse())}const y=di.triangulateShape(d,p);for(let v=0,g=p.length;v<g;v++){const m=p[v];d=d.concat(m)}for(let v=0,g=d.length;v<g;v++){const m=d[v];r.push(m.x,m.y,0),s.push(0,0,1),o.push(m.x,m.y)}for(let v=0,g=y.length;v<g;v++){const m=y[v],x=m[0]+u,_=m[1]+u,T=m[2]+u;i.push(x,_,T),c+=3}}}toJSON(){const t=we.prototype.toJSON.call(this),n=this.parameters.shapes;return HL(n,t)}}function HL(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}class bd extends qe{constructor(t,n){super(),this.type="ShapeGeometry",typeof n=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),n=n.curveSegments),this.parameters={shapes:t,curveSegments:n},this.fromBufferGeometry(new _d(t,n)),this.mergeVertices()}toJSON(){const t=qe.prototype.toJSON.call(this),n=this.parameters.shapes;return GL(n,t)}}function GL(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}class Xl extends we{constructor(t,n,i,r,s,o,a){super(),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=t||1,n=Math.max(3,Math.floor(n)||8),i=Math.max(2,Math.floor(i)||6),r=r!==void 0?r:0,s=s!==void 0?s:Math.PI*2,o=o!==void 0?o:0,a=a!==void 0?a:Math.PI;const c=Math.min(o+a,Math.PI);let l=0;const h=[],u=new A,f=new A,d=[],p=[],y=[],v=[];for(let g=0;g<=i;g++){const m=[],x=g/i;let _=0;g==0&&o==0?_=.5/n:g==i&&c==Math.PI&&(_=-.5/n);for(let T=0;T<=n;T++){const b=T/n;u.x=-t*Math.cos(r+b*s)*Math.sin(o+x*a),u.y=t*Math.cos(o+x*a),u.z=t*Math.sin(r+b*s)*Math.sin(o+x*a),p.push(u.x,u.y,u.z),f.copy(u).normalize(),y.push(f.x,f.y,f.z),v.push(b+_,1-x),m.push(l++)}h.push(m)}for(let g=0;g<i;g++)for(let m=0;m<n;m++){const x=h[g][m+1],_=h[g][m],T=h[g+1][m],b=h[g+1][m+1];(g!==0||o>0)&&d.push(x,_,b),(g!==i-1||c<Math.PI)&&d.push(_,T,b)}this.setIndex(d),this.setAttribute("position",new he(p,3)),this.setAttribute("normal",new he(y,3)),this.setAttribute("uv",new he(v,2))}}class Px extends qe{constructor(t,n,i,r,s,o,a){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new Xl(t,n,i,r,s,o,a)),this.mergeVertices()}}class wd extends Dr{constructor(t,n){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,t,n),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:n}}}class Ix extends qe{constructor(t,n){super(),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:n},this.fromBufferGeometry(new wd(t,n)),this.mergeVertices()}}class Md extends Ra{constructor(t,n){n=n||{};const i=n.font;if(!(i&&i.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new we;const r=i.generateShapes(t,n.size);n.depth=n.height!==void 0?n.height:50,n.bevelThickness===void 0&&(n.bevelThickness=10),n.bevelSize===void 0&&(n.bevelSize=8),n.bevelEnabled===void 0&&(n.bevelEnabled=!1),super(r,n),this.type="TextBufferGeometry"}}class Ox extends qe{constructor(t,n){super(),this.type="TextGeometry",this.parameters={text:t,parameters:n},this.fromBufferGeometry(new Md(t,n)),this.mergeVertices()}}class Sd extends we{constructor(t,n,i,r,s){super(),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:n,radialSegments:i,tubularSegments:r,arc:s},t=t||1,n=n||.4,i=Math.floor(i)||8,r=Math.floor(r)||6,s=s||Math.PI*2;const o=[],a=[],c=[],l=[],h=new A,u=new A,f=new A;for(let d=0;d<=i;d++)for(let p=0;p<=r;p++){const y=p/r*s,v=d/i*Math.PI*2;u.x=(t+n*Math.cos(v))*Math.cos(y),u.y=(t+n*Math.cos(v))*Math.sin(y),u.z=n*Math.sin(v),a.push(u.x,u.y,u.z),h.x=t*Math.cos(y),h.y=t*Math.sin(y),f.subVectors(u,h).normalize(),c.push(f.x,f.y,f.z),l.push(p/r),l.push(d/i)}for(let d=1;d<=i;d++)for(let p=1;p<=r;p++){const y=(r+1)*d+p-1,v=(r+1)*(d-1)+p-1,g=(r+1)*(d-1)+p,m=(r+1)*d+p;o.push(y,v,m),o.push(v,g,m)}this.setIndex(o),this.setAttribute("position",new he(a,3)),this.setAttribute("normal",new he(c,3)),this.setAttribute("uv",new he(l,2))}}class Dx extends qe{constructor(t,n,i,r,s){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:n,radialSegments:i,tubularSegments:r,arc:s},this.fromBufferGeometry(new Sd(t,n,i,r,s)),this.mergeVertices()}}class Td extends we{constructor(t,n,i,r,s,o){super(),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:n,tubularSegments:i,radialSegments:r,p:s,q:o},t=t||1,n=n||.4,i=Math.floor(i)||64,r=Math.floor(r)||8,s=s||2,o=o||3;const a=[],c=[],l=[],h=[],u=new A,f=new A,d=new A,p=new A,y=new A,v=new A,g=new A;for(let x=0;x<=i;++x){const _=x/i*s*Math.PI*2;m(_,s,o,t,d),m(_+.01,s,o,t,p),v.subVectors(p,d),g.addVectors(p,d),y.crossVectors(v,g),g.crossVectors(y,v),y.normalize(),g.normalize();for(let T=0;T<=r;++T){const b=T/r*Math.PI*2,L=-n*Math.cos(b),D=n*Math.sin(b);u.x=d.x+(L*g.x+D*y.x),u.y=d.y+(L*g.y+D*y.y),u.z=d.z+(L*g.z+D*y.z),c.push(u.x,u.y,u.z),f.subVectors(u,d).normalize(),l.push(f.x,f.y,f.z),h.push(x/i),h.push(T/r)}}for(let x=1;x<=i;x++)for(let _=1;_<=r;_++){const T=(r+1)*(x-1)+(_-1),b=(r+1)*x+(_-1),L=(r+1)*x+_,D=(r+1)*(x-1)+_;a.push(T,b,D),a.push(b,L,D)}this.setIndex(a),this.setAttribute("position",new he(c,3)),this.setAttribute("normal",new he(l,3)),this.setAttribute("uv",new he(h,2));function m(x,_,T,b,L){const D=Math.cos(x),I=Math.sin(x),Y=T/_*x,z=Math.cos(Y);L.x=b*(2+z)*.5*D,L.y=b*(2+z)*I*.5,L.z=b*Math.sin(Y)*.5}}}class Nx extends qe{constructor(t,n,i,r,s,o,a){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:n,tubularSegments:i,radialSegments:r,p:s,q:o},a!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Td(t,n,i,r,s,o)),this.mergeVertices()}}class Ed extends we{constructor(t,n,i,r,s){super(),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:n,radius:i,radialSegments:r,closed:s},n=n||64,i=i||1,r=r||8,s=s||!1;const o=t.computeFrenetFrames(n,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new A,c=new A,l=new ie;let h=new A;const u=[],f=[],d=[],p=[];y(),this.setIndex(p),this.setAttribute("position",new he(u,3)),this.setAttribute("normal",new he(f,3)),this.setAttribute("uv",new he(d,2));function y(){for(let x=0;x<n;x++)v(x);v(s===!1?n:0),m(),g()}function v(x){h=t.getPointAt(x/n,h);const _=o.normals[x],T=o.binormals[x];for(let b=0;b<=r;b++){const L=b/r*Math.PI*2,D=Math.sin(L),I=-Math.cos(L);c.x=I*_.x+D*T.x,c.y=I*_.y+D*T.y,c.z=I*_.z+D*T.z,c.normalize(),f.push(c.x,c.y,c.z),a.x=h.x+i*c.x,a.y=h.y+i*c.y,a.z=h.z+i*c.z,u.push(a.x,a.y,a.z)}}function g(){for(let x=1;x<=n;x++)for(let _=1;_<=r;_++){const T=(r+1)*(x-1)+(_-1),b=(r+1)*x+(_-1),L=(r+1)*x+_,D=(r+1)*(x-1)+_;p.push(T,b,D),p.push(b,L,D)}}function m(){for(let x=0;x<=n;x++)for(let _=0;_<=r;_++)l.x=x/n,l.y=_/r,d.push(l.x,l.y)}}toJSON(){const t=we.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class Fx extends qe{constructor(t,n,i,r,s,o){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:n,radius:i,radialSegments:r,closed:s},o!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");const a=new Ed(t,n,i,r,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}}class Ad extends we{constructor(t){super(),this.type="WireframeGeometry";const n=[],i=[0,0],r={},s=["a","b","c"];if(t&&t.isGeometry){const o=t.faces;for(let a=0,c=o.length;a<c;a++){const l=o[a];for(let h=0;h<3;h++){const u=l[s[h]],f=l[s[(h+1)%3]];i[0]=Math.min(u,f),i[1]=Math.max(u,f);const d=i[0]+","+i[1];r[d]===void 0&&(r[d]={index1:i[0],index2:i[1]})}}for(const a in r){const c=r[a];let l=t.vertices[c.index1];n.push(l.x,l.y,l.z),l=t.vertices[c.index2],n.push(l.x,l.y,l.z)}}else if(t&&t.isBufferGeometry){const o=new A;if(t.index!==null){const a=t.attributes.position,c=t.index;let l=t.groups;l.length===0&&(l=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,u=l.length;h<u;++h){const f=l[h],d=f.start,p=f.count;for(let y=d,v=d+p;y<v;y+=3)for(let g=0;g<3;g++){const m=c.getX(y+g),x=c.getX(y+(g+1)%3);i[0]=Math.min(m,x),i[1]=Math.max(m,x);const _=i[0]+","+i[1];r[_]===void 0&&(r[_]={index1:i[0],index2:i[1]})}}for(const h in r){const u=r[h];o.fromBufferAttribute(a,u.index1),n.push(o.x,o.y,o.z),o.fromBufferAttribute(a,u.index2),n.push(o.x,o.y,o.z)}}else{const a=t.attributes.position;for(let c=0,l=a.count/3;c<l;c++)for(let h=0;h<3;h++){const u=3*c+h;o.fromBufferAttribute(a,u),n.push(o.x,o.y,o.z);const f=3*c+(h+1)%3;o.fromBufferAttribute(a,f),n.push(o.x,o.y,o.z)}}}this.setAttribute("position",new he(n,3))}}var Dt=Object.freeze({__proto__:null,BoxGeometry:tf,BoxBufferGeometry:Sa,CircleGeometry:vx,CircleBufferGeometry:fd,ConeGeometry:xx,ConeBufferGeometry:_x,CylinderGeometry:dd,CylinderBufferGeometry:Aa,DodecahedronGeometry:bx,DodecahedronBufferGeometry:pd,EdgesGeometry:md,ExtrudeGeometry:gd,ExtrudeBufferGeometry:Ra,IcosahedronGeometry:Tx,IcosahedronBufferGeometry:yd,LatheGeometry:Ex,LatheBufferGeometry:vd,OctahedronGeometry:Ax,OctahedronBufferGeometry:ql,ParametricGeometry:oa,ParametricBufferGeometry:Cs,PlaneGeometry:Rx,PlaneBufferGeometry:Vl,PolyhedronGeometry:Cx,PolyhedronBufferGeometry:Dr,RingGeometry:Lx,RingBufferGeometry:xd,ShapeGeometry:bd,ShapeBufferGeometry:_d,SphereGeometry:Px,SphereBufferGeometry:Xl,TetrahedronGeometry:Ix,TetrahedronBufferGeometry:wd,TextGeometry:Ox,TextBufferGeometry:Md,TorusGeometry:Dx,TorusBufferGeometry:Sd,TorusKnotGeometry:Nx,TorusKnotBufferGeometry:Td,TubeGeometry:Fx,TubeBufferGeometry:Ed,WireframeGeometry:Ad});function Tr(e){Se.call(this),this.type="ShadowMaterial",this.color=new me(0),this.transparent=!0,this.setValues(e)}Tr.prototype=Object.create(Se.prototype);Tr.prototype.constructor=Tr;Tr.prototype.isShadowMaterial=!0;Tr.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this};function gi(e){kt.call(this,e),this.type="RawShaderMaterial"}gi.prototype=Object.create(kt.prototype);gi.prototype.constructor=gi;gi.prototype.isRawShaderMaterial=!0;function Wn(e){Se.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new me(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}Wn.prototype=Object.create(Se.prototype);Wn.prototype.constructor=Wn;Wn.prototype.isMeshStandardMaterial=!0;Wn.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this};function Xi(e){Wn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ie(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=Ee.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}Xi.prototype=Object.create(Wn.prototype);Xi.prototype.constructor=Xi;Xi.prototype.isMeshPhysicalMaterial=!0;Xi.prototype.copy=function(e){return Wn.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new me).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this};function Yi(e){Se.call(this),this.type="MeshPhongMaterial",this.color=new me(16777215),this.specular=new me(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=va,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Yi.prototype=Object.create(Se.prototype);Yi.prototype.constructor=Yi;Yi.prototype.isMeshPhongMaterial=!0;Yi.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Er(e){Se.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new me(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Er.prototype=Object.create(Se.prototype);Er.prototype.constructor=Er;Er.prototype.isMeshToonMaterial=!0;Er.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Ar(e){Se.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Ar.prototype=Object.create(Se.prototype);Ar.prototype.constructor=Ar;Ar.prototype.isMeshNormalMaterial=!0;Ar.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Rr(e){Se.call(this),this.type="MeshLambertMaterial",this.color=new me(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=va,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Rr.prototype=Object.create(Se.prototype);Rr.prototype.constructor=Rr;Rr.prototype.isMeshLambertMaterial=!0;Rr.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Cr(e){Se.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new me(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Cr.prototype=Object.create(Se.prototype);Cr.prototype.constructor=Cr;Cr.prototype.isMeshMatcapMaterial=!0;Cr.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Lr(e){rt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}Lr.prototype=Object.create(rt.prototype);Lr.prototype.constructor=Lr;Lr.prototype.isLineDashedMaterial=!0;Lr.prototype.copy=function(e){return rt.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var VL=Object.freeze({__proto__:null,ShadowMaterial:Tr,SpriteMaterial:ji,RawShaderMaterial:gi,ShaderMaterial:kt,PointsMaterial:En,MeshPhysicalMaterial:Xi,MeshStandardMaterial:Wn,MeshPhongMaterial:Yi,MeshToonMaterial:Er,MeshNormalMaterial:Ar,MeshLambertMaterial:Rr,MeshDepthMaterial:Vi,MeshDistanceMaterial:ki,MeshBasicMaterial:un,MeshMatcapMaterial:Cr,LineDashedMaterial:Lr,LineBasicMaterial:rt,Material:Se});const tt={arraySlice:function(e,t,n){return tt.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(r,s){return e[r]-e[s]}const n=e.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(t),i},sortedArray:function(e,t,n){const i=e.length,r=new e.constructor(i);for(let s=0,o=0;o!==i;++s){const a=n[s]*t;for(let c=0;c!==t;++c)r[o++]=e[a+c]}return r},flattenJSON:function(e,t,n,i){let r=1,s=e[0];for(;s!==void 0&&s[i]===void 0;)s=e[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(t.push(s.time),n.push.apply(n,o)),s=e[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(t.push(s.time),o.toArray(n,n.length)),s=e[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(t.push(s.time),n.push(o)),s=e[r++];while(s!==void 0)},subclip:function(e,t,n,i,r){r=r||30;const s=e.clone();s.name=t;const o=[];for(let c=0;c<s.tracks.length;++c){const l=s.tracks[c],h=l.getValueSize(),u=[],f=[];for(let d=0;d<l.times.length;++d){const p=l.times[d]*r;if(!(p<n||p>=i)){u.push(l.times[d]);for(let y=0;y<h;++y)f.push(l.values[d*h+y])}}u.length!==0&&(l.times=tt.convertArray(u,l.times.constructor),l.values=tt.convertArray(f,l.values.constructor),o.push(l))}s.tracks=o;let a=1/0;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(e,t,n,i){t===void 0&&(t=0),n===void 0&&(n=e),(i===void 0||i<=0)&&(i=30);const r=n.tracks.length,s=t/i;for(let o=0;o<r;++o){const a=n.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=e.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let y;if(s<=a.times[0]){const g=h,m=u-h;y=tt.arraySlice(a.values,g,m)}else if(s>=a.times[p]){const g=p*u+h,m=g+u-h;y=tt.arraySlice(a.values,g,m)}else{const g=a.createInterpolant(),m=h,x=u-h;g.evaluate(s),y=tt.arraySlice(g.resultBuffer,m,x)}c==="quaternion"&&new Lt().fromArray(y).normalize().conjugate().toArray(y);const v=l.times.length;for(let g=0;g<v;++g){const m=g*d+f;if(c==="quaternion")Lt.multiplyQuaternionsFlat(l.values,m,y,0,l.values,m);else{const x=d-f*2;for(let _=0;_<x;++_)l.values[m+_]-=y[_]}}}return e.blendMode=od,e}};function nn(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n}Object.assign(nn.prototype,{evaluate:function(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let s;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}s=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;e<t[o]?s=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let s=0;s!==i;++s)t[s]=n[r+s];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(nn.prototype,{beforeStart_:nn.prototype.copySampleValue_,afterEnd_:nn.prototype.copySampleValue_});function nl(e,t,n,i){nn.call(this,e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}nl.prototype=Object.assign(Object.create(nn.prototype),{constructor:nl,DefaultSettings_:{endingStart:pr,endingEnd:pr},intervalChanged_:function(e,t,n){const i=this.parameterPositions;let r=e-2,s=e+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case mr:r=e,o=2*t-n;break;case jo:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(a===void 0)switch(this.getSettings_().endingEnd){case mr:s=e,a=2*n-t;break;case jo:s=1,a=n+i[1]-i[0];break;default:s=e-1,a=t}const c=(n-t)*.5,l=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=s*l},interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,d=(n-t)/(i-t),p=d*d,y=p*d,v=-u*y+2*u*p-u*d,g=(1+u)*y+(-1.5-2*u)*p+(-.5+u)*d+1,m=(-1-f)*y+(1.5+f)*p+.5*d,x=f*y-f*p;for(let _=0;_!==o;++_)r[_]=v*s[l+_]+g*s[c+_]+m*s[a+_]+x*s[h+_];return r}});function aa(e,t,n,i){nn.call(this,e,t,n,i)}aa.prototype=Object.assign(Object.create(nn.prototype),{constructor:aa,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=(n-t)/(i-t),h=1-l;for(let u=0;u!==o;++u)r[u]=s[c+u]*h+s[a+u]*l;return r}});function il(e,t,n,i){nn.call(this,e,t,n,i)}il.prototype=Object.assign(Object.create(nn.prototype),{constructor:il,interpolate_:function(e){return this.copySampleValue_(e-1)}});function bt(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=tt.convertArray(t,this.TimeBufferType),this.values=tt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(bt,{toJSON:function(e){const t=e.constructor;let n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:tt.convertArray(e.times,Array),values:tt.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}});Object.assign(bt.prototype,{constructor:bt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:To,InterpolantFactoryMethodDiscrete:function(e){return new il(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new aa(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new nl(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case Wo:t=this.InterpolantFactoryMethodDiscrete;break;case To:t=this.InterpolantFactoryMethodLinear;break;case Dc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Wo;case this.InterpolantFactoryMethodLinear:return To;case this.InterpolantFactoryMethodSmooth:return Dc}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this},scale:function(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this},trim:function(e,t){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<e;)++r;for(;s!==-1&&n[s]>t;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=tt.arraySlice(n,r,s),this.values=tt.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let o=0;o!==r;o++){const a=n[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),e=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),e=!1;break}s=a}if(i!==void 0&&tt.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e},optimize:function(){const e=tt.arraySlice(this.times),t=tt.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Dc,r=e.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const c=e[o],l=e[o+1];if(c!==l&&(o!==1||c!==c[0]))if(i)a=!0;else{const h=o*n,u=h-n,f=h+n;for(let d=0;d!==n;++d){const p=t[h+d];if(p!==t[u+d]||p!==t[f+d]){a=!0;break}}}if(a){if(o!==s){e[s]=e[o];const h=o*n,u=s*n;for(let f=0;f!==n;++f)t[u+f]=t[h+f]}++s}}if(r>0){e[s]=e[r];for(let o=r*n,a=s*n,c=0;c!==n;++c)t[a+c]=t[o+c];++s}return s!==e.length?(this.times=tt.arraySlice(e,0,s),this.values=tt.arraySlice(t,0,s*n)):(this.times=e,this.values=t),this},clone:function(){const e=tt.arraySlice(this.times,0),t=tt.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}});function rl(e,t,n){bt.call(this,e,t,n)}rl.prototype=Object.assign(Object.create(bt.prototype),{constructor:rl,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Wo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function sl(e,t,n,i){bt.call(this,e,t,n,i)}sl.prototype=Object.assign(Object.create(bt.prototype),{constructor:sl,ValueTypeName:"color"});function Ls(e,t,n,i){bt.call(this,e,t,n,i)}Ls.prototype=Object.assign(Object.create(bt.prototype),{constructor:Ls,ValueTypeName:"number"});function ol(e,t,n,i){nn.call(this,e,t,n,i)}ol.prototype=Object.assign(Object.create(nn.prototype),{constructor:ol,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-t)/(i-t);let c=e*o;for(let l=c+o;c!==l;c+=4)Lt.slerpFlat(r,0,s,c-o,s,c,a);return r}});function ca(e,t,n,i){bt.call(this,e,t,n,i)}ca.prototype=Object.assign(Object.create(bt.prototype),{constructor:ca,ValueTypeName:"quaternion",DefaultInterpolation:To,InterpolantFactoryMethodLinear:function(e){return new ol(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function al(e,t,n,i){bt.call(this,e,t,n,i)}al.prototype=Object.assign(Object.create(bt.prototype),{constructor:al,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Wo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Ps(e,t,n,i){bt.call(this,e,t,n,i)}Ps.prototype=Object.assign(Object.create(bt.prototype),{constructor:Ps,ValueTypeName:"vector"});function an(e,t,n,i){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.blendMode=i!==void 0?i:zl,this.uuid=Ee.generateUUID(),this.duration<0&&this.resetDuration()}function kL(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ls;case"vector":case"vector2":case"vector3":case"vector4":return Ps;case"color":return sl;case"quaternion":return ca;case"bool":case"boolean":return rl;case"string":return al}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function WL(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=kL(e.type);if(e.times===void 0){const n=[],i=[];tt.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(an,{parse:function(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,s=n.length;r!==s;++r)t.push(WL(n[r]).scale(i));return new an(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,s=n.length;r!==s;++r)t.push(bt.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(e,t,n,i){const r=t.length,s=[];for(let o=0;o<r;o++){let a=[],c=[];a.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const l=tt.getKeyframeOrder(a);a=tt.sortedArray(a,1,l),c=tt.sortedArray(c,1,l),!i&&a[0]===0&&(a.push(r),c.push(c[0])),s.push(new Ls(".morphTargetInfluences["+t[o].name+"]",a,c).scale(1/n))}return new an(e,-1,s)},findByName:function(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=e.length;o<a;o++){const c=e[o],l=c.name.match(r);if(l&&l.length>1){const h=l[1];let u=i[h];u||(i[h]=u=[]),u.push(c)}}const s=[];for(const o in i)s.push(an.CreateFromMorphTargetSequence(o,i[o],t,n));return s},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,f,d,p){if(f.length!==0){const y=[],v=[];tt.flattenJSON(f,y,v,d),y.length!==0&&p.push(new h(u,y,v))}},i=[],r=e.name||"default",s=e.fps||30,o=e.blendMode;let a=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const u=c[h].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let p=0;p<u[d].morphTargets.length;p++)f[u[d].morphTargets[p]]=-1;for(const p in f){const y=[],v=[];for(let g=0;g!==u[d].morphTargets.length;++g){const m=u[d];y.push(m.time),v.push(m.morphTarget===p?1:0)}i.push(new Ls(".morphTargetInfluence["+p+"]",y,v))}a=f.length*s}else{const f=".bones["+t[h].name+"]";n(Ps,f+".position",u,"pos",i),n(ca,f+".quaternion",u,"rot",i),n(Ps,f+".scale",u,"scl",i)}}return i.length===0?null:new an(r,a,i,o)}});Object.assign(an.prototype,{resetDuration:function(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new an(this.name,this.duration,e,this.blendMode)}});const Pr={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){if(this.enabled!==!1)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Rd(e,t,n){const i=this;let r=!1,s=0,o=0,a;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(l){o++,r===!1&&i.onStart!==void 0&&i.onStart(l,s,o),r=!0},this.itemEnd=function(l){s++,i.onProgress!==void 0&&i.onProgress(l,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return a?a(l):l},this.setURLModifier=function(l){return a=l,this},this.addHandler=function(l,h){return c.push(l,h),this},this.removeHandler=function(l){const h=c.indexOf(l);return h!==-1&&c.splice(h,2),this},this.getHandler=function(l){for(let h=0,u=c.length;h<u;h+=2){const f=c[h],d=c[h+1];if(f.global&&(f.lastIndex=0),f.test(l))return d}return null}}const Bx=new Rd;function We(e){this.manager=e!==void 0?e:Bx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(We.prototype,{load:function(){},loadAsync:function(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const yn={};function dn(e){We.call(this,e)}dn.prototype=Object.assign(Object.create(We.prototype),{constructor:dn,load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Pr.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;if(yn[e]!==void 0){yn[e].push({onLoad:t,onProgress:n,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=e.match(o);let c;if(a){const l=a[1],h=!!a[2];let u=a[3];u=decodeURIComponent(u),h&&(u=atob(u));try{let f;const d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":const p=new Uint8Array(u.length);for(let v=0;v<u.length;v++)p[v]=u.charCodeAt(v);d==="blob"?f=new Blob([p.buffer],{type:l}):f=p.buffer;break;case"document":f=new DOMParser().parseFromString(u,l);break;case"json":f=JSON.parse(u);break;default:f=u;break}setTimeout(function(){t&&t(f),r.manager.itemEnd(e)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(e),r.manager.itemEnd(e)},0)}}else{yn[e]=[],yn[e].push({onLoad:t,onProgress:n,onError:i}),c=new XMLHttpRequest,c.open("GET",e,!0),c.addEventListener("load",function(l){const h=this.response,u=yn[e];if(delete yn[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Pr.add(e,h);for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onLoad&&p.onLoad(h)}r.manager.itemEnd(e)}else{for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onError&&p.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)}},!1),c.addEventListener("progress",function(l){const h=yn[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onProgress&&d.onProgress(l)}},!1),c.addEventListener("error",function(l){const h=yn[e];delete yn[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),c.addEventListener("abort",function(l){const h=yn[e];delete yn[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),this.responseType!==void 0&&(c.responseType=this.responseType),this.withCredentials!==void 0&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const l in this.requestHeader)c.setRequestHeader(l,this.requestHeader[l]);c.send(null)}return r.manager.itemStart(e),c},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}});function sf(e){We.call(this,e)}sf.prototype=Object.assign(Object.create(We.prototype),{constructor:sf,load:function(e,t,n,i){const r=this,s=new dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=[];for(let n=0;n<e.length;n++){const i=an.parse(e[n]);t.push(i)}return t}});function of(e){We.call(this,e)}of.prototype=Object.assign(Object.create(We.prototype),{constructor:of,load:function(e,t,n,i){const r=this,s=[],o=new Rs;o.image=s;const a=new dn(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let c=0;function l(h){a.load(e[h],function(u){const f=r.parse(u,!0);s[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(o.minFilter=vt),o.format=f.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let h=0,u=e.length;h<u;++h)l(h);else a.load(e,function(h){const u=r.parse(h,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let d=0;d<f;d++){s[d]={mipmaps:[]};for(let p=0;p<u.mipmapCount;p++)s[d].mipmaps.push(u.mipmaps[d*u.mipmapCount+p]),s[d].format=u.format,s[d].width=u.width,s[d].height=u.height}}else o.image.width=u.width,o.image.height=u.height,o.mipmaps=u.mipmaps;u.mipmapCount===1&&(o.minFilter=vt),o.format=u.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}});function Is(e){We.call(this,e)}Is.prototype=Object.assign(Object.create(We.prototype),{constructor:Is,load:function(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Pr.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),Pr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(l){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",a,!1),o.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}});function cl(e){We.call(this,e)}cl.prototype=Object.assign(Object.create(We.prototype),{constructor:cl,load:function(e,t,n,i){const r=new kn,s=new Is(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(c){s.load(e[c],function(l){r.images[c]=l,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)a(c);return r}});function ll(e){We.call(this,e)}ll.prototype=Object.assign(Object.create(We.prototype),{constructor:ll,load:function(e,t,n,i){const r=this,s=new Sr,o=new dn(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(a){const c=r.parse(a);c&&(c.image!==void 0?s.image=c.image:c.data!==void 0&&(s.image.width=c.width,s.image.height=c.height,s.image.data=c.data),s.wrapS=c.wrapS!==void 0?c.wrapS:Ut,s.wrapT=c.wrapT!==void 0?c.wrapT:Ut,s.magFilter=c.magFilter!==void 0?c.magFilter:vt,s.minFilter=c.minFilter!==void 0?c.minFilter:vt,s.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.format!==void 0&&(s.format=c.format),c.type!==void 0&&(s.type=c.type),c.mipmaps!==void 0&&(s.mipmaps=c.mipmaps,s.minFilter=Bs),c.mipmapCount===1&&(s.minFilter=vt),s.needsUpdate=!0,t&&t(s,c))},n,i),s}});function ul(e){We.call(this,e)}ul.prototype=Object.assign(Object.create(We.prototype),{constructor:ul,load:function(e,t,n,i){const r=new Xe,s=new Is(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){r.image=o;const a=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;r.format=a?Fi:en,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}});function be(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(be.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)n=this.getPoint(s/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let i=0;const r=n.length;let s;t?s=t:s=e*n[r-1];let o=0,a=r-1,c;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),c=n[i]-s,c<0)o=i+1;else if(c>0)a=i-1;else{a=i;break}if(i=a,n[i]===s)return i/(r-1);const l=n[i],u=n[i+1]-l,f=(s-l)/u;return(i+f)/(r-1)},getTangent:function(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=t||(s.isVector2?new ie:new A);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(e,t){const n=new A,i=[],r=[],s=[],o=new A,a=new Ie;for(let f=0;f<=e;f++){const d=f/e;i[f]=this.getTangentAt(d,new A),i[f].normalize()}r[0]=new A,s[0]=new A;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const d=Math.acos(Ee.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(o,d))}s[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(Ee.clamp(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(f=-f);for(let d=1;d<=e;d++)r[d].applyMatrix4(a.makeRotationAxis(i[d],f*d)),s[d].crossVectors(i[d],r[d])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function sn(e,t,n,i,r,s,o,a){be.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}sn.prototype=Object.create(be.prototype);sn.prototype.constructor=sn;sn.prototype.isEllipseCurve=!0;sn.prototype.getPoint=function(e,t){const n=t||new ie,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,f=c-this.aY;a=u*l-f*h+this.aX,c=u*h+f*l+this.aY}return n.set(a,c)};sn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};sn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e};sn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function Os(e,t,n,i,r,s){sn.call(this,e,t,n,n,i,r,s),this.type="ArcCurve"}Os.prototype=Object.create(sn.prototype);Os.prototype.constructor=Os;Os.prototype.isArcCurve=!0;function Cd(){let e=0,t=0,n=0,i=0;function r(s,o,a,c){e=s,t=a,n=-3*s+3*o-2*a-c,i=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,l){r(o,a,l*(a-s),l*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,l,h,u){let f=(o-s)/l-(a-s)/(l+h)+(a-o)/h,d=(a-o)/h-(c-o)/(h+u)+(c-a)/u;f*=h,d*=h,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return e+t*s+n*o+i*a}}}const pc=new A,ju=new Cd,qu=new Cd,Xu=new Cd;function Ot(e,t,n,i){be.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=i!==void 0?i:.5}Ot.prototype=Object.create(be.prototype);Ot.prototype.constructor=Ot;Ot.prototype.isCatmullRomCurve3=!0;Ot.prototype.getPoint=function(e,t){const n=t||new A,i=this.points,r=i.length,s=(r-(this.closed?0:1))*e;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let c,l;this.closed||o>0?c=i[(o-1)%r]:(pc.subVectors(i[0],i[1]).add(i[0]),c=pc);const h=i[o%r],u=i[(o+1)%r];if(this.closed||o+2<r?l=i[(o+2)%r]:(pc.subVectors(i[r-1],i[r-2]).add(i[r-1]),l=pc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let d=Math.pow(c.distanceToSquared(h),f),p=Math.pow(h.distanceToSquared(u),f),y=Math.pow(u.distanceToSquared(l),f);p<1e-4&&(p=1),d<1e-4&&(d=p),y<1e-4&&(y=p),ju.initNonuniformCatmullRom(c.x,h.x,u.x,l.x,d,p,y),qu.initNonuniformCatmullRom(c.y,h.y,u.y,l.y,d,p,y),Xu.initNonuniformCatmullRom(c.z,h.z,u.z,l.z,d,p,y)}else this.curveType==="catmullrom"&&(ju.initCatmullRom(c.x,h.x,u.x,l.x,this.tension),qu.initCatmullRom(c.y,h.y,u.y,l.y,this.tension),Xu.initCatmullRom(c.z,h.z,u.z,l.z,this.tension));return n.set(ju.calc(a),qu.calc(a),Xu.calc(a)),n};Ot.prototype.copy=function(e){be.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};Ot.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e};Ot.prototype.fromJSON=function(e){be.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new A().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function Fm(e,t,n,i,r){const s=(i-t)*.5,o=(r-n)*.5,a=e*e,c=e*a;return(2*n-2*i+s+o)*c+(-3*n+3*i-2*s-o)*a+s*e+n}function jL(e,t){const n=1-e;return n*n*t}function qL(e,t){return 2*(1-e)*e*t}function XL(e,t){return e*e*t}function Ro(e,t,n,i){return jL(e,t)+qL(e,n)+XL(e,i)}function YL(e,t){const n=1-e;return n*n*n*t}function $L(e,t){const n=1-e;return 3*n*n*e*t}function ZL(e,t){return 3*(1-e)*e*e*t}function JL(e,t){return e*e*e*t}function Co(e,t,n,i,r){return YL(e,t)+$L(e,n)+ZL(e,i)+JL(e,r)}function An(e,t,n,i){be.call(this),this.type="CubicBezierCurve",this.v0=e||new ie,this.v1=t||new ie,this.v2=n||new ie,this.v3=i||new ie}An.prototype=Object.create(be.prototype);An.prototype.constructor=An;An.prototype.isCubicBezierCurve=!0;An.prototype.getPoint=function(e,t){const n=t||new ie,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Co(e,i.x,r.x,s.x,o.x),Co(e,i.y,r.y,s.y,o.y)),n};An.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};An.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};An.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function jn(e,t,n,i){be.call(this),this.type="CubicBezierCurve3",this.v0=e||new A,this.v1=t||new A,this.v2=n||new A,this.v3=i||new A}jn.prototype=Object.create(be.prototype);jn.prototype.constructor=jn;jn.prototype.isCubicBezierCurve3=!0;jn.prototype.getPoint=function(e,t){const n=t||new A,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Co(e,i.x,r.x,s.x,o.x),Co(e,i.y,r.y,s.y,o.y),Co(e,i.z,r.z,s.z,o.z)),n};jn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};jn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};jn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function Xt(e,t){be.call(this),this.type="LineCurve",this.v1=e||new ie,this.v2=t||new ie}Xt.prototype=Object.create(be.prototype);Xt.prototype.constructor=Xt;Xt.prototype.isLineCurve=!0;Xt.prototype.getPoint=function(e,t){const n=t||new ie;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};Xt.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Xt.prototype.getTangent=function(e,t){const n=t||new ie;return n.copy(this.v2).sub(this.v1).normalize(),n};Xt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Xt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Xt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Rn(e,t){be.call(this),this.type="LineCurve3",this.v1=e||new A,this.v2=t||new A}Rn.prototype=Object.create(be.prototype);Rn.prototype.constructor=Rn;Rn.prototype.isLineCurve3=!0;Rn.prototype.getPoint=function(e,t){const n=t||new A;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};Rn.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Rn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Rn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Rn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Cn(e,t,n){be.call(this),this.type="QuadraticBezierCurve",this.v0=e||new ie,this.v1=t||new ie,this.v2=n||new ie}Cn.prototype=Object.create(be.prototype);Cn.prototype.constructor=Cn;Cn.prototype.isQuadraticBezierCurve=!0;Cn.prototype.getPoint=function(e,t){const n=t||new ie,i=this.v0,r=this.v1,s=this.v2;return n.set(Ro(e,i.x,r.x,s.x),Ro(e,i.y,r.y,s.y)),n};Cn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Cn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Cn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function qn(e,t,n){be.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new A,this.v1=t||new A,this.v2=n||new A}qn.prototype=Object.create(be.prototype);qn.prototype.constructor=qn;qn.prototype.isQuadraticBezierCurve3=!0;qn.prototype.getPoint=function(e,t){const n=t||new A,i=this.v0,r=this.v1,s=this.v2;return n.set(Ro(e,i.x,r.x,s.x),Ro(e,i.y,r.y,s.y),Ro(e,i.z,r.z,s.z)),n};qn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};qn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};qn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Ln(e){be.call(this),this.type="SplineCurve",this.points=e||[]}Ln.prototype=Object.create(be.prototype);Ln.prototype.constructor=Ln;Ln.prototype.isSplineCurve=!0;Ln.prototype.getPoint=function(e,t){const n=t||new ie,i=this.points,r=(i.length-1)*e,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],c=i[s],l=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Fm(o,a.x,c.x,l.x,h.x),Fm(o,a.y,c.y,l.y,h.y)),n};Ln.prototype.copy=function(e){be.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this};Ln.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e};Ln.prototype.fromJSON=function(e){be.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ie().fromArray(i))}return this};var af=Object.freeze({__proto__:null,ArcCurve:Os,CatmullRomCurve3:Ot,CubicBezierCurve:An,CubicBezierCurve3:jn,EllipseCurve:sn,LineCurve:Xt,LineCurve3:Rn,QuadraticBezierCurve:Cn,QuadraticBezierCurve3:qn,SplineCurve:Ln});function ci(){be.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}ci.prototype=Object.assign(Object.create(be.prototype),{constructor:ci,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Xt(t,e))},getPoint:function(e){const t=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=t){const r=n[i]-t,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e===void 0&&(e=40);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?e*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?e*s.points.length:e,a=s.getPoints(o);for(let c=0;c<a.length;c++){const l=a[c];n&&n.equals(l)||(t.push(l),n=l)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){be.prototype.copy.call(this,e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=be.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e},fromJSON:function(e){be.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new af[i.type]().fromJSON(i))}return this}});function bn(e){ci.call(this),this.type="Path",this.currentPoint=new ie,e&&this.setFromPoints(e)}bn.prototype=Object.assign(Object.create(ci.prototype),{constructor:bn,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const n=new Xt(this.currentPoint.clone(),new ie(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,i){const r=new Cn(this.currentPoint.clone(),new ie(e,t),new ie(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(e,t,n,i,r,s){const o=new An(this.currentPoint.clone(),new ie(e,t),new ie(n,i),new ie(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(e){const t=[this.currentPoint.clone()].concat(e),n=new Ln(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+o,t+a,n,i,r,s),this},absarc:function(e,t,n,i,r,s){return this.absellipse(e,t,n,n,i,r,s),this},ellipse:function(e,t,n,i,r,s,o,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+c,t+l,n,i,r,s,o,a),this},absellipse:function(e,t,n,i,r,s,o,a){const c=new sn(e,t,n,i,r,s,o,a);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(e){return ci.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=ci.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return ci.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function Ui(e){bn.call(this,e),this.uuid=Ee.generateUUID(),this.type="Shape",this.holes=[]}Ui.prototype=Object.assign(Object.create(bn.prototype),{constructor:Ui,getPointsHoles:function(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){bn.prototype.copy.call(this,e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this},toJSON:function(){const e=bn.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e},fromJSON:function(e){bn.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new bn().fromJSON(i))}return this}});function Qe(e,t){xe.call(this),this.type="Light",this.color=new me(e),this.intensity=t!==void 0?t:1}Qe.prototype=Object.assign(Object.create(xe.prototype),{constructor:Qe,isLight:!0,copy:function(e){return xe.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function hl(e,t,n){Qe.call(this,e,n),this.type="HemisphereLight",this.position.copy(xe.DefaultUp),this.updateMatrix(),this.groundColor=new me(t)}hl.prototype=Object.assign(Object.create(Qe.prototype),{constructor:hl,isHemisphereLight:!0,copy:function(e){return Qe.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function yi(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new ie(512,512),this.map=null,this.mapPass=null,this.matrix=new Ie,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ta,this._frameExtents=new ie(1,1),this._viewportCount=1,this._viewports=[new je(0,0,1,1)]}Object.assign(yi.prototype,{_projScreenMatrix:new Ie,_lightPositionWorld:new A,_lookTarget:new A,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(e.matrixWorld),t.position.copy(s),r.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(r),t.updateMatrixWorld(),i.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function cf(){yi.call(this,new ht(50,1,.5,500)),this.focus=1}cf.prototype=Object.assign(Object.create(yi.prototype),{constructor:cf,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,n=Ee.RAD2DEG*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),yi.prototype.updateMatrices.call(this,e)}});function fl(e,t,n,i,r,s){Qe.call(this,e,t),this.type="SpotLight",this.position.copy(xe.DefaultUp),this.updateMatrix(),this.target=new xe,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new cf}fl.prototype=Object.assign(Object.create(Qe.prototype),{constructor:fl,isSpotLight:!0,copy:function(e){return Qe.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function lf(){yi.call(this,new ht(90,1,.5,500)),this._frameExtents=new ie(4,2),this._viewportCount=6,this._viewports=[new je(2,1,1,1),new je(0,1,1,1),new je(3,1,1,1),new je(1,1,1,1),new je(3,0,1,1),new je(1,0,1,1)],this._cubeDirections=[new A(1,0,0),new A(-1,0,0),new A(0,0,1),new A(0,0,-1),new A(0,1,0),new A(0,-1,0)],this._cubeUps=[new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,0,1),new A(0,0,-1)]}lf.prototype=Object.assign(Object.create(yi.prototype),{constructor:lf,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(e.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function dl(e,t,n,i){Qe.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new lf}dl.prototype=Object.assign(Object.create(Qe.prototype),{constructor:dl,isPointLight:!0,copy:function(e){return Qe.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function Ds(e,t,n,i,r,s){Vn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e!==void 0?e:-1,this.right=t!==void 0?t:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=r!==void 0?r:.1,this.far=s!==void 0?s:2e3,this.updateProjectionMatrix()}Ds.prototype=Object.assign(Object.create(Vn.prototype),{constructor:Ds,isOrthographicCamera:!0,copy:function(e,t){return Vn.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,s=n+e,o=i+t,a=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,s=r+c*this.view.width,o-=l*this.view.offsetY,a=o-l*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function uf(){yi.call(this,new Ds(-5,5,5,-5,.5,500))}uf.prototype=Object.assign(Object.create(yi.prototype),{constructor:uf,isDirectionalLightShadow:!0,updateMatrices:function(e){yi.prototype.updateMatrices.call(this,e)}});function pl(e,t){Qe.call(this,e,t),this.type="DirectionalLight",this.position.copy(xe.DefaultUp),this.updateMatrix(),this.target=new xe,this.shadow=new uf}pl.prototype=Object.assign(Object.create(Qe.prototype),{constructor:pl,isDirectionalLight:!0,copy:function(e){return Qe.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function ml(e,t){Qe.call(this,e,t),this.type="AmbientLight"}ml.prototype=Object.assign(Object.create(Qe.prototype),{constructor:ml,isAmbientLight:!0});function gl(e,t,n,i){Qe.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}gl.prototype=Object.assign(Object.create(Qe.prototype),{constructor:gl,isRectAreaLight:!0,copy:function(e){return Qe.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=Qe.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class Ux{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new A)}set(t){for(let n=0;n<9;n++)this.coefficients[n].copy(t[n]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,n){const i=t.x,r=t.y,s=t.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.282095),n.addScaledVector(o[1],.488603*r),n.addScaledVector(o[2],.488603*s),n.addScaledVector(o[3],.488603*i),n.addScaledVector(o[4],1.092548*(i*r)),n.addScaledVector(o[5],1.092548*(r*s)),n.addScaledVector(o[6],.315392*(3*s*s-1)),n.addScaledVector(o[7],1.092548*(i*s)),n.addScaledVector(o[8],.546274*(i*i-r*r)),n}getIrradianceAt(t,n){const i=t.x,r=t.y,s=t.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.886227),n.addScaledVector(o[1],2*.511664*r),n.addScaledVector(o[2],2*.511664*s),n.addScaledVector(o[3],2*.511664*i),n.addScaledVector(o[4],2*.429043*i*r),n.addScaledVector(o[5],2*.429043*r*s),n.addScaledVector(o[6],.743125*s*s-.247708),n.addScaledVector(o[7],2*.429043*i*s),n.addScaledVector(o[8],.429043*(i*i-r*r)),n}add(t){for(let n=0;n<9;n++)this.coefficients[n].add(t.coefficients[n]);return this}addScaledSH(t,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],n);return this}scale(t){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(t);return this}lerp(t,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],n);return this}equals(t){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(t.coefficients[n]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,n){n===void 0&&(n=0);const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(t,n+r*3);return this}toArray(t,n){t===void 0&&(t=[]),n===void 0&&(n=0);const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(t,n+r*3);return t}static getBasisAt(t,n){const i=t.x,r=t.y,s=t.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}function cn(e,t){Qe.call(this,void 0,t),this.type="LightProbe",this.sh=e!==void 0?e:new Ux}cn.prototype=Object.assign(Object.create(Qe.prototype),{constructor:cn,isLightProbe:!0,copy:function(e){return Qe.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=Qe.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}});function yl(e){We.call(this,e),this.textures={}}yl.prototype=Object.assign(Object.create(We.prototype),{constructor:yl,load:function(e,t,n,i){const r=this,s=new dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=new VL[e.type];if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=new me().setHex(e.sheen)),e.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular.setHex(e.specular),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(i.skinning=e.skinning),e.morphTargets!==void 0&&(i.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(i.morphNormals=e.morphNormals),e.dithering!==void 0&&(i.dithering=e.dithering),e.vertexTangents!==void 0&&(i.vertexTangents=e.vertexTangents),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const s=e.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=n(s.value);break;case"c":i.uniforms[r].value=new me().setHex(s.value);break;case"v2":i.uniforms[r].value=new ie().fromArray(s.value);break;case"v3":i.uniforms[r].value=new A().fromArray(s.value);break;case"v4":i.uniforms[r].value=new je().fromArray(s.value);break;case"m3":i.uniforms[r].value=new Ht().fromArray(s.value);break;case"m4":i.uniforms[r].value=new Ie().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ie().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ie().fromArray(e.clearcoatNormalScale)),e.transmission!==void 0&&(i.transmission=e.transmission),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),i},setTextures:function(e){return this.textures=e,this}});const Ld={decodeText:function(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}};function la(){we.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}la.prototype=Object.assign(Object.create(we.prototype),{constructor:la,isInstancedBufferGeometry:!0,copy:function(e){return we.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e=we.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}});function vl(e,t,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Me.call(this,e,t,n),this.meshPerAttribute=i||1}vl.prototype=Object.assign(Object.create(Me.prototype),{constructor:vl,isInstancedBufferAttribute:!0,copy:function(e){return Me.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=Me.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function xl(e){We.call(this,e)}xl.prototype=Object.assign(Object.create(We.prototype),{constructor:xl,load:function(e,t,n,i){const r=this,s=new dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t={},n={};function i(f,d){if(t[d]!==void 0)return t[d];const y=f.interleavedBuffers[d],v=r(f,y.buffer),g=new mc[y.type](v),m=new Qt(g,y.stride);return m.uuid=y.uuid,t[d]=m,m}function r(f,d){if(n[d]!==void 0)return n[d];const y=f.arrayBuffers[d],v=new Uint32Array(y).buffer;return n[d]=v,v}const s=e.isInstancedBufferGeometry?new la:new we,o=e.data.index;if(o!==void 0){const f=new mc[o.type](o.array);s.setIndex(new Me(f,1))}const a=e.data.attributes;for(const f in a){const d=a[f];let p;if(d.isInterleavedBufferAttribute){const y=i(e.data,d.data);p=new Wi(y,d.itemSize,d.offset,d.normalized)}else{const y=new mc[d.type](d.array),v=d.isInstancedBufferAttribute?vl:Me;p=new v(y,d.itemSize,d.normalized)}d.name!==void 0&&(p.name=d.name),s.setAttribute(f,p)}const c=e.data.morphAttributes;if(c)for(const f in c){const d=c[f],p=[];for(let y=0,v=d.length;y<v;y++){const g=d[y];let m;if(g.isInterleavedBufferAttribute){const x=i(e.data,g.data);m=new Wi(x,g.itemSize,g.offset,g.normalized)}else{const x=new mc[g.type](g.array);m=new Me(x,g.itemSize,g.normalized)}g.name!==void 0&&(m.name=g.name),p.push(m)}s.morphAttributes[f]=p}e.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let f=0,d=h.length;f!==d;++f){const p=h[f];s.addGroup(p.start,p.count,p.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const f=new A;u.center!==void 0&&f.fromArray(u.center),s.boundingSphere=new xi(f,u.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}});const mc={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};class KL extends We{constructor(t){super(t)}load(t,n,i,r){const s=this,o=this.path===""?Ld.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||o;const a=new dn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(c){let l=null;try{l=JSON.parse(c)}catch(u){r!==void 0&&r(u),console.error("THREE:ObjectLoader: Can't parse "+t+".",u.message);return}const h=l.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+t);return}s.parse(l,n)},i,r)}parse(t,n){const i=this.parseShape(t.shapes),r=this.parseGeometries(t.geometries,i),s=this.parseImages(t.images,function(){n!==void 0&&n(c)}),o=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,o),c=this.parseObject(t.object,r,a);return t.animations&&(c.animations=this.parseAnimations(t.animations)),(t.images===void 0||t.images.length===0)&&n!==void 0&&n(c),c}parseShape(t){const n={};if(t!==void 0)for(let i=0,r=t.length;i<r;i++){const s=new Ui().fromJSON(t[i]);n[s.uuid]=s}return n}parseGeometries(t,n){const i={};let r;if(t!==void 0){const s=new xl;for(let o=0,a=t.length;o<a;o++){let c;const l=t[o];switch(l.type){case"PlaneGeometry":case"PlaneBufferGeometry":c=new Dt[l.type](l.width,l.height,l.widthSegments,l.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":c=new Dt[l.type](l.width,l.height,l.depth,l.widthSegments,l.heightSegments,l.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":c=new Dt[l.type](l.radius,l.segments,l.thetaStart,l.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":c=new Dt[l.type](l.radiusTop,l.radiusBottom,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":c=new Dt[l.type](l.radius,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":c=new Dt[l.type](l.radius,l.widthSegments,l.heightSegments,l.phiStart,l.phiLength,l.thetaStart,l.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":c=new Dt[l.type](l.radius,l.detail);break;case"RingGeometry":case"RingBufferGeometry":c=new Dt[l.type](l.innerRadius,l.outerRadius,l.thetaSegments,l.phiSegments,l.thetaStart,l.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":c=new Dt[l.type](l.radius,l.tube,l.radialSegments,l.tubularSegments,l.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":c=new Dt[l.type](l.radius,l.tube,l.tubularSegments,l.radialSegments,l.p,l.q);break;case"TubeGeometry":case"TubeBufferGeometry":c=new Dt[l.type](new af[l.path.type]().fromJSON(l.path),l.tubularSegments,l.radius,l.radialSegments,l.closed);break;case"LatheGeometry":case"LatheBufferGeometry":c=new Dt[l.type](l.points,l.segments,l.phiStart,l.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":c=new Dt[l.type](l.vertices,l.indices,l.radius,l.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let u=0,f=l.shapes.length;u<f;u++){const d=n[l.shapes[u]];r.push(d)}c=new Dt[l.type](r,l.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let u=0,f=l.shapes.length;u<f;u++){const d=n[l.shapes[u]];r.push(d)}const h=l.options.extrudePath;h!==void 0&&(l.options.extrudePath=new af[h.type]().fromJSON(h)),c=new Dt[l.type](r,l.options);break;case"BufferGeometry":case"InstancedBufferGeometry":c=s.parse(l);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+l.type+'"');continue}c.uuid=l.uuid,l.name!==void 0&&(c.name=l.name),c.isBufferGeometry===!0&&l.userData!==void 0&&(c.userData=l.userData),i[l.uuid]=c}}return i}parseMaterials(t,n){const i={},r={};if(t!==void 0){const s=new yl;s.setTextures(n);for(let o=0,a=t.length;o<a;o++){const c=t[o];if(c.type==="MultiMaterial"){const l=[];for(let h=0;h<c.materials.length;h++){const u=c.materials[h];i[u.uuid]===void 0&&(i[u.uuid]=s.parse(u)),l.push(i[u.uuid])}r[c.uuid]=l}else i[c.uuid]===void 0&&(i[c.uuid]=s.parse(c)),r[c.uuid]=i[c.uuid]}}return r}parseAnimations(t){const n=[];for(let i=0;i<t.length;i++){const r=t[i],s=an.parse(r);r.uuid!==void 0&&(s.uuid=r.uuid),n.push(s)}return n}parseImages(t,n){const i=this,r={};let s;function o(a){return i.manager.itemStart(a),s.load(a,function(){i.manager.itemEnd(a)},void 0,function(){i.manager.itemError(a),i.manager.itemEnd(a)})}if(t!==void 0&&t.length>0){const a=new Rd(n);s=new Is(a),s.setCrossOrigin(this.crossOrigin);for(let c=0,l=t.length;c<l;c++){const h=t[c],u=h.url;if(Array.isArray(u)){r[h.uuid]=[];for(let f=0,d=u.length;f<d;f++){const p=u[f],y=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(p)?p:i.resourcePath+p;r[h.uuid].push(o(y))}}else{const f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h.url)?h.url:i.resourcePath+h.url;r[h.uuid]=o(f)}}}return r}parseTextures(t,n){function i(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=t[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),n[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let c;Array.isArray(n[a.image])?c=new kn(n[a.image]):c=new Xe(n[a.image]),c.needsUpdate=!0,c.uuid=a.uuid,a.name!==void 0&&(c.name=a.name),a.mapping!==void 0&&(c.mapping=i(a.mapping,QL)),a.offset!==void 0&&c.offset.fromArray(a.offset),a.repeat!==void 0&&c.repeat.fromArray(a.repeat),a.center!==void 0&&c.center.fromArray(a.center),a.rotation!==void 0&&(c.rotation=a.rotation),a.wrap!==void 0&&(c.wrapS=i(a.wrap[0],Bm),c.wrapT=i(a.wrap[1],Bm)),a.format!==void 0&&(c.format=a.format),a.type!==void 0&&(c.type=a.type),a.encoding!==void 0&&(c.encoding=a.encoding),a.minFilter!==void 0&&(c.minFilter=i(a.minFilter,Um)),a.magFilter!==void 0&&(c.magFilter=i(a.magFilter,Um)),a.anisotropy!==void 0&&(c.anisotropy=a.anisotropy),a.flipY!==void 0&&(c.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(c.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(c.unpackAlignment=a.unpackAlignment),r[a.uuid]=c}return r}parseObject(t,n,i){let r;function s(l){return n[l]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",l),n[l]}function o(l){if(l!==void 0){if(Array.isArray(l)){const h=[];for(let u=0,f=l.length;u<f;u++){const d=l[u];i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),h.push(i[d])}return h}return i[l]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",l),i[l]}}let a,c;switch(t.type){case"Scene":r=new hd,t.background!==void 0&&Number.isInteger(t.background)&&(r.background=new me(t.background)),t.fog!==void 0&&(t.fog.type==="Fog"?r.fog=new Wl(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(r.fog=new kl(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":r=new ht(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(r.focus=t.focus),t.zoom!==void 0&&(r.zoom=t.zoom),t.filmGauge!==void 0&&(r.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(r.filmOffset=t.filmOffset),t.view!==void 0&&(r.view=Object.assign({},t.view));break;case"OrthographicCamera":r=new Ds(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(r.zoom=t.zoom),t.view!==void 0&&(r.view=Object.assign({},t.view));break;case"AmbientLight":r=new ml(t.color,t.intensity);break;case"DirectionalLight":r=new pl(t.color,t.intensity);break;case"PointLight":r=new dl(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":r=new gl(t.color,t.intensity,t.width,t.height);break;case"SpotLight":r=new fl(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":r=new hl(t.color,t.groundColor,t.intensity);break;case"LightProbe":r=new cn().fromJSON(t);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":a=s(t.geometry),c=o(t.material),r=new nt(a,c);break;case"InstancedMesh":a=s(t.geometry),c=o(t.material);const l=t.count,h=t.instanceMatrix;r=new el(a,c,l),r.instanceMatrix=new Me(new Float32Array(h.array),16);break;case"LOD":r=new ea;break;case"Line":r=new fn(s(t.geometry),o(t.material),t.mode);break;case"LineLoop":r=new tl(s(t.geometry),o(t.material));break;case"LineSegments":r=new Wt(s(t.geometry),o(t.material));break;case"PointCloud":case"Points":r=new As(s(t.geometry),o(t.material));break;case"Sprite":r=new Qo(o(t.material));break;case"Group":r=new Di;break;default:r=new xe}if(r.uuid=t.uuid,t.name!==void 0&&(r.name=t.name),t.matrix!==void 0?(r.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(t.position!==void 0&&r.position.fromArray(t.position),t.rotation!==void 0&&r.rotation.fromArray(t.rotation),t.quaternion!==void 0&&r.quaternion.fromArray(t.quaternion),t.scale!==void 0&&r.scale.fromArray(t.scale)),t.castShadow!==void 0&&(r.castShadow=t.castShadow),t.receiveShadow!==void 0&&(r.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.bias!==void 0&&(r.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(r.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(r.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&r.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(r.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(r.visible=t.visible),t.frustumCulled!==void 0&&(r.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(r.renderOrder=t.renderOrder),t.userData!==void 0&&(r.userData=t.userData),t.layers!==void 0&&(r.layers.mask=t.layers),t.children!==void 0){const l=t.children;for(let h=0;h<l.length;h++)r.add(this.parseObject(l[h],n,i))}if(t.type==="LOD"){t.autoUpdate!==void 0&&(r.autoUpdate=t.autoUpdate);const l=t.levels;for(let h=0;h<l.length;h++){const u=l[h],f=r.getObjectByProperty("uuid",u.object);f!==void 0&&r.addLevel(f,u.distance)}}return r}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const QL={UVMapping:Ul,CubeReflectionMapping:xa,CubeRefractionMapping:_a,EquirectangularReflectionMapping:Xc,EquirectangularRefractionMapping:Yc,CubeUVReflectionMapping:Fs,CubeUVRefractionMapping:ba},Bm={RepeatWrapping:Ho,ClampToEdgeWrapping:Ut,MirroredRepeatWrapping:Go},Um={NearestFilter:pt,NearestMipmapNearestFilter:$c,NearestMipmapLinearFilter:Zc,LinearFilter:vt,LinearMipmapNearestFilter:sd,LinearMipmapLinearFilter:Bs};function hf(e){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),We.call(this,e),this.options={premultiplyAlpha:"none"}}hf.prototype=Object.assign(Object.create(We.prototype),{constructor:hf,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Pr.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(e,o).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,r.options)}).then(function(a){Pr.add(e,a),t&&t(a),r.manager.itemEnd(e)}).catch(function(a){i&&i(a),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}});function Pd(){this.type="ShapePath",this.color=new me,this.subPaths=[],this.currentPath=null}Object.assign(Pd.prototype,{moveTo:function(e,t){return this.currentPath=new bn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this},bezierCurveTo:function(e,t,n,i,r,s){return this.currentPath.bezierCurveTo(e,t,n,i,r,s),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(g){const m=[];for(let x=0,_=g.length;x<_;x++){const T=g[x],b=new Ui;b.curves=T.curves,m.push(b)}return m}function i(g,m){const x=m.length;let _=!1;for(let T=x-1,b=0;b<x;T=b++){let L=m[T],D=m[b],I=D.x-L.x,Y=D.y-L.y;if(Math.abs(Y)>Number.EPSILON){if(Y<0&&(L=m[b],I=-I,D=m[T],Y=-Y),g.y<L.y||g.y>D.y)continue;if(g.y===L.y){if(g.x===L.x)return!0}else{const z=Y*(g.x-L.x)-I*(g.y-L.y);if(z===0)return!0;if(z<0)continue;_=!_}}else{if(g.y!==L.y)continue;if(D.x<=g.x&&g.x<=L.x||L.x<=g.x&&g.x<=D.x)return!0}}return _}const r=di.isClockWise,s=this.subPaths;if(s.length===0)return[];if(t===!0)return n(s);let o,a,c;const l=[];if(s.length===1)return a=s[0],c=new Ui,c.curves=a.curves,l.push(c),l;let h=!r(s[0].getPoints());h=e?!h:h;const u=[],f=[];let d=[],p=0,y;f[p]=void 0,d[p]=[];for(let g=0,m=s.length;g<m;g++)a=s[g],y=a.getPoints(),o=r(y),o=e?!o:o,o?(!h&&f[p]&&p++,f[p]={s:new Ui,p:y},f[p].s.curves=a.curves,h&&p++,d[p]=[]):d[p].push({h:a,p:y[0]});if(!f[0])return n(s);if(f.length>1){let g=!1;const m=[];for(let x=0,_=f.length;x<_;x++)u[x]=[];for(let x=0,_=f.length;x<_;x++){const T=d[x];for(let b=0;b<T.length;b++){const L=T[b];let D=!0;for(let I=0;I<f.length;I++)i(L.p,f[I].p)&&(x!==I&&m.push({froms:x,tos:I,hole:b}),D?(D=!1,u[I].push(L)):g=!0);D&&u[x].push(L)}}m.length>0&&(g||(d=u))}let v;for(let g=0,m=f.length;g<m;g++){c=f[g].s,l.push(c),v=d[g];for(let x=0,_=v.length;x<_;x++)c.holes.push(v[x].h)}return l}});function Id(e){this.type="Font",this.data=e}Object.assign(Id.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100);const n=[],i=eP(e,t,this.data);for(let r=0,s=i.length;r<s;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function eP(e,t,n){const i=Array.from?Array.from(e):String(e).split(""),r=t/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,c=0;for(let l=0;l<i.length;l++){const h=i[l];if(h===`
`)a=0,c-=s;else{const u=tP(h,r,a,c,n);a+=u.offsetX,o.push(u.path)}}return o}function tP(e,t,n,i,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");return}const o=new Pd;let a,c,l,h,u,f,d,p;if(s.o){const y=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let v=0,g=y.length;v<g;)switch(y[v++]){case"m":a=y[v++]*t+n,c=y[v++]*t+i,o.moveTo(a,c);break;case"l":a=y[v++]*t+n,c=y[v++]*t+i,o.lineTo(a,c);break;case"q":l=y[v++]*t+n,h=y[v++]*t+i,u=y[v++]*t+n,f=y[v++]*t+i,o.quadraticCurveTo(u,f,l,h);break;case"b":l=y[v++]*t+n,h=y[v++]*t+i,u=y[v++]*t+n,f=y[v++]*t+i,d=y[v++]*t+n,p=y[v++]*t+i,o.bezierCurveTo(u,f,d,p,l,h);break}}return{offsetX:s.ha*t,path:o}}function ff(e){We.call(this,e)}ff.prototype=Object.assign(Object.create(We.prototype),{constructor:ff,load:function(e,t,n,i){const r=this,s=new dn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){let a;try{a=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const c=r.parse(a);t&&t(c)},n,i)},parse:function(e){return new Id(e)}});let gc;const Od={getContext:function(){return gc===void 0&&(gc=new(window.AudioContext||window.webkitAudioContext)),gc},setContext:function(e){gc=e}};function _l(e){We.call(this,e)}_l.prototype=Object.assign(Object.create(We.prototype),{constructor:_l,load:function(e,t,n,i){const r=this,s=new dn(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(o){try{const a=o.slice(0);Od.getContext().decodeAudioData(a,function(l){t(l)})}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}});function df(e,t,n){cn.call(this,void 0,n);const i=new me().set(e),r=new me().set(t),s=new A(i.r,i.g,i.b),o=new A(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(c)}df.prototype=Object.assign(Object.create(cn.prototype),{constructor:df,isHemisphereLightProbe:!0,copy:function(e){return cn.prototype.copy.call(this,e),this},toJSON:function(e){return cn.prototype.toJSON.call(this,e)}});function pf(e,t){cn.call(this,void 0,t);const n=new me().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}pf.prototype=Object.assign(Object.create(cn.prototype),{constructor:pf,isAmbientLightProbe:!0,copy:function(e){return cn.prototype.copy.call(this,e),this},toJSON:function(e){return cn.prototype.toJSON.call(this,e)}});const zm=new Ie,Hm=new Ie;function zx(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ht,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ht,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(zx.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const i=e.projectionMatrix.clone(),r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(Ee.DEG2RAD*t.fov*.5)/t.zoom;let a,c;Hm.elements[12]=-r,zm.elements[12]=r,a=-o*t.aspect+s,c=o*t.aspect+s,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(i),a=-o*t.aspect-s,c=o*t.aspect-s,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Hm),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(zm)}});class Hx{constructor(t){this.autoStart=t!==void 0?t:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=(typeof performance>"u"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const n=(typeof performance>"u"?Date:performance).now();t=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=t}return t}}const or=new A,Gm=new Lt,nP=new A,ar=new A;class iP extends xe{constructor(){super(),this.type="AudioListener",this.context=Od.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Hx}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const n=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(or,Gm,nP),ar.set(0,0,-1).applyQuaternion(Gm),n.positionX){const r=this.context.currentTime+this.timeDelta;n.positionX.linearRampToValueAtTime(or.x,r),n.positionY.linearRampToValueAtTime(or.y,r),n.positionZ.linearRampToValueAtTime(or.z,r),n.forwardX.linearRampToValueAtTime(ar.x,r),n.forwardY.linearRampToValueAtTime(ar.y,r),n.forwardZ.linearRampToValueAtTime(ar.z,r),n.upX.linearRampToValueAtTime(i.x,r),n.upY.linearRampToValueAtTime(i.y,r),n.upZ.linearRampToValueAtTime(i.z,r)}else n.setPosition(or.x,or.y,or.z),n.setOrientation(ar.x,ar.y,ar.z,i.x,i.y,i.z)}}class Dd extends xe{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t){if(t===void 0&&(t=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,n=this.filters.length;t<n;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,n=this.filters.length;t<n;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this}setDetune(t){if(this.detune=t,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const cr=new A,Vm=new Lt,rP=new A,lr=new A;class sP extends Dd{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,n,i){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=n,this.panner.coneOuterGain=i,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(cr,Vm,rP),lr.set(0,0,1).applyQuaternion(Vm);const n=this.panner;if(n.positionX){const i=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(cr.x,i),n.positionY.linearRampToValueAtTime(cr.y,i),n.positionZ.linearRampToValueAtTime(cr.z,i),n.orientationX.linearRampToValueAtTime(lr.x,i),n.orientationY.linearRampToValueAtTime(lr.y,i),n.orientationZ.linearRampToValueAtTime(lr.z,i)}else n.setPosition(cr.x,cr.y,cr.z),n.setOrientation(lr.x,lr.y,lr.z)}}class Gx{constructor(t,n){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=n!==void 0?n:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const n=this.getFrequencyData();for(let i=0;i<n.length;i++)t+=n[i];return t/n.length}}function Nd(e,t,n){this.binding=e,this.valueSize=n;let i,r,s;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Nd.prototype,{accumulate:function(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[r+o]=n[o];s=t}else{s+=t;const o=t/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=t*this._origIndex;this._mixBufferRegion(n,i,a,1-r,t)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let a=t,c=t+t;a!==c;++a)if(n[a]!==n[a+t]){o.setValue(n,i);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,s=i;r!==s;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]},_select:function(e,t,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)e[t+s]=e[n+s]},_slerp:function(e,t,n,i){Lt.slerpFlat(e,t,e,t,e,n,i)},_slerpAdditive:function(e,t,n,i,r){const s=this._workIndex*r;Lt.multiplyQuaternionsFlat(e,s,e,t,e,n),Lt.slerpFlat(e,t,e,t,e,s,i)},_lerp:function(e,t,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]*s+e[n+o]*i}},_lerpAdditive:function(e,t,n,i,r){for(let s=0;s!==r;++s){const o=t+s;e[o]=e[o]+e[n+s]*i}}});const Fd="\\[\\]\\.:\\/",oP=new RegExp("["+Fd+"]","g"),Bd="[^"+Fd+"]",aP="[^"+Fd.replace("\\.","")+"]",cP=/((?:WC+[\/:])*)/.source.replace("WC",Bd),lP=/(WCOD+)?/.source.replace("WCOD",aP),uP=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Bd),hP=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Bd),fP=new RegExp("^"+cP+lP+uP+hP+"$"),dP=["material","materials","bones"];function Vx(e,t,n){const i=n||Pt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}Object.assign(Vx.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)},setValue:function(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}});function Pt(e,t,n){this.path=t,this.parsedPath=n||Pt.parseTrackName(t),this.node=Pt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(Pt,{Composite:Vx,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new Pt.Composite(e,t,n):new Pt(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(oP,"")},parseTrackName:function(e){const t=fP.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);dP.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===t||o.uuid===t)return o;const a=n(o.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}});Object.assign(Pt.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)t[n++]=i[r]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.targetObject[this.propertyName]=t[n]},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Pt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let l=0;l<e.length;l++)if(e[l].name===c){c=l;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const s=e[i];if(s===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(Pt.prototype,{_getValue_unbound:Pt.prototype.getValue,_setValue_unbound:Pt.prototype.setValue});function kx(){this.uuid=Ee.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(kx.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=e.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const u=arguments[l],f=u.uuid;let d=t[f];if(d===void 0){d=a++,t[f]=d,e.push(u);for(let p=0,y=s;p!==y;++p)r[p].push(new Pt(u,n[p],i[p]))}else if(d<c){o=e[d];const p=--c,y=e[p];t[y.uuid]=d,e[d]=y,t[f]=p,e[p]=u;for(let v=0,g=s;v!==g;++v){const m=r[v],x=m[p];let _=m[d];m[d]=x,_===void 0&&(_=new Pt(u,n[v],i[v])),m[p]=_}}else e[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],c=a.uuid,l=t[c];if(l!==void 0&&l>=r){const h=r++,u=e[h];t[u.uuid]=l,e[l]=u,t[c]=h,e[h]=a;for(let f=0,d=i;f!==d;++f){const p=n[f],y=p[h],v=p[l];p[l]=y,p[h]=v}}}this.nCachedObjects_=r},uncache:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=e.length;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],l=c.uuid,h=t[l];if(h!==void 0)if(delete t[l],h<r){const u=--r,f=e[u],d=--s,p=e[d];t[f.uuid]=h,e[h]=f,t[p.uuid]=u,e[u]=p,e.pop();for(let y=0,v=i;y!==v;++y){const g=n[y],m=g[u],x=g[d];g[h]=m,g[u]=x,g.pop()}}else{const u=--s,f=e[u];t[f.uuid]=h,e[h]=f,e.pop();for(let d=0,p=i;d!==p;++d){const y=n[d];y[h]=y[u],y.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[e]=i,s.push(e),o.push(t),r.push(h);for(let u=l,f=a.length;u!==f;++u){const d=a[u];h[u]=new Pt(d,e,t)}return h},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],c=e[o];t[c]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class pP{constructor(t,n,i,r){this._mixer=t,this._clip=n,this._localRoot=i||null,this.blendMode=r||n.blendMode;const s=n.tracks,o=s.length,a=new Array(o),c={endingStart:pr,endingEnd:pr};for(let l=0;l!==o;++l){const h=s[l].createInterpolant(null);a[l]=h,h.settings=c}this._interpolantSettings=c,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Y0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,n){return this.loop=t,this.repetitions=n,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,n,i){if(t.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=t._clip.duration,o=s/r,a=r/s;t.warp(1,o,n),this.warp(a,1,n)}return this}crossFadeTo(t,n,i){return t.crossFadeFrom(this,n,i)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,n,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const c=a.parameterPositions,l=a.sampleValues;return c[0]=s,c[1]=s+i,l[0]=t/o,l[1]=n/o,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,n,i,r){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const c=(t-s)*i;if(c<0||i===0)return;this._startTime=null,n=i*c}n*=this._updateTimeScale(t);const o=this._updateTime(n),a=this._updateWeight(t);if(a>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case od:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(o),l[h].accumulateAdditive(a);break;case zl:default:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(o),l[h].accumulate(r,a)}}}_updateWeight(t){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(t)[0];n*=r,t>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(t){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(t)[0];n*=r,t>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n)}}return this._effectiveTimeScale=n,n}_updateTime(t){const n=this._clip.duration,i=this.loop;let r=this.time+t,s=this._loopCount;const o=i===$0;if(t===0)return s===-1?r:o&&(s&1)===1?n-r:r;if(i===X0){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=n||r<0){const a=Math.floor(r/n);r-=n*a,s+=Math.abs(a);const c=this.repetitions-s;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(c===1){const l=t<0;this._setEndings(l,!l,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return n-r}return r}_setEndings(t,n,i){const r=this._interpolantSettings;i?(r.endingStart=mr,r.endingEnd=mr):(t?r.endingStart=this.zeroSlopeAtStart?mr:pr:r.endingStart=jo,n?r.endingEnd=this.zeroSlopeAtEnd?mr:pr:r.endingEnd=jo)}_scheduleFading(t,n,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=s,c[0]=n,a[1]=s+t,c[1]=i,this}}function mf(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}mf.prototype=Object.assign(Object.create(Xn.prototype),{constructor:mf,_bindAction:function(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,s=e._propertyBindings,o=e._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];l===void 0&&(l={},c[a]=l);for(let h=0;h!==r;++h){const u=i[h],f=u.name;let d=l[f];if(d!==void 0)s[h]=d;else{if(d=s[h],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,a,f));continue}const p=t&&t._propertyBindings[h].binding.parsedPath;d=new Nd(Pt.create(n,f,p),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,a,f),s[h]=d}o[h].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){const i=this._actions,r=this._actionsByClip;let s=r[t];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),s.actionByRoot[n]=e},_removeInactiveAction:function(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,c=a[a.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),e._byClipCacheIndex=null;const h=o.actionByRoot,u=(e._localRoot||this._root).uuid;delete h[u],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackAction:function(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_addInactiveBinding:function(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[t];s===void 0&&(s={},i[t]=s),s[n]=e,e._cacheIndex=r.length,r.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=t[t.length-1],c=e._cacheIndex;a._cacheIndex=c,t[c]=a,t.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new aa(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,n){const i=t||this._root,r=i.uuid;let s=typeof e=="string"?an.findByName(i,e):e;const o=s!==null?s.uuid:e,a=this._actionsByClip[o];let c=null;if(n===void 0&&(s!==null?n=s.blendMode:n=zl),a!==void 0){const h=a.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=a.knownActions[0],s===null&&(s=c._clip)}if(s===null)return null;const l=new pP(this,s,t,n);return this._bindAction(l,c),this._addInactiveAction(l,o,r),l},existingAction:function(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?an.findByName(n,e):e,s=r?r.uuid:e,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,s);const o=this._bindings,a=this._nActiveBindings;for(let c=0;c!==a;++c)o[c].apply(s);return this},setTime:function(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const c=s[o];this._deactivateAction(c);const l=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,t[l]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}},uncacheRoot:function(e){const t=e.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class Yl{constructor(t){typeof t=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Yl(this.value.clone===void 0?this.value:this.value.clone())}}function gf(e,t,n){Qt.call(this,e,t),this.meshPerAttribute=n||1}gf.prototype=Object.assign(Object.create(Qt.prototype),{constructor:gf,isInstancedInterleavedBuffer:!0,copy:function(e){return Qt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=Qt.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=Qt.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}});function Ud(e,t,n,i,r){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(Ud.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Ud.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}});function zd(e,t,n,i){this.ray=new zs(e,t),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new ud,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function km(e,t){return e.distance-t.distance}function yf(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),i===!0){const r=e.children;for(let s=0,o=r.length;s<o;s++)yf(r[s],t,n,!0)}}Object.assign(zd.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,n){const i=n||[];return yf(e,this,i,t),i.sort(km),i},intersectObjects:function(e,t,n){const i=n||[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=e.length;r<s;r++)yf(e[r],this,i,t);return i.sort(km),i}});class mP{constructor(t=1,n=0,i=0){return this.radius=t,this.phi=n,this.theta=i,this}set(t,n,i){return this.radius=t,this.phi=n,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,n,i){return this.radius=Math.sqrt(t*t+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(Ee.clamp(n/this.radius,-1,1))),this}}class gP{constructor(t,n,i){return this.radius=t!==void 0?t:1,this.theta=n!==void 0?n:0,this.y=i!==void 0?i:0,this}set(t,n,i){return this.radius=t,this.theta=n,this.y=i,this}clone(){return new this.constructor().copy(this)}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,n,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=n,this}}const Wm=new ie;class Wx{constructor(t,n){Object.defineProperty(this,"isBox2",{value:!0}),this.min=t!==void 0?t:new ie(1/0,1/0),this.max=n!==void 0?n:new ie(-1/0,-1/0)}set(t,n){return this.min.copy(t),this.max.copy(n),this}setFromPoints(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n++)this.expandByPoint(t[n]);return this}setFromCenterAndSize(t,n){const i=Wm.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return t===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new ie),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return t===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new ie),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,n){return n===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),n=new ie),n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,n){return n===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),n=new ie),n.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Wm.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const jm=new A,yc=new A;class jx{constructor(t,n){this.start=t!==void 0?t:new A,this.end=n!==void 0?n:new A}set(t,n){return this.start.copy(t),this.end.copy(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new A),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),t=new A),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,n){return n===void 0&&(console.warn("THREE.Line3: .at() target is now required"),n=new A),this.delta(n).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,n){jm.subVectors(t,this.start),yc.subVectors(this.end,this.start);const i=yc.dot(yc);let s=yc.dot(jm)/i;return n&&(s=Ee.clamp(s,0,1)),s}closestPointToPoint(t,n,i){const r=this.closestPointToPointParameter(t,n);return i===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new A),this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}function ua(e){xe.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}ua.prototype=Object.create(xe.prototype);ua.prototype.constructor=ua;ua.prototype.isImmediateRenderObject=!0;const qm=new A;class yP extends xe{constructor(t,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new we,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,c=32;o<c;o++,a++){const l=o/c*Math.PI*2,h=a/c*Math.PI*2;r.push(Math.cos(l),Math.sin(l),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new he(r,3));const s=new rt({fog:!1,toneMapped:!1});this.cone=new Wt(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,n=t*Math.tan(this.light.angle);this.cone.scale.set(n,n,t),qm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(qm),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Ci=new A,vc=new Ie,Yu=new Ie;class qx extends Wt{constructor(t){const n=Xx(t),i=new we,r=[],s=[],o=new me(0,0,1),a=new me(0,1,0);for(let l=0;l<n.length;l++){const h=n[l];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new he(r,3)),i.setAttribute("color",new he(s,3));const c=new rt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,c),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=n,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const n=this.bones,i=this.geometry,r=i.getAttribute("position");Yu.getInverse(this.root.matrixWorld);for(let s=0,o=0;s<n.length;s++){const a=n[s];a.parent&&a.parent.isBone&&(vc.multiplyMatrices(Yu,a.matrixWorld),Ci.setFromMatrixPosition(vc),r.setXYZ(o,Ci.x,Ci.y,Ci.z),vc.multiplyMatrices(Yu,a.parent.matrixWorld),Ci.setFromMatrixPosition(vc),r.setXYZ(o+1,Ci.x,Ci.y,Ci.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function Xx(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,Xx(e.children[n]));return t}class vP extends nt{constructor(t,n,i){const r=new Xl(n,4,2),s=new un({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=t,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const xP=new A,Xm=new me,Ym=new me;class _P extends xe{constructor(t,n,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const r=new ql(n);r.rotateY(Math.PI*.5),this.material=new un({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new Me(o,3)),this.add(new nt(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const n=t.geometry.getAttribute("color");Xm.copy(this.light.color),Ym.copy(this.light.groundColor);for(let i=0,r=n.count;i<r;i++){const s=i<r/2?Xm:Ym;n.setXYZ(i,s.r,s.g,s.b)}n.needsUpdate=!0}t.lookAt(xP.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Yx extends Wt{constructor(t,n,i,r){t=t||10,n=n||10,i=new me(i!==void 0?i:4473924),r=new me(r!==void 0?r:8947848);const s=n/2,o=t/n,a=t/2,c=[],l=[];for(let f=0,d=0,p=-a;f<=n;f++,p+=o){c.push(-a,0,p,a,0,p),c.push(p,0,-a,p,0,a);const y=f===s?i:r;y.toArray(l,d),d+=3,y.toArray(l,d),d+=3,y.toArray(l,d),d+=3,y.toArray(l,d),d+=3}const h=new we;h.setAttribute("position",new he(c,3)),h.setAttribute("color",new he(l,3));const u=new rt({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}}class bP extends Wt{constructor(t,n,i,r,s,o){t=t||10,n=n||16,i=i||8,r=r||64,s=new me(s!==void 0?s:4473924),o=new me(o!==void 0?o:8947848);const a=[],c=[];for(let u=0;u<=n;u++){const f=u/n*(Math.PI*2),d=Math.sin(f)*t,p=Math.cos(f)*t;a.push(0,0,0),a.push(d,0,p);const y=u&1?s:o;c.push(y.r,y.g,y.b),c.push(y.r,y.g,y.b)}for(let u=0;u<=i;u++){const f=u&1?s:o,d=t-t/i*u;for(let p=0;p<r;p++){let y=p/r*(Math.PI*2),v=Math.sin(y)*d,g=Math.cos(y)*d;a.push(v,0,g),c.push(f.r,f.g,f.b),y=(p+1)/r*(Math.PI*2),v=Math.sin(y)*d,g=Math.cos(y)*d,a.push(v,0,g),c.push(f.r,f.g,f.b)}}const l=new we;l.setAttribute("position",new he(a,3)),l.setAttribute("color",new he(c,3));const h=new rt({vertexColors:!0,toneMapped:!1});super(l,h),this.type="PolarGridHelper"}}const $m=new A,xc=new A,Zm=new A;class wP extends xe{constructor(t,n,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,n===void 0&&(n=1);let r=new we;r.setAttribute("position",new he([-n,n,0,n,n,0,n,-n,0,-n,-n,0,-n,n,0],3));const s=new rt({fog:!1,toneMapped:!1});this.lightPlane=new fn(r,s),this.add(this.lightPlane),r=new we,r.setAttribute("position",new he([0,0,0,0,0,1],3)),this.targetLine=new fn(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){$m.setFromMatrixPosition(this.light.matrixWorld),xc.setFromMatrixPosition(this.light.target.matrixWorld),Zm.subVectors(xc,$m),this.lightPlane.lookAt(xc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(xc),this.targetLine.scale.z=Zm.length()}}const _c=new A,at=new Vn;class MP extends Wt{constructor(t){const n=new we,i=new rt({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={},a=new me(16755200),c=new me(16711680),l=new me(43775),h=new me(16777215),u=new me(3355443);f("n1","n2",a),f("n2","n4",a),f("n4","n3",a),f("n3","n1",a),f("f1","f2",a),f("f2","f4",a),f("f4","f3",a),f("f3","f1",a),f("n1","f1",a),f("n2","f2",a),f("n3","f3",a),f("n4","f4",a),f("p","n1",c),f("p","n2",c),f("p","n3",c),f("p","n4",c),f("u1","u2",l),f("u2","u3",l),f("u3","u1",l),f("c","t",h),f("p","c",u),f("cn1","cn2",u),f("cn3","cn4",u),f("cf1","cf2",u),f("cf3","cf4",u);function f(p,y,v){d(p,v),d(y,v)}function d(p,y){r.push(0,0,0),s.push(y.r,y.g,y.b),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}n.setAttribute("position",new he(r,3)),n.setAttribute("color",new he(s,3)),super(n,i),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const t=this.geometry,n=this.pointMap,i=1,r=1;at.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),lt("c",n,t,at,0,0,-1),lt("t",n,t,at,0,0,1),lt("n1",n,t,at,-i,-r,-1),lt("n2",n,t,at,i,-r,-1),lt("n3",n,t,at,-i,r,-1),lt("n4",n,t,at,i,r,-1),lt("f1",n,t,at,-i,-r,1),lt("f2",n,t,at,i,-r,1),lt("f3",n,t,at,-i,r,1),lt("f4",n,t,at,i,r,1),lt("u1",n,t,at,i*.7,r*1.1,-1),lt("u2",n,t,at,-i*.7,r*1.1,-1),lt("u3",n,t,at,0,r*2,-1),lt("cf1",n,t,at,-i,0,1),lt("cf2",n,t,at,i,0,1),lt("cf3",n,t,at,0,-r,1),lt("cf4",n,t,at,0,r,1),lt("cn1",n,t,at,-i,0,-1),lt("cn2",n,t,at,i,0,-1),lt("cn3",n,t,at,0,-r,-1),lt("cn4",n,t,at,0,r,-1),t.getAttribute("position").needsUpdate=!0}}function lt(e,t,n,i,r,s,o){_c.set(r,s,o).unproject(i);const a=t[e];if(a!==void 0){const c=n.getAttribute("position");for(let l=0,h=a.length;l<h;l++)c.setXYZ(a[l],_c.x,_c.y,_c.z)}}const bc=new Yn;class $x extends Wt{constructor(t,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),s=new we;s.setIndex(new Me(i,1)),s.setAttribute("position",new Me(r,3)),super(s,new rt({color:n,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(t!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&bc.setFromObject(this.object),bc.isEmpty())return;const n=bc.min,i=bc.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=n.x,s[4]=i.y,s[5]=i.z,s[6]=n.x,s[7]=n.y,s[8]=i.z,s[9]=i.x,s[10]=n.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=n.z,s[15]=n.x,s[16]=i.y,s[17]=n.z,s[18]=n.x,s[19]=n.y,s[20]=n.z,s[21]=i.x,s[22]=n.y,s[23]=n.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return Wt.prototype.copy.call(this,t),this.object=t.object,this}}class SP extends Wt{constructor(t,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new we;s.setIndex(new Me(i,1)),s.setAttribute("position",new he(r,3)),super(s,new rt({color:n,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class TP extends fn{constructor(t,n,i){const r=i!==void 0?i:16776960,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new we;o.setAttribute("position",new he(s,3)),o.computeBoundingSphere(),super(o,new rt({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=n===void 0?1:n;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],c=new we;c.setAttribute("position",new he(a,3)),c.computeBoundingSphere(),this.add(new nt(c,new un({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let n=-this.plane.constant;Math.abs(n)<1e-8&&(n=1e-8),this.scale.set(.5*this.size,.5*this.size,n),this.children[0].material.side=n<0?dt:Ns,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const Jm=new A;let wc,$u;class EP extends xe{constructor(t,n,i,r,s,o){super(),this.type="ArrowHelper",t===void 0&&(t=new A(0,0,1)),n===void 0&&(n=new A(0,0,0)),i===void 0&&(i=1),r===void 0&&(r=16776960),s===void 0&&(s=.2*i),o===void 0&&(o=.2*s),wc===void 0&&(wc=new we,wc.setAttribute("position",new he([0,0,0,0,1,0],3)),$u=new Aa(0,.5,1,5,1),$u.translate(0,-.5,0)),this.position.copy(n),this.line=new fn(wc,new rt({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new nt($u,new un({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,s,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Jm.set(t.z,0,-t.x).normalize();const n=Math.acos(t.y);this.quaternion.setFromAxisAngle(Jm,n)}}setLength(t,n,i){n===void 0&&(n=.2*t),i===void 0&&(i=.2*n),this.line.scale.set(1,Math.max(1e-4,t-n),1),this.line.updateMatrix(),this.cone.scale.set(i,n,i),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class Zx extends Wt{constructor(t=1){const n=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new we;r.setAttribute("position",new he(n,3)),r.setAttribute("color",new he(i,3));const s=new rt({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}}const ys=4,zi=8,Fn=Math.pow(2,zi),Jx=[.125,.215,.35,.446,.526,.582],Kx=zi-ys+1+Jx.length,es=20,zn={[Vt]:0,[wa]:1,[Gl]:2,[ad]:3,[cd]:4,[ld]:5,[Hl]:6},Zu=new Ds,{_lodPlanes:io,_sizeLods:Km,_sigmas:Mc}=CP();let Ju=null;const hr=(1+Math.sqrt(5))/2,ts=1/hr,Qm=[new A(1,1,1),new A(-1,1,1),new A(1,1,-1),new A(-1,1,-1),new A(0,hr,ts),new A(0,hr,-ts),new A(ts,0,hr),new A(-ts,0,hr),new A(hr,ts,0),new A(-hr,ts,0)];class AP{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=LP(es),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,n=0,i=.1,r=100){Ju=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(t,i,r,s),n>0&&this._blur(s,0,0,n),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=ng(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=tg(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let t=0;t<io.length;t++)io[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Ju),t.scissorTest=!1,Sc(t,0,0,t.width,t.height)}_fromTexture(t){Ju=this._renderer.getRenderTarget();const n=this._allocateTargets(t);return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(t){const n={magFilter:pt,minFilter:pt,generateMipmaps:!1,type:Us,format:u0,encoding:RP(t)?t.encoding:Gl,depthBuffer:!1},i=eg(n);return i.depthBuffer=!t,this._pingPongRenderTarget=eg(n),i}_compileMaterial(t){const n=new nt(io[0],t);this._renderer.compile(n,Zu)}_sceneToCubeUV(t,n,i,r){const a=new ht(90,1,n,i),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.outputEncoding,f=h.toneMapping,d=h.getClearColor(),p=h.getClearAlpha();h.toneMapping=yr,h.outputEncoding=Vt;let y=t.background;if(y&&y.isColor){y.convertSRGBToLinear();const v=Math.max(y.r,y.g,y.b),g=Math.min(Math.max(Math.ceil(Math.log2(v)),-128),127);y=y.multiplyScalar(Math.pow(2,-g));const m=(g+128)/255;h.setClearColor(y,m),t.background=null}for(let v=0;v<6;v++){const g=v%3;g==0?(a.up.set(0,c[v],0),a.lookAt(l[v],0,0)):g==1?(a.up.set(0,0,c[v]),a.lookAt(0,l[v],0)):(a.up.set(0,c[v],0),a.lookAt(0,0,l[v])),Sc(r,g*Fn,v>2?Fn:0,Fn,Fn),h.setRenderTarget(r),h.render(t,a)}h.toneMapping=f,h.outputEncoding=u,h.setClearColor(d,p)}_textureToCubeUV(t,n){const i=this._renderer;t.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=ng()):this._equirectShader==null&&(this._equirectShader=tg());const r=t.isCubeTexture?this._cubemapShader:this._equirectShader,s=new nt(io[0],r),o=r.uniforms;o.envMap.value=t,t.isCubeTexture||o.texelSize.value.set(1/t.image.width,1/t.image.height),o.inputEncoding.value=zn[t.encoding],o.outputEncoding.value=zn[n.texture.encoding],Sc(n,0,0,3*Fn,2*Fn),i.setRenderTarget(n),i.render(s,Zu)}_applyPMREM(t){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<Kx;r++){const s=Math.sqrt(Mc[r]*Mc[r]-Mc[r-1]*Mc[r-1]),o=Qm[(r-1)%Qm.length];this._blur(t,r-1,r,s,o)}n.autoClear=i}_blur(t,n,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,n,i,r,"latitudinal",s),this._halfBlur(o,t,i,i,r,"longitudinal",s)}_halfBlur(t,n,i,r,s,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new nt(io[r],l),f=l.uniforms,d=Km[i]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*es-1),y=s/p,v=isFinite(s)?1+Math.floor(h*y):es;v>es&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${es}`);const g=[];let m=0;for(let b=0;b<es;++b){const L=b/y,D=Math.exp(-L*L/2);g.push(D),b==0?m+=D:b<v&&(m+=2*D)}for(let b=0;b<g.length;b++)g[b]=g[b]/m;f.envMap.value=t.texture,f.samples.value=v,f.weights.value=g,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a),f.dTheta.value=p,f.mipInt.value=zi-i,f.inputEncoding.value=zn[t.texture.encoding],f.outputEncoding.value=zn[t.texture.encoding];const x=Km[r],_=3*Math.max(0,Fn-2*x),T=(r===0?0:2*Fn)+2*x*(r>zi-ys?r-zi+ys:0);Sc(n,_,T,3*x,2*x),c.setRenderTarget(n),c.render(u,Zu)}}function RP(e){return e===void 0||e.type!==Us?!1:e.encoding===Vt||e.encoding===wa||e.encoding===Hl}function CP(){const e=[],t=[],n=[];let i=zi;for(let r=0;r<Kx;r++){const s=Math.pow(2,i);t.push(s);let o=1/s;r>zi-ys?o=Jx[r-zi+ys-1]:r==0&&(o=0),n.push(o);const a=1/(s-1),c=-a/2,l=1+a/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,f=6,d=3,p=2,y=1,v=new Float32Array(d*f*u),g=new Float32Array(p*f*u),m=new Float32Array(y*f*u);for(let _=0;_<u;_++){const T=_%3*2/3-1,b=_>2?0:-1,L=[T,b,0,T+2/3,b,0,T+2/3,b+1,0,T,b,0,T+2/3,b+1,0,T,b+1,0];v.set(L,d*f*_),g.set(h,p*f*_);const D=[_,_,_,_,_,_];m.set(D,y*f*_)}const x=new we;x.setAttribute("position",new Me(v,d)),x.setAttribute("uv",new Me(g,p)),x.setAttribute("faceIndex",new Me(m,y)),e.push(x),i>ys&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function eg(e){const t=new tn(3*Fn,3*Fn,e);return t.texture.mapping=Fs,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Sc(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function LP(e){const t=new Float32Array(e),n=new A(0,1,0);return new gi({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:zn[Vt]},outputEncoding:{value:zn[Vt]}},vertexShader:Hd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Gd()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:fi,depthTest:!1,depthWrite:!1})}function tg(){const e=new ie(1,1);return new gi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:zn[Vt]},outputEncoding:{value:zn[Vt]}},vertexShader:Hd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Gd()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:fi,depthTest:!1,depthWrite:!1})}function ng(){return new gi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:zn[Vt]},outputEncoding:{value:zn[Vt]}},vertexShader:Hd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Gd()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:fi,depthTest:!1,depthWrite:!1})}function Hd(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Gd(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function PP(e,t,n,i,r,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new qo(e,t,n,r,s,o)}const IP=0,OP=1,DP=0,NP=1,FP=2;function BP(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function UP(e){return e===void 0&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function zP(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new As(e,t)}function HP(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Qo(e)}function GP(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new As(e,t)}function VP(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new En(e)}function kP(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new En(e)}function WP(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new En(e)}function jP(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new A(e,t,n)}function qP(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Me(e,t).setUsage(br)}function XP(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Xo(e,t)}function YP(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Yo(e,t)}function $P(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new $o(e,t)}function ZP(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Zo(e,t)}function JP(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new wr(e,t)}function KP(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Jo(e,t)}function QP(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Mr(e,t)}function e2(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new he(e,t)}function t2(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Ko(e,t)}be.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(be.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e};Object.assign(ci.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new qe;for(let n=0,i=e.length;n<i;n++){const r=e[n];t.vertices.push(new A(r.x,r.y,r.z||0))}return t}});Object.assign(bn.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}});function Qx(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Ot.call(this,e),this.type="catmullrom",this.closed=!0}Qx.prototype=Object.create(Ot.prototype);function e_(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Ot.call(this,e),this.type="catmullrom"}e_.prototype=Object.create(Ot.prototype);function Vd(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Ot.call(this,e),this.type="catmullrom"}Vd.prototype=Object.create(Ot.prototype);Object.assign(Vd.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function n2(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Zx(e)}function i2(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new $x(e,t)}function r2(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Wt(new md(e.geometry),new rt({color:t!==void 0?t:16777215}))}Yx.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};qx.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function s2(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Wt(new Ad(e.geometry),new rt({color:t!==void 0?t:16777215}))}Object.assign(We.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ld.extractUrlBase(e)}});We.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function o2(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new dn(e)}function a2(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new ll(e)}Object.assign(Wx.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(Yn.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(xi.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});Ta.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)};jx.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)};Object.assign(Ee,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Ee.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Ee.ceilPowerOfTwo(e)}});Object.assign(Ht.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(Ie.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new A().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,s)}});Un.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)};Lt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)};Object.assign(zs.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}});Object.assign(_t.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}});Object.assign(_t,{barycoordFromPoint:function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),_t.getBarycoord(e,t,n,i,r)},normal:function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),_t.getNormal(e,t,n,i)}});Object.assign(Ui.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new gd(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new bd(this,e)}});Object.assign(ie.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(A.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(je.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(qe.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.assign(xe.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(xe.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(nt.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(nt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Z0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(ea.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(Qc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Kc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(be.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}});ht.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)};Object.defineProperties(Qe.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}});Object.defineProperties(Me.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===br},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(br)}}});Object.assign(Me.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?br:Ma),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(we.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Me(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(we.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(la.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}});Object.defineProperties(zd.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}});Object.defineProperties(Qt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===br},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}});Object.assign(Qt.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?br:Ma),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ra.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign(hd.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(Yl.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Se.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new me}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===nd}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}});Object.defineProperties(Yi.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Xi.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}});Object.defineProperties(kt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}});Object.assign(Ea.prototype,{clearTarget:function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(Ea.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?wa:Vt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(px.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function c2(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Gi(e,n)}Object.defineProperties(tn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}});Object.defineProperties(Dd.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return new _l().load(e,function(i){t.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});Gx.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Ss.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};const l2={merge:function(e,t,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");let i;t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,t=t.geometry),e.merge(t,i,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};Hi.crossOrigin=void 0;Hi.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new ul;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};Hi.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new cl;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};Hi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Hi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function u2(){console.error("THREE.CanvasRenderer has been removed")}function h2(){console.error("THREE.JSONLoader has been removed.")}const f2={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function d2(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Tv}}));const p2=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Qv,AddEquation:fr,AddOperation:$v,AdditiveAnimationBlendMode:od,AdditiveBlending:Oh,AlphaFormat:a0,AlwaysDepth:Vv,AlwaysStencilFunc:tx,AmbientLight:ml,AmbientLightProbe:pf,AnimationClip:an,AnimationLoader:sf,AnimationMixer:mf,AnimationObjectGroup:kx,AnimationUtils:tt,ArcCurve:Os,ArrayCamera:Jc,ArrowHelper:EP,Audio:Dd,AudioAnalyser:Gx,AudioContext:Od,AudioListener:iP,AudioLoader:_l,AxesHelper:Zx,AxisHelper:n2,BackSide:dt,BasicDepthPacking:K0,BasicShadowMap:LT,BinaryTextureLoader:a2,Bone:Kh,BooleanKeyframeTrack:rl,BoundingBoxHelper:i2,Box2:Wx,Box3:Yn,Box3Helper:SP,BoxBufferGeometry:Sa,BoxGeometry:tf,BoxHelper:$x,BufferAttribute:Me,BufferGeometry:we,BufferGeometryLoader:xl,ByteType:t0,Cache:Pr,Camera:Vn,CameraHelper:MP,CanvasRenderer:u2,CanvasTexture:ta,CatmullRomCurve3:Ot,CineonToneMapping:Kv,CircleBufferGeometry:fd,CircleGeometry:vx,ClampToEdgeWrapping:Ut,Clock:Hx,ClosedSplineCurve3:Qx,Color:me,ColorKeyframeTrack:sl,CompressedTexture:Rs,CompressedTextureLoader:of,ConeBufferGeometry:_x,ConeGeometry:xx,CubeCamera:Ss,CubeGeometry:tf,CubeReflectionMapping:xa,CubeRefractionMapping:_a,CubeTexture:kn,CubeTextureLoader:cl,CubeUVReflectionMapping:Fs,CubeUVRefractionMapping:ba,CubicBezierCurve:An,CubicBezierCurve3:jn,CubicInterpolant:nl,CullFaceBack:Ih,CullFaceFront:Av,CullFaceFrontBack:CT,CullFaceNone:Ev,Curve:be,CurvePath:ci,CustomBlending:Cv,CustomToneMapping:e0,CylinderBufferGeometry:Aa,CylinderGeometry:dd,Cylindrical:gP,DataTexture:Sr,DataTexture2DArray:Ts,DataTexture3D:Es,DataTextureLoader:ll,DecrementStencilOp:GT,DecrementWrapStencilOp:kT,DefaultLoadingManager:Bx,DepthFormat:vr,DepthStencilFormat:ws,DepthTexture:na,DirectionalLight:pl,DirectionalLightHelper:wP,DiscreteInterpolant:il,DodecahedronBufferGeometry:pd,DodecahedronGeometry:bx,DoubleSide:ya,DstAlphaFactor:Fv,DstColorFactor:Uv,DynamicBufferAttribute:qP,DynamicCopyUsage:iE,DynamicDrawUsage:br,DynamicReadUsage:eE,EdgesGeometry:md,EdgesHelper:r2,EllipseCurve:sn,EqualDepth:Wv,EqualStencilFunc:XT,EquirectangularReflectionMapping:Xc,EquirectangularRefractionMapping:Yc,Euler:Hs,EventDispatcher:Xn,ExtrudeBufferGeometry:Ra,ExtrudeGeometry:gd,Face3:qo,Face4:PP,FaceColors:NP,FileLoader:dn,FlatShading:nd,Float32Attribute:e2,Float32BufferAttribute:he,Float64Attribute:t2,Float64BufferAttribute:Ko,FloatType:ai,Fog:Wl,FogExp2:kl,Font:Id,FontLoader:ff,FrontSide:Ns,Frustum:Ta,GLBufferAttribute:Ud,GLSL1:sE,GLSL3:Yh,GammaEncoding:Hl,Geometry:qe,GeometryUtils:l2,GreaterDepth:qv,GreaterEqualDepth:jv,GreaterEqualStencilFunc:JT,GreaterStencilFunc:$T,GridHelper:Yx,Group:Di,HalfFloatType:ko,HemisphereLight:hl,HemisphereLightHelper:_P,HemisphereLightProbe:df,IcosahedronBufferGeometry:yd,IcosahedronGeometry:Tx,ImageBitmapLoader:hf,ImageLoader:Is,ImageUtils:Hi,ImmediateRenderObject:ua,IncrementStencilOp:HT,IncrementWrapStencilOp:VT,InstancedBufferAttribute:vl,InstancedBufferGeometry:la,InstancedInterleavedBuffer:gf,InstancedMesh:el,Int16Attribute:ZP,Int16BufferAttribute:Zo,Int32Attribute:KP,Int32BufferAttribute:Jo,Int8Attribute:XP,Int8BufferAttribute:Xo,IntType:i0,InterleavedBuffer:Qt,InterleavedBufferAttribute:Wi,Interpolant:nn,InterpolateDiscrete:Wo,InterpolateLinear:To,InterpolateSmooth:Dc,InvertStencilOp:WT,JSONLoader:h2,KeepStencilOp:Nc,KeyframeTrack:bt,LOD:ea,LatheBufferGeometry:vd,LatheGeometry:Ex,Layers:ud,LensFlare:d2,LessDepth:kv,LessEqualDepth:qc,LessEqualStencilFunc:YT,LessStencilFunc:qT,Light:Qe,LightProbe:cn,Line:fn,Line3:jx,LineBasicMaterial:rt,LineCurve:Xt,LineCurve3:Rn,LineDashedMaterial:Lr,LineLoop:tl,LinePieces:OP,LineSegments:Wt,LineStrip:IP,LinearEncoding:Vt,LinearFilter:vt,LinearInterpolant:aa,LinearMipMapLinearFilter:NT,LinearMipMapNearestFilter:DT,LinearMipmapLinearFilter:Bs,LinearMipmapNearestFilter:sd,LinearToneMapping:Zv,Loader:We,LoaderUtils:Ld,LoadingManager:Rd,LogLuvEncoding:J0,LoopOnce:X0,LoopPingPong:$0,LoopRepeat:Y0,LuminanceAlphaFormat:l0,LuminanceFormat:c0,MOUSE:AT,Material:Se,MaterialLoader:yl,Math:Ee,MathUtils:Ee,Matrix3:Ht,Matrix4:Ie,MaxEquation:Bh,Mesh:nt,MeshBasicMaterial:un,MeshDepthMaterial:Vi,MeshDistanceMaterial:ki,MeshFaceMaterial:BP,MeshLambertMaterial:Rr,MeshMatcapMaterial:Cr,MeshNormalMaterial:Ar,MeshPhongMaterial:Yi,MeshPhysicalMaterial:Xi,MeshStandardMaterial:Wn,MeshToonMaterial:Er,MinEquation:Fh,MirroredRepeatWrapping:Go,MixOperation:Yv,MultiMaterial:UP,MultiplyBlending:Nh,MultiplyOperation:va,NearestFilter:pt,NearestMipMapLinearFilter:OT,NearestMipMapNearestFilter:IT,NearestMipmapLinearFilter:Zc,NearestMipmapNearestFilter:$c,NeverDepth:Gv,NeverStencilFunc:jT,NoBlending:fi,NoColors:DP,NoToneMapping:yr,NormalAnimationBlendMode:zl,NormalBlending:ms,NotEqualDepth:Xv,NotEqualStencilFunc:ZT,NumberKeyframeTrack:Ls,Object3D:xe,ObjectLoader:KL,ObjectSpaceNormalMap:ex,OctahedronBufferGeometry:ql,OctahedronGeometry:Ax,OneFactor:Ov,OneMinusDstAlphaFactor:Bv,OneMinusDstColorFactor:zv,OneMinusSrcAlphaFactor:rd,OneMinusSrcColorFactor:Nv,OrthographicCamera:Ds,PCFShadowMap:td,PCFSoftShadowMap:Rv,PMREMGenerator:AP,ParametricBufferGeometry:Cs,ParametricGeometry:oa,Particle:HP,ParticleBasicMaterial:kP,ParticleSystem:GP,ParticleSystemMaterial:WP,Path:bn,PerspectiveCamera:ht,Plane:Un,PlaneBufferGeometry:Vl,PlaneGeometry:Rx,PlaneHelper:TP,PointCloud:zP,PointCloudMaterial:VP,PointLight:dl,PointLightHelper:vP,Points:As,PointsMaterial:En,PolarGridHelper:bP,PolyhedronBufferGeometry:Dr,PolyhedronGeometry:Cx,PositionalAudio:sP,PropertyBinding:Pt,PropertyMixer:Nd,QuadraticBezierCurve:Cn,QuadraticBezierCurve3:qn,Quaternion:Lt,QuaternionKeyframeTrack:ca,QuaternionLinearInterpolant:ol,REVISION:Tv,RGBADepthPacking:Q0,RGBAFormat:en,RGBAIntegerFormat:g0,RGBA_ASTC_10x10_Format:C0,RGBA_ASTC_10x5_Format:E0,RGBA_ASTC_10x6_Format:A0,RGBA_ASTC_10x8_Format:R0,RGBA_ASTC_12x10_Format:L0,RGBA_ASTC_12x12_Format:P0,RGBA_ASTC_4x4_Format:v0,RGBA_ASTC_5x4_Format:x0,RGBA_ASTC_5x5_Format:_0,RGBA_ASTC_6x5_Format:b0,RGBA_ASTC_6x6_Format:w0,RGBA_ASTC_8x5_Format:M0,RGBA_ASTC_8x6_Format:S0,RGBA_ASTC_8x8_Format:T0,RGBA_BPTC_Format:I0,RGBA_ETC2_EAC_Format:Xh,RGBA_PVRTC_2BPPV1_Format:jh,RGBA_PVRTC_4BPPV1_Format:Wh,RGBA_S3TC_DXT1_Format:zh,RGBA_S3TC_DXT3_Format:Hh,RGBA_S3TC_DXT5_Format:Gh,RGBDEncoding:ld,RGBEEncoding:Gl,RGBEFormat:u0,RGBFormat:Fi,RGBIntegerFormat:m0,RGBM16Encoding:cd,RGBM7Encoding:ad,RGB_ETC1_Format:y0,RGB_ETC2_Format:qh,RGB_PVRTC_2BPPV1_Format:kh,RGB_PVRTC_4BPPV1_Format:Vh,RGB_S3TC_DXT1_Format:Uh,RGFormat:d0,RGIntegerFormat:p0,RawShaderMaterial:gi,Ray:zs,Raycaster:zd,RectAreaLight:gl,RedFormat:h0,RedIntegerFormat:f0,ReinhardToneMapping:Jv,RepeatWrapping:Ho,ReplaceStencilOp:zT,ReverseSubtractEquation:Pv,RingBufferGeometry:xd,RingGeometry:Lx,SRGB8_ALPHA8_ASTC_10x10_Format:W0,SRGB8_ALPHA8_ASTC_10x5_Format:G0,SRGB8_ALPHA8_ASTC_10x6_Format:V0,SRGB8_ALPHA8_ASTC_10x8_Format:k0,SRGB8_ALPHA8_ASTC_12x10_Format:j0,SRGB8_ALPHA8_ASTC_12x12_Format:q0,SRGB8_ALPHA8_ASTC_4x4_Format:O0,SRGB8_ALPHA8_ASTC_5x4_Format:D0,SRGB8_ALPHA8_ASTC_5x5_Format:N0,SRGB8_ALPHA8_ASTC_6x5_Format:F0,SRGB8_ALPHA8_ASTC_6x6_Format:B0,SRGB8_ALPHA8_ASTC_8x5_Format:U0,SRGB8_ALPHA8_ASTC_8x6_Format:z0,SRGB8_ALPHA8_ASTC_8x8_Format:H0,Scene:hd,SceneUtils:f2,ShaderChunk:Ne,ShaderLib:_n,ShaderMaterial:kt,ShadowMaterial:Tr,Shape:Ui,ShapeBufferGeometry:_d,ShapeGeometry:bd,ShapePath:Pd,ShapeUtils:di,ShortType:n0,Skeleton:Qc,SkeletonHelper:qx,SkinnedMesh:Kc,SmoothShading:PT,Sphere:xi,SphereBufferGeometry:Xl,SphereGeometry:Px,Spherical:mP,SphericalHarmonics3:Ux,Spline:Vd,SplineCurve:Ln,SplineCurve3:e_,SpotLight:fl,SpotLightHelper:yP,Sprite:Qo,SpriteMaterial:ji,SrcAlphaFactor:id,SrcAlphaSaturateFactor:Hv,SrcColorFactor:Dv,StaticCopyUsage:nE,StaticDrawUsage:Ma,StaticReadUsage:QT,StereoCamera:zx,StreamCopyUsage:rE,StreamDrawUsage:KT,StreamReadUsage:tE,StringKeyframeTrack:al,SubtractEquation:Lv,SubtractiveBlending:Dh,TOUCH:RT,TangentSpaceNormalMap:Or,TetrahedronBufferGeometry:wd,TetrahedronGeometry:Ix,TextBufferGeometry:Md,TextGeometry:Ox,Texture:Xe,TextureLoader:ul,TorusBufferGeometry:Sd,TorusGeometry:Dx,TorusKnotBufferGeometry:Td,TorusKnotGeometry:Nx,Triangle:_t,TriangleFanDrawMode:BT,TriangleStripDrawMode:FT,TrianglesDrawMode:Z0,TubeBufferGeometry:Ed,TubeGeometry:Fx,UVMapping:Ul,Uint16Attribute:JP,Uint16BufferAttribute:wr,Uint32Attribute:QP,Uint32BufferAttribute:Mr,Uint8Attribute:YP,Uint8BufferAttribute:Yo,Uint8ClampedAttribute:$P,Uint8ClampedBufferAttribute:$o,Uniform:Yl,UniformsLib:de,UniformsUtils:sx,UnsignedByteType:Us,UnsignedInt248Type:gs,UnsignedIntType:So,UnsignedShort4444Type:r0,UnsignedShort5551Type:s0,UnsignedShort565Type:o0,UnsignedShortType:Vo,VSMShadowMap:ss,Vector2:ie,Vector3:A,Vector4:je,VectorKeyframeTrack:Ps,Vertex:jP,VertexColors:FP,VideoTexture:ef,WebGL1Renderer:Jh,WebGLCubeRenderTarget:Gi,WebGLMultisampleRenderTarget:$h,WebGLRenderTarget:tn,WebGLRenderTargetCube:c2,WebGLRenderer:Ea,WebGLUtils:mx,WireframeGeometry:Ad,WireframeHelper:s2,WrapAroundEnding:jo,XHRLoader:o2,ZeroCurvatureEnding:pr,ZeroFactor:Iv,ZeroSlopeEnding:mr,ZeroStencilOp:UT,sRGBEncoding:wa},Symbol.toStringTag,{value:"Module"}));Number.prototype.clamp=function(e,t){return Math.min(Math.max(this,e),t)};function t_(){return typeof navigator<"u"?/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<600:null}const m2=e=>document.querySelector(e),g2=e=>typeof e=="number"?"#"+("00000"+e.toString(16)).slice(-6):e;function n_(e){for(;e.children&&e.children.length>0;)n_(e.children[0]),e.remove(e.children[0]);e.geometry&&e.geometry.dispose(),e.material&&(Object.keys(e.material).forEach(t=>{e.material[t]&&e.material[t]!==null&&typeof e.material[t].dispose=="function"&&e.material[t].dispose()}),e.material.dispose())}const $l=typeof window=="object";let Tc=$l&&window.THREE||{};$l&&!window.VANTA&&(window.VANTA={});const li=$l&&window.VANTA||{};li.register=(e,t)=>li[e]=n=>new t(n);li.version="0.5.24";const Ku=function(){return Array.prototype.unshift.call(arguments,"[VANTA]"),console.error.apply(this,arguments)};li.VantaBase=class{constructor(t={}){if(!$l)return!1;li.current=this,this.windowMouseMoveWrapper=this.windowMouseMoveWrapper.bind(this),this.windowTouchWrapper=this.windowTouchWrapper.bind(this),this.windowGyroWrapper=this.windowGyroWrapper.bind(this),this.resize=this.resize.bind(this),this.animationLoop=this.animationLoop.bind(this),this.restart=this.restart.bind(this);const n=typeof this.getDefaultOptions=="function"?this.getDefaultOptions():this.defaultOptions;if(this.options=Object.assign({mouseControls:!0,touchControls:!0,gyroControls:!1,minHeight:200,minWidth:200,scale:1,scaleMobile:1},n),(t instanceof HTMLElement||typeof t=="string")&&(t={el:t}),Object.assign(this.options,t),this.options.THREE&&(Tc=this.options.THREE),this.el=this.options.el,this.el==null)Ku('Instance needs "el" param!');else if(!(this.options.el instanceof HTMLElement)){const r=this.el;if(this.el=m2(r),!this.el){Ku("Cannot find element",r);return}}this.prepareEl(),this.initThree(),this.setSize();try{this.init()}catch(r){Ku("Init error",r),this.renderer&&this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),this.options.backgroundColor&&(console.log("[VANTA] Falling back to backgroundColor"),this.el.style.background=g2(this.options.backgroundColor));return}this.initMouse(),this.resize(),this.animationLoop();const i=window.addEventListener;i("resize",this.resize),window.requestAnimationFrame(this.resize),this.options.mouseControls&&(i("scroll",this.windowMouseMoveWrapper),i("mousemove",this.windowMouseMoveWrapper)),this.options.touchControls&&(i("touchstart",this.windowTouchWrapper),i("touchmove",this.windowTouchWrapper)),this.options.gyroControls&&i("deviceorientation",this.windowGyroWrapper)}setOptions(t={}){Object.assign(this.options,t),this.triggerMouseMove()}prepareEl(){let t,n;if(typeof Node<"u"&&Node.TEXT_NODE)for(t=0;t<this.el.childNodes.length;t++){const i=this.el.childNodes[t];if(i.nodeType===Node.TEXT_NODE){const r=document.createElement("span");r.textContent=i.textContent,i.parentElement.insertBefore(r,i),i.remove()}}for(t=0;t<this.el.children.length;t++)n=this.el.children[t],getComputedStyle(n).position==="static"&&(n.style.position="relative"),getComputedStyle(n).zIndex==="auto"&&(n.style.zIndex=1);getComputedStyle(this.el).position==="static"&&(this.el.style.position="relative")}applyCanvasStyles(t,n={}){Object.assign(t.style,{position:"absolute",zIndex:0,top:0,left:0,background:""}),Object.assign(t.style,n),t.classList.add("vanta-canvas")}initThree(){if(!Tc.WebGLRenderer){console.warn("[VANTA] No THREE defined on window");return}this.renderer=new Tc.WebGLRenderer({alpha:!0,antialias:!0}),this.el.appendChild(this.renderer.domElement),this.applyCanvasStyles(this.renderer.domElement),isNaN(this.options.backgroundAlpha)&&(this.options.backgroundAlpha=1),this.scene=new Tc.Scene}getCanvasElement(){if(this.renderer)return this.renderer.domElement;if(this.p5renderer)return this.p5renderer.canvas}getCanvasRect(){const t=this.getCanvasElement();return t?t.getBoundingClientRect():!1}windowMouseMoveWrapper(t){const n=this.getCanvasRect();if(!n)return!1;const i=t.clientX-n.left,r=t.clientY-n.top;i>=0&&r>=0&&i<=n.width&&r<=n.height&&(this.mouseX=i,this.mouseY=r,this.options.mouseEase||this.triggerMouseMove(i,r))}windowTouchWrapper(t){const n=this.getCanvasRect();if(!n)return!1;if(t.touches.length===1){const i=t.touches[0].clientX-n.left,r=t.touches[0].clientY-n.top;i>=0&&r>=0&&i<=n.width&&r<=n.height&&(this.mouseX=i,this.mouseY=r,this.options.mouseEase||this.triggerMouseMove(i,r))}}windowGyroWrapper(t){const n=this.getCanvasRect();if(!n)return!1;const i=Math.round(t.alpha*2)-n.left,r=Math.round(t.beta*2)-n.top;i>=0&&r>=0&&i<=n.width&&r<=n.height&&(this.mouseX=i,this.mouseY=r,this.options.mouseEase||this.triggerMouseMove(i,r))}triggerMouseMove(t,n){t===void 0&&n===void 0&&(this.options.mouseEase?(t=this.mouseEaseX,n=this.mouseEaseY):(t=this.mouseX,n=this.mouseY)),this.uniforms&&(this.uniforms.iMouse.value.x=t/this.scale,this.uniforms.iMouse.value.y=n/this.scale);const i=t/this.width,r=n/this.height;typeof this.onMouseMove=="function"&&this.onMouseMove(i,r)}setSize(){this.scale||(this.scale=1),t_()&&this.options.scaleMobile?this.scale=this.options.scaleMobile:this.options.scale&&(this.scale=this.options.scale),this.width=Math.max(this.el.offsetWidth,this.options.minWidth),this.height=Math.max(this.el.offsetHeight,this.options.minHeight)}initMouse(){(!this.mouseX&&!this.mouseY||this.mouseX===this.options.minWidth/2&&this.mouseY===this.options.minHeight/2)&&(this.mouseX=this.width/2,this.mouseY=this.height/2,this.triggerMouseMove(this.mouseX,this.mouseY))}resize(){this.setSize(),this.camera&&(this.camera.aspect=this.width/this.height,typeof this.camera.updateProjectionMatrix=="function"&&this.camera.updateProjectionMatrix()),this.renderer&&(this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio/this.scale)),typeof this.onResize=="function"&&this.onResize()}isOnScreen(){const t=this.el.offsetHeight,n=this.el.getBoundingClientRect(),i=window.pageYOffset||(document.documentElement||document.body.parentNode||document.body).scrollTop,r=n.top+i,s=r-window.innerHeight,o=r+t;return s<=i&&i<=o}animationLoop(){this.t||(this.t=0),this.t2||(this.t2=0);const t=performance.now();if(this.prevNow){let n=(t-this.prevNow)/16.666666666666668;n=Math.max(.2,Math.min(n,5)),this.t+=n,this.t2+=(this.options.speed||1)*n,this.uniforms&&(this.uniforms.iTime.value=this.t2*.016667)}return this.prevNow=t,this.options.mouseEase&&(this.mouseEaseX=this.mouseEaseX||this.mouseX||0,this.mouseEaseY=this.mouseEaseY||this.mouseY||0,Math.abs(this.mouseEaseX-this.mouseX)+Math.abs(this.mouseEaseY-this.mouseY)>.1&&(this.mouseEaseX+=(this.mouseX-this.mouseEaseX)*.05,this.mouseEaseY+=(this.mouseY-this.mouseEaseY)*.05,this.triggerMouseMove(this.mouseEaseX,this.mouseEaseY))),(this.isOnScreen()||this.options.forceAnimate)&&(typeof this.onUpdate=="function"&&this.onUpdate(),this.scene&&this.camera&&(this.renderer.render(this.scene,this.camera),this.renderer.setClearColor(this.options.backgroundColor,this.options.backgroundAlpha)),this.fps&&this.fps.update&&this.fps.update(),typeof this.afterRender=="function"&&this.afterRender()),this.req=window.requestAnimationFrame(this.animationLoop)}restart(){if(this.scene)for(;this.scene.children.length;)this.scene.remove(this.scene.children[0]);typeof this.onRestart=="function"&&this.onRestart(),this.init()}init(){typeof this.onInit=="function"&&this.onInit()}destroy(){typeof this.onDestroy=="function"&&this.onDestroy();const t=window.removeEventListener;t("touchstart",this.windowTouchWrapper),t("touchmove",this.windowTouchWrapper),t("scroll",this.windowMouseMoveWrapper),t("mousemove",this.windowMouseMoveWrapper),t("deviceorientation",this.windowGyroWrapper),t("resize",this.resize),window.cancelAnimationFrame(this.req);const n=this.scene;n&&n.children&&n_(n),this.renderer&&(this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),this.renderer=null,this.scene=null),li.current===this&&(li.current=null)}};const y2=li.VantaBase,v2=typeof window=="object";let x2=v2&&window.THREE,{Camera:ig,ClampToEdgeWrapping:Qu,DataTexture:rg,FloatType:eh,Mesh:sg,NearestFilter:ro,PlaneBufferGeometry:og,RGBAFormat:th,Scene:ag,ShaderMaterial:cg,WebGLRenderTarget:lg}=x2||{};var _2=function(e,t,n,i){i&&({Camera:ig,ClampToEdgeWrapping:Qu,DataTexture:rg,FloatType:eh,Mesh:sg,NearestFilter:ro,PlaneBufferGeometry:og,RGBAFormat:th,Scene:ag,ShaderMaterial:cg,WebGLRenderTarget:lg}=i),this.variables=[],this.currentTextureIndex=0;var r=eh,s=new ag,o=new ig;o.position.z=1;var a={passThruTexture:{value:null}},c=u(d(),a),l=new sg(new og(2,2),c);s.add(l),this.setDataType=function(p){return r=p,this},this.addVariable=function(p,y,v){var g=this.createShaderMaterial(y),m={name:p,initialValueTexture:v,material:g,dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:ro,magFilter:ro};return this.variables.push(m),m},this.setVariableDependencies=function(p,y){p.dependencies=y},this.init=function(){if(!n.capabilities.isWebGL2&&!n.extensions.get("OES_texture_float"))return"No OES_texture_float support for float textures.";if(n.capabilities.maxVertexTextures===0)return"No support for vertex shader textures.";for(var p=0;p<this.variables.length;p++){var y=this.variables[p];y.renderTargets[0]=this.createRenderTarget(e,t,y.wrapS,y.wrapT,y.minFilter,y.magFilter),y.renderTargets[1]=this.createRenderTarget(e,t,y.wrapS,y.wrapT,y.minFilter,y.magFilter),this.renderTexture(y.initialValueTexture,y.renderTargets[0]),this.renderTexture(y.initialValueTexture,y.renderTargets[1]);var v=y.material,g=v.uniforms;if(y.dependencies!==null)for(var m=0;m<y.dependencies.length;m++){var x=y.dependencies[m];if(x.name!==y.name){for(var _=!1,T=0;T<this.variables.length;T++)if(x.name===this.variables[T].name){_=!0;break}if(!_)return"Variable dependency not found. Variable="+y.name+", dependency="+x.name}g[x.name]={value:null},v.fragmentShader=`
uniform sampler2D `+x.name+`;
`+v.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){for(var p=this.currentTextureIndex,y=this.currentTextureIndex===0?1:0,v=0,g=this.variables.length;v<g;v++){var m=this.variables[v];if(m.dependencies!==null)for(var x=m.material.uniforms,_=0,T=m.dependencies.length;_<T;_++){var b=m.dependencies[_];x[b.name].value=b.renderTargets[p].texture}this.doRenderTarget(m.material,m.renderTargets[y])}this.currentTextureIndex=y},this.getCurrentRenderTarget=function(p){return p.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(p){return p.renderTargets[this.currentTextureIndex===0?1:0]};function h(p){p.defines.resolution="vec2( "+e.toFixed(1)+", "+t.toFixed(1)+" )"}this.addResolutionDefine=h;function u(p,y){y=y||{};var v=new cg({uniforms:y,vertexShader:f(),fragmentShader:p});return h(v),v}this.createShaderMaterial=u,this.createRenderTarget=function(p,y,v,g,m,x){p=p||e,y=y||t,v=v||Qu,g=g||Qu,m=m||ro,x=x||ro;var _=new lg(p,y,{wrapS:v,wrapT:g,minFilter:m,magFilter:x,format:th,type:r,stencilBuffer:!1,depthBuffer:!1});return _},this.createTexture=function(){var p=new Float32Array(e*t*4);return new rg(p,e,t,th,eh)},this.renderTexture=function(p,y){a.passThruTexture.value=p,this.doRenderTarget(c,y),a.passThruTexture.value=null},this.doRenderTarget=function(p,y){var v=n.getRenderTarget();l.material=p,n.setRenderTarget(y),n.render(s,o),l.material=c,n.setRenderTarget(v)};function f(){return`void main()	{

	gl_Position = vec4( position, 1.0 );

}
`}function d(){return`uniform sampler2D passThruTexture;

void main() {

	vec2 uv = gl_FragCoord.xy / resolution.xy;

	gl_FragColor = texture2D( passThruTexture, uv );

}
`}};const b2=typeof window=="object";let Ce=b2&&window.THREE;const nh=!t_();let vn=32,Ec=vn*vn;const Lo=800,ih=Lo/2,w2=e=>{const t=new Ce.BufferGeometry;e.quantity&&(vn=Math.pow(2,e.quantity),Ec=vn*vn);const n=Ec*3,i=n*3,r=new Ce.BufferAttribute(new Float32Array(i*3),3),s=new Ce.BufferAttribute(new Float32Array(i*3),3),o=new Ce.BufferAttribute(new Float32Array(i*2),2),a=new Ce.BufferAttribute(new Float32Array(i),1);t.setAttribute||(t.setAttribute=t.addAttribute),t.setAttribute("position",r),t.setAttribute("birdColor",s),t.setAttribute("reference",o),t.setAttribute("birdVertex",a);let c=0;const l=function(){for(let d=0;d<arguments.length;d++)r.array[c++]=arguments[d]},h=e.wingSpan||20,u=e.birdSize||1;for(let d=0;d<Ec;d++)l(0,-0,-20*u,0,4*u,-20*u,0,0,30*u),l(0,0,-15*u,-h*u,0,0,0,0,15*u),l(0,0,15*u,h*u,0,0,0,0,-15*u);const f={};for(c=0;c<n*3;c++){const d=~~(c/3),p=d%vn/vn,y=~~(d/vn)/vn,v=~~(c/9)/Ec,g=v.toString(),m=e.colorMode.indexOf("Gradient")!=-1;let x;!m&&f[g]?x=f[g]:x=e.effect.getNewCol(v),!m&&!f[g]&&(f[g]=x),s.array[c*3+0]=x.r,s.array[c*3+1]=x.g,s.array[c*3+2]=x.b,o.array[c*2]=p,o.array[c*2+1]=y,a.array[c]=c%9}return t.scale(.2,.2,.2)},M2=(e={})=>{const t=new Ce.BufferGeometry,n=[];function i(s,o,a){const c=1.5*(e.birdSize||1);n.push(new Ce.Vector3(s*c,o*c,a*c))}i(5,0,0),i(-5,-1,1),i(-5,0,0),i(-5,-2,-1),i(0,2,-6),i(0,2,6),i(2,0,0),i(-3,0,0),t.setFromPoints(n);const r=[];return r.push(0,2,1),r.push(4,7,6),r.push(5,6,7),t.setIndex(r),t};class S2{constructor(t){var n=new Ce.Vector3,i,r=500,s=500,o=200,a,c=100,l=2.5,h=.1,u=t;this.position=new Ce.Vector3,this.velocity=new Ce.Vector3,i=new Ce.Vector3,this.setGoal=function(f){a=f},this.setWorldSize=function(f,d,p){r=f,s=d,o=p},this.run=function(f){n.set(-r,this.position.y,this.position.z),n=this.avoid(n),n.multiplyScalar(5),i.add(n),n.set(r,this.position.y,this.position.z),n=this.avoid(n),n.multiplyScalar(5),i.add(n),n.set(this.position.x,-s,this.position.z),n=this.avoid(n),n.multiplyScalar(5),i.add(n),n.set(this.position.x,s,this.position.z),n=this.avoid(n),n.multiplyScalar(5),i.add(n),n.set(this.position.x,this.position.y,-o),n=this.avoid(n),n.multiplyScalar(5),i.add(n),n.set(this.position.x,this.position.y,o),n=this.avoid(n),n.multiplyScalar(5),i.add(n),Math.random()>.5&&this.flock(f),this.move()},this.flock=function(f){a&&i.add(this.reach(a,.005)),i.add(this.alignment(f)),i.add(this.cohesion(f)),i.add(this.separation(f))},this.move=function(){this.velocity.add(i);var f=this.velocity.length();f>l&&this.velocity.divideScalar(f/l),this.position.add(this.velocity),i.set(0,0,0)},this.checkBounds=function(){this.position.x>r&&(this.position.x=-r),this.position.x<-r&&(this.position.x=r),this.position.y>s&&(this.position.y=-s),this.position.y<-s&&(this.position.y=s),this.position.z>o&&(this.position.z=-o),this.position.z<-o&&(this.position.z=o)},this.avoid=function(f){var d=new Ce.Vector3;return d.copy(this.position),d.sub(f),d.multiplyScalar(1/this.position.distanceToSquared(f)),d},this.repulse=function(f){var d=this.position.distanceTo(f);if(d<150){var p=new Ce.Vector3;p.subVectors(this.position,f),p.multiplyScalar(.5/d),i.add(p)}},this.reach=function(f,d){var p=new Ce.Vector3;return p.subVectors(f,this.position),p.multiplyScalar(d),p},this.alignment=function(f){var d,p=new Ce.Vector3,y=0,v;const g=c*u.alignment/20;for(var m=0,x=f.length;m<x;m++)Math.random()>.6||(d=f[m],v=d.position.distanceTo(this.position),v>0&&v<=g&&(p.add(d.velocity),y++));if(y>0){p.divideScalar(y);var _=p.length();_>h&&p.divideScalar(_/h)}return p},this.cohesion=function(f){var d,p,y=new Ce.Vector3,v=new Ce.Vector3,g=0;const m=c*u.cohesion/20;for(var x=0,_=f.length;x<_;x++)Math.random()>.6||(d=f[x],p=d.position.distanceTo(this.position),p>0&&p<=m&&(y.add(d.position),g++));g>0&&y.divideScalar(g),v.subVectors(y,this.position);var T=v.length();return T>h&&v.divideScalar(T/h),v},this.separation=function(f){var d,p,y=new Ce.Vector3,v=new Ce.Vector3;const g=c*u.separation/20;for(var m=0,x=f.length;m<x;m++)Math.random()>.6||(d=f[m],p=d.position.distanceTo(this.position),p>0&&p<=g&&(v.subVectors(this.position,d.position),v.normalize(),v.divideScalar(p),y.add(v)));return y}}}const T2=`uniform float time;
uniform float delta;

void main() {

  vec2 uv = gl_FragCoord.xy / resolution.xy;
  vec4 tmpPos = texture2D( texturePosition, uv );
  vec3 position = tmpPos.xyz;
  vec3 velocity = texture2D( textureVelocity, uv ).xyz;

  float phase = tmpPos.w;

  phase = mod( ( phase + delta +
    length( velocity.xz ) * delta * 3. +
    max( velocity.y, 0.0 ) * delta * 6. ), 62.83 );

  gl_FragColor = vec4( position + velocity * delta * 15. , phase );

}`,E2=`uniform float time;
uniform float testing;
uniform float delta; // about 0.016
uniform float separationDistance; // 20
uniform float alignmentDistance; // 40
uniform float cohesionDistance;
uniform float speedLimit;
uniform float freedomFactor;
uniform vec3 predator;

const float width = resolution.x;
const float height = resolution.y;

const float PI = 3.141592653589793;
const float PI_2 = PI * 2.0;
// const float VISION = PI * 0.55;

float zoneRadius = 40.0;
float zoneRadiusSquared = 1600.0;

float separationThresh = 0.45;
float alignmentThresh = 0.65;

const float UPPER_BOUNDS = BOUNDS;
const float LOWER_BOUNDS = -UPPER_BOUNDS;

float rand(vec2 co){
  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main() {

  zoneRadius = separationDistance + alignmentDistance + cohesionDistance;
  separationThresh = separationDistance / zoneRadius;
  alignmentThresh = ( separationDistance + alignmentDistance ) / zoneRadius;
  zoneRadiusSquared = zoneRadius * zoneRadius;


  vec2 uv = gl_FragCoord.xy / resolution.xy;
  vec3 birdPosition, birdVelocity;

  vec3 selfPosition = texture2D( texturePosition, uv ).xyz;
  vec3 selfVelocity = texture2D( textureVelocity, uv ).xyz;

  float dist;
  vec3 dir; // direction
  float distSquared;

  float separationSquared = separationDistance * separationDistance;
  float cohesionSquared = cohesionDistance * cohesionDistance;

  float f;
  float percent;

  vec3 velocity = selfVelocity;

  float limit = speedLimit;

  dir = predator * UPPER_BOUNDS - selfPosition;
  dir.z = 0.;
  // dir.z *= 0.6;
  dist = length( dir );
  distSquared = dist * dist;

  float preyRadius = 150.0;
  float preyRadiusSq = preyRadius * preyRadius;

  // move birds away from predator
  if (dist < preyRadius) {

    f = ( distSquared / preyRadiusSq - 1.0 ) * delta * 100.;
    velocity += normalize( dir ) * f;
    limit += 5.0;
  }

  // if (testing == 0.0) {}
  // if ( rand( uv + time ) < freedomFactor ) {}

  // Attract flocks to the center
  vec3 central = vec3( 0., 0., 0. );
  dir = selfPosition - central;
  dist = length( dir );

  dir.y *= 2.5;
  velocity -= normalize( dir ) * delta * 5.;

  for (float y=0.0;y<height;y++) {
    for (float x=0.0;x<width;x++) {

      vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;
      birdPosition = texture2D( texturePosition, ref ).xyz;

      dir = birdPosition - selfPosition;
      dist = length(dir);

      if (dist < 0.0001) continue;

      distSquared = dist * dist;

      if (distSquared > zoneRadiusSquared ) continue;

      percent = distSquared / zoneRadiusSquared;

      if ( percent < separationThresh ) { // low

        // Separation - Move apart for comfort
        f = (separationThresh / percent - 1.0) * delta;
        velocity -= normalize(dir) * f;

      } else if ( percent < alignmentThresh ) { // high

        // Alignment - fly the same direction
        float threshDelta = alignmentThresh - separationThresh;
        float adjustedPercent = ( percent - separationThresh ) / threshDelta;

        birdVelocity = texture2D( textureVelocity, ref ).xyz;

        f = ( 0.5 - cos( adjustedPercent * PI_2 ) * 0.5 + 0.5 ) * delta;
        velocity += normalize(birdVelocity) * f;

      } else {

        // Attraction / Cohesion - move closer
        float threshDelta = 1.0 - alignmentThresh;
        float adjustedPercent = ( percent - alignmentThresh ) / threshDelta;

        f = ( 0.5 - ( cos( adjustedPercent * PI_2 ) * -0.5 + 0.5 ) ) * delta;

        velocity += normalize(dir) * f;

      }
    }
  }

  // this make tends to fly around than down or up
  // if (velocity.y > 0.) velocity.y *= (1. - 0.2 * delta);

  // Speed Limits
  if ( length( velocity ) > limit ) {
    velocity = normalize( velocity ) * limit;
  }

  gl_FragColor = vec4( velocity, 1.0 );

}`,A2=`attribute vec2 reference;
attribute float birdVertex;

attribute vec3 birdColor;

uniform sampler2D texturePosition;
uniform sampler2D textureVelocity;

varying vec4 vColor;
varying float z;

uniform float time;
uniform float birdSize;

void main() {

  vec4 tmpPos = texture2D( texturePosition, reference );
  vec3 pos = tmpPos.xyz;
  vec3 velocity = normalize(texture2D( textureVelocity, reference ).xyz);

  vec3 newPosition = position;

  if ( birdVertex == 4.0 || birdVertex == 7.0 ) {
    // flap wings
    newPosition.y = sin( tmpPos.w ) * 5. * birdSize;
  }

  newPosition = mat3( modelMatrix ) * newPosition;

  velocity.z *= -1.;
  float xz = length( velocity.xz );
  float xyz = 1.;
  float x = sqrt( 1. - velocity.y * velocity.y );

  float cosry = velocity.x / xz;
  float sinry = velocity.z / xz;

  float cosrz = x / xyz;
  float sinrz = velocity.y / xyz;

  mat3 maty =  mat3(
    cosry, 0, -sinry,
    0    , 1, 0     ,
    sinry, 0, cosry
  );

  mat3 matz =  mat3(
    cosrz , sinrz, 0,
    -sinrz, cosrz, 0,
    0     , 0    , 1
  );
  newPosition =  maty * matz * newPosition;
  newPosition += pos;
  z = newPosition.z;

  vColor = vec4( birdColor, 1.0 );
  gl_Position = projectionMatrix *  viewMatrix  * vec4( newPosition, 1.0 );
}`,R2=`varying vec4 vColor;
varying float z;
uniform vec3 color;
void main() {
  // Fake colors for now
  float rr = 0.2 + ( 1000. - z ) / 1000. * vColor.x;
  float gg = 0.2 + ( 1000. - z ) / 1000. * vColor.y;
  float bb = 0.2 + ( 1000. - z ) / 1000. * vColor.z;
  gl_FragColor = vec4( rr, gg, bb, 1. );
}`,C2=function(e){const t=e.image.data;let n=0;const i=t.length;return(()=>{const r=[];for(;n<i;){const s=Math.random()*Lo-ih,o=Math.random()*Lo-ih,a=Math.random()*Lo-ih;t[n+0]=s,t[n+1]=o,t[n+2]=a,t[n+3]=1,r.push(n+=4)}return r})()},L2=function(e){const t=e.image.data;let n=0;const i=t.length;return(()=>{const r=[];for(;n<i;){const s=Math.random()-.5,o=Math.random()-.5,a=Math.random()-.5;t[n+0]=s*10,t[n+1]=o*10,t[n+2]=a*10,t[n+3]=1,r.push(n+=4)}return r})()};class i_ extends y2{static initClass(){this.prototype.defaultOptions={backgroundColor:465199,color1:16711680,color2:53759,colorMode:"varianceGradient",birdSize:1,wingSpan:30,speedLimit:5,separation:20,alignment:20,cohesion:20,quantity:5}}constructor(t){Ce=t.THREE||Ce,super(t)}initComputeRenderer(){this.gpuCompute=new _2(vn,vn,this.renderer,Ce);const t=this.gpuCompute.createTexture(),n=this.gpuCompute.createTexture();C2(t),L2(n),this.velocityVariable=this.gpuCompute.addVariable("textureVelocity",E2,n),this.positionVariable=this.gpuCompute.addVariable("texturePosition",T2,t),this.gpuCompute.setVariableDependencies(this.velocityVariable,[this.positionVariable,this.velocityVariable]),this.gpuCompute.setVariableDependencies(this.positionVariable,[this.positionVariable,this.velocityVariable]),this.positionUniforms=this.positionVariable.material.uniforms,this.velocityUniforms=this.velocityVariable.material.uniforms,this.positionUniforms.time={value:0},this.positionUniforms.delta={value:0},this.velocityUniforms.time={value:1},this.velocityUniforms.delta={value:0},this.velocityUniforms.testing={value:1},this.velocityUniforms.separationDistance={value:1},this.velocityUniforms.alignmentDistance={value:1},this.velocityUniforms.cohesionDistance={value:1},this.velocityUniforms.speedLimit={value:1},this.velocityUniforms.freedomFactor={value:1},this.velocityUniforms.predator={value:new Ce.Vector3},this.velocityVariable.material.defines.BOUNDS=Lo.toFixed(2),this.velocityVariable.wrapS=Ce.RepeatWrapping,this.velocityVariable.wrapT=Ce.RepeatWrapping,this.positionVariable.wrapS=Ce.RepeatWrapping,this.positionVariable.wrapT=Ce.RepeatWrapping;const i=this.gpuCompute.init();i!==null&&console.error(i)}initGpgpuBirds(){const t=Object.assign({},this.options,{effect:this}),n=w2(t);this.birdUniforms={color:{value:new Ce.Color(16720384)},texturePosition:{value:null},textureVelocity:{value:null},time:{value:1},delta:{value:0},birdSize:{value:this.options.birdSize}};const i=new Ce.ShaderMaterial({uniforms:this.birdUniforms,vertexShader:A2,fragmentShader:R2,side:Ce.DoubleSide}),r=new Ce.Mesh(n,i);return r.rotation.y=Math.PI/2,r.matrixAutoUpdate=!1,r.updateMatrix(),this.scene.add(r)}getNewCol(t){const n=this.options,i=n.color1!=null?n.color1:4456448,r=n.color2!=null?n.color2:6684672,s=new Ce.Color(i),o=new Ce.Color(r),a=n.colorMode.indexOf("Gradient")!=-1;let c,l;if(a?l=Math.random():l=t,n.colorMode.indexOf("variance")==0){const h=(s.r+Math.random()*o.r).clamp(0,1),u=(s.g+Math.random()*o.g).clamp(0,1),f=(s.b+Math.random()*o.b).clamp(0,1);c=new Ce.Color(h,u,f)}else n.colorMode.indexOf("mix")==0?c=new Ce.Color(i+l*r):c=s.lerp(o,l);return c}onInit(){this.camera=new Ce.PerspectiveCamera(75,this.width/this.height,1,3e3),this.camera.position.z=350,this.fog=new Ce.Fog(16777215,100,1e3),this.mouseX=this.mouseY=0;const t=this.birds=[],n=this.boids=[],i=this.options;let r,s;if(nh)try{this.initComputeRenderer(),this.valuesChanger=this.valuesChanger.bind(this),this.valuesChanger(),this.initGpgpuBirds()}catch(l){console.error("[vanta.js] birds init error: ",l)}else{const l=6*Math.pow(2,i.quantity);for(var o=0;o<l;o++){r=n[o]=new S2(i),r.position.x=Math.random()*400-200,r.position.y=Math.random()*400-200,r.position.z=Math.random()*400-200,r.velocity.x=Math.random()*2-1,r.velocity.y=Math.random()*2-1,r.velocity.z=Math.random()*2-1,r.setWorldSize(500,500,300);const h=i.colorMode.indexOf("Gradient")!=-1,u=M2(i),f=u.attributes.position.length,d=new Ce.BufferAttribute(new Float32Array(f),3);if(h)for(var a=0;a<u.index.array.length;a+=3)for(var c=0;c<=2;c++){const p=u.index.array[a+c],y=this.getNewCol();d.array[p*3]=y.r,d.array[p*3+1]=y.g,d.array[p*3+2]=y.b}else{const p=this.getNewCol(o/l);for(var a=0;a<d.array.length;a+=3)d.array[a]=p.r,d.array[a+1]=p.g,d.array[a+2]=p.b}u.setAttribute("color",d),s=t[o]=new Ce.Mesh(u,new Ce.MeshBasicMaterial({color:16777215,side:Ce.DoubleSide,vertexColors:Ce.VertexColors})),s.phase=Math.floor(Math.random()*62.83),s.position.x=n[o].position.x,s.position.y=n[o].position.y,s.position.z=n[o].position.z,this.scene.add(s)}}}valuesChanger(){this.velocityUniforms&&(this.velocityUniforms.separationDistance.value=this.options.separation,this.velocityUniforms.alignmentDistance.value=this.options.alignment,this.velocityUniforms.speedLimit.value=this.options.speedLimit,this.velocityUniforms.cohesionDistance.value=this.options.cohesion)}onUpdate(){this.now=performance.now(),this.last||(this.last=this.now);let t=(this.now-this.last)/1e3;if(t>1&&(t=1),this.last=this.now,nh)this.positionUniforms.time.value=this.now,this.positionUniforms.delta.value=t,this.velocityUniforms.time.value=this.now,this.velocityUniforms.delta.value=t,this.birdUniforms.time.value=this.now,this.birdUniforms.delta.value=t,this.velocityUniforms.predator.value.set(this.mouseX,-this.mouseY,0),this.mouseX=1e4,this.mouseY=1e4,this.gpuCompute.compute(),this.birdUniforms.texturePosition.value=this.gpuCompute.getCurrentRenderTarget(this.positionVariable).texture,this.birdUniforms.textureVelocity.value=this.gpuCompute.getCurrentRenderTarget(this.velocityVariable).texture;else{const r=this.birds,s=this.boids;let o,a;for(var n=0,i=r.length;n<i;n++){o=s[n],o.run(s),a=r[n],a.rotation.y=Math.atan2(-o.velocity.z,o.velocity.x),a.rotation.z=Math.asin(o.velocity.y/o.velocity.length()),a.phase=(a.phase+(Math.max(0,a.rotation.z)+.1))%62.83;const c=16,l=13;a.geometry.attributes.position.array[c]=a.geometry.attributes.position.array[l]=Math.sin(a.phase)*5*this.options.birdSize,a.geometry.attributes.position.needsUpdate=!0,a.geometry.computeVertexNormals(),a.position.x=s[n].position.x,a.position.y=s[n].position.y,a.position.z=s[n].position.z}}}onMouseMove(t,n){if(this.mouseX=t-.5,this.mouseY=n-.5,!nh){const o=this.boids;let a;for(var i=new Ce.Vector3(this.mouseX*this.width,-this.mouseY*this.height,0),r=0,s=o.length;r<s;r++)a=o[r],i.z=a.position.z,a.repulse(i)}}onDestroy(){}onResize(){}}i_.initClass();const P2=li.register("BIRDS",i_),I2={name:"vanta2",data(){return{vantaEffect:null}},mounted(){this.vantaEffect=P2({el:"#box",THREE:p2,mouseControls:!0,touchControls:!0,gyroControls:!1,scale:1,scaleMobile:1})}},O2={id:"box"};function D2(e,t,n,i,r,s){return ui(),hi("div",O2," dd ")}const N2=_y(I2,[["render",D2],["__scopeId","data-v-f48504d2"]]),F2={__name:"about2",emits:["onReceiveMsg"],setup(e,{emit:t}){const n=Rt(""),i=t,r=()=>{i("onReceiveMsg",n.value)};return(s,o)=>(ui(),hi("div",null,[o[1]||(o[1]=it("h3",null,"这是子组件接收的父组件信息",-1)),hh(it("input",{"onUpdate:modelValue":o[0]||(o[0]=a=>n.value=a),placeholder:"请输入传给父组件的值"},null,512),[[vw,n.value]]),it("button",{onClick:r},"点击传值给父组件参数")]))}},B2={__name:"about1",setup(e){const t=Rt(""),n=i=>{console.log("接收子组件的值",i),t.value=i};return(i,r)=>(ui(),hi("div",null,[r[1]||(r[1]=it("h2",null,"这是父组件",-1)),it("div",null,[r[0]||(r[0]=it("h4",null,"子组件触发父组件接收的值",-1)),it("p",null,xr(t.value),1)]),r[2]||(r[2]=it("h4",null,"下方是子组件的内容",-1)),zt(F2,{onOnReceiveMsg:n})]))}},U2=[{name:"home",path:"/",component:MT},{name:"test",path:"/test",component:N2},{name:"about",path:"/about",component:B2}],z2=vT({history:XS(),routes:U2});/*!
 * pinia v3.0.3
 * (c) 2025 Eduardo San Martin Morote
 * @license MIT
 */const H2=Symbol();var ug;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(ug||(ug={}));function G2(){const e=y_(!0),t=e.run(()=>Rt({}));let n=[],i=[];const r=Fg({install(s){r._a=s,s.provide(H2,r),s.config.globalProperties.$pinia=r,i.forEach(o=>n.push(o)),i=[]},use(s){return this._a?n.push(s):i.push(s),this},_p:n,_a:null,_e:e,_s:new Map,state:t});return r}const V2=G2(),Zl=bw(ET);Zl.use(z2);Zl.use(V2);Zl.use(pS);Zl.mount("#app");
